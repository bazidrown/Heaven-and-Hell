/* HyperRandom */
/* Compatibility: Definitive Edition */
/*
by Zetnus
zetnus@outlook.com
zetnus on Discord

Most recent update: 27 February 2025

Changelog moved to the end of the script

The goal of HyperRandom is to provide a large amount of variation, while still making it reasonably fair, by providing the same variation for each player.
HyperRandom will generate maps that seem similar to standard maps, but does so at random.  There is no pack of maps that are chosen from; rather many different parameters are varied.
You can customize HyperRandom to your own preferences, by commenting or uncommenting definitions at the top of the script.


This map can be downloaded from the following links
https://www.ageofempires.com/mods/details/829/
https://mods.aoe2.se/829
https://aok.heavengames.com/blacksmith/showfile.php?fileid=13407
https://aoe2map.net/map/ded481/zetnuss-hyperrandom

Learn about random map scripting: https://tinyurl.com/7xteyu58

*/


#define TRUE /* define true so it is true */

/* =================================================================================================== */
/* version selection */

/*	#define HR_FULL	*/
/*	#define HR_LAND	*/
/*	#define HR_LIGHT	*/
/*	#define HR_LIGHT_LAND	*/
/*	#define HR_LIGHT_NOISLES	*/
/*	#define HR_MICRO	*/
/*	#define HR_NANO	*/
/*	#define HR_NOISLES	*/
/*	#define HR_NOMAD	*/
	#define HR_WALLED	
/*	#define HR_WATER	*/
/*	#define HR_X256	*/
/*	#define HR_X9	*/
/*	#define HR_FEITORIA */
/*	#define HR_EXTREME	*/
/*	#define HR_CUSTOM	*/

	
if HR_FULL				#define HYPERRANDOM_DEFAULT	#define ALL_STYLES
elseif HR_LAND			#define HYPERRANDOM_DEFAULT	#define LAND_ONLY	#define NO_MICHI		#define OPEN_MAP	#define NEVER_NOMAD	#define NEVER_WALLS
elseif HR_LIGHT			#define HYPERRANDOM_LIGHT	#define ALL_STYLES	#define NO_MICHI
elseif HR_LIGHT_LAND	#define HYPERRANDOM_LIGHT	#define LAND_ONLY	#define NO_MICHI		#define OPEN_MAP	#define NEVER_NOMAD	#define NEVER_WALLS
elseif HR_LIGHT_NOISLES	#define HYPERRANDOM_LIGHT	#define ALL_STYLES	#define NO_ISLANDS		#define NO_MICHI
elseif HR_MICRO			#define HYPERRANDOM_DEFAULT	#define ALL_STYLES	#define MAPSIZE_MICRO
elseif HR_NANO			#define HYPERRANDOM_DEFAULT	#define ALL_STYLES	#define MAPSIZE_NANO
elseif HR_NOISLES		#define HYPERRANDOM_DEFAULT	#define ALL_STYLES	#define NO_ISLANDS		#define NO_MICHI
elseif HR_NOMAD			#define HYPERRANDOM_DEFAULT	#define ALL_STYLES	#define ALWAYS_NOMAD	#define NEVER_WALLS
elseif HR_WALLED		#define HYPERRANDOM_DEFAULT	#define LAND_ONLY	#define NO_ISLANDS		#define NO_MICHI	#define NEVER_NOMAD	#define ALWAYS_WALLS
elseif HR_WATER			#define HYPERRANDOM_DEFAULT	#define WATER_ONLY	#define NEVER_NOMAD		#define NEVER_WALLS
elseif HR_X256			#define HYPERRANDOM_DEFAULT	#define ALL_STYLES	#includeXS x256tech.xs
elseif HR_X9			#define HYPERRANDOM_DEFAULT	#define ALL_STYLES	#includeXS x9tech.xs
elseif HR_FEITORIA		#define HYPERRANDOM_DEFAULT	#define ALL_STYLES	#define ALWAYS_FEITORIA
elseif HR_EXTREME		#define HYPERRANDOM_EXTREME	#define ALL_STYLES
else	#define HR_CUSTOM
endif

if HR_CUSTOM
/* pick exactly one base version! */
	#define HYPERRANDOM_DEFAULT	
/*	#define HYPERRANDOM_LIGHT	*/	/* standard resources; map layouts a bit more balanced */
/*	#define HYPERRANDOM_EXTREME	*/
/*	#define HYPERRANDOM_CUSTOM	*/	/* make your own */

/* pick exactly one map style! */
	#define ALL_STYLES	
/*	#define LAND_ONLY	*/	/* no water allowed */
/*	#define WATER_ONLY	*/	/* always try to be a hybrid or water map */
	
/* optional map style modifers */
/*	#define NO_ISLANDS	*/	/* water completely separating players */
/*	#define NO_MICHI	*/	/* forest completely separating players */
/*	#define OPEN_MAP	*/		/* wider connections and connection through any central forests */

/* more optional settings */
/*	#define ALWAYS_NOMAD	*/
/*	#define NEVER_NOMAD	*/
/*	#define DISABLE_NOMAD_TREATY	*/

/*	#define ALWAYS_WALLS	*/
/*	#define NEVER_WALLS	*/
/*	#includeXS x256tech.xs	*/	/* uncomment to allow techs to be researched 256 times */
/*	#includeXS x9tech.xs	*/
/*	#define ALWAYS_FEITORIA	*/
/*	#define USE_RESPAWNING_RESOURCES	*/	/* still experimental */
/*	#define NO_RESOURCE_DELTA	*/	/* each resource node will have the expected amount of resources */
/*	#define REGICIDE_ONLY_KING	*/	/* regicide only spawns a king and not a castle and extra villagers */

/* force an extra small map */
/*	#define MAPSIZE_NANO	*/	/* 36x36 always */
/*	#define MAPSIZE_MICRO	*/	/* 60x60 or 80x80 for water/forest maps */
/*	#define MAPSIZE_PUNY	*/	/* 100x100 or 120x120 for water/forest maps */

/* testing */
	#define TESTING_NO_HUNT_OVERRIDE	/* for the scenario editor - deer c is always deer instead of horses/camels/monkeys/penguins */

endif

if HYPERRANDOM_DEFAULT
	#define ALLOW_FULL_RANDOM_PLACEMENT	/* allow player lands to ignore the usual circle placement - this makes it much more random, but considerably less fair */
	#define ALLOW_RANDOM_ZONES	/* comment this out If you do not want random zone assignment to be an option for player lands. ie. you might share an island with an enemy If you allow this */
	#define ALLOW_DOUBLE_PLAYER_LANDS	/* chance for a second set of lands for each player */
	#define ALLOW_RANDOM_CORNERS	/* determines If unequal corners are allowed; comment out to ensure symmetrical corner lands */
	#define ALLOW_WATER_ELEVATION	/* comment out If you don't want the option of hilly water - even then, hilly water may sometimes still occur at the edges of lands */
	#define ALLOW_NOMAD_WITHOUT_TC_RES	/* players may need to gather wood before building a TC - they will get a mule cart */
	#define ALLOW_RANDOM_SCOUT	/* this enables the chance to choose a scout entirely at random, from a wide selection of possible units.  Will only happen when standard starting units are disabled. */
	#define ALLOW_RANDOM_BUILDINGS	/* this enables the chance to choose a bonus starting building entirely at random, from almost all possible buildings in game.  Will only happen when standard starting units are disabled. */	
	#define ALLOW_DEFEND_THE_WONDER	/* allows a custom win condition when the random building is a large monument. When it is destroyed a player loses */
	#define ALLOW_RANDOM_BOAT	/* this enables the chance to choose a bonus starting boat, from a wide selection of possible units.  Will only happen when standard starting units are disabled. */	
	#define ALLOW_MODIFIED_STARTING_STOCKPILE	/* allow the map script to randomly modify your starting resource stockpile - equally for all players. */
	#define ALLOW_BETWEEN_RUSH_RESOURCES
	#define ALLOW_CORNER_RUSH_RESOURCES	/* allow gold/stone/boar/deer/forage -rush syle - i.e. large amounts of one of these resources might be placed on  all 4 corners. */
	#define ALLOW_SIDE_RUSH_RESOURCES	/* only fish/oysters */
	#define ALLOW_RELIC_RUSH	/* relic-rush syle - i.e. large amounts of one of relics might be placed on the center land, If there is one. */
	#define ALLOW_MONUMENT	/* allow a monument to spawn in the center, even when not playing king of the hill. */
	#define ALLOW_EMPIRE_WARS	/* allow empire wars -style starts to occur, even when not selected in the lobby */
	#define USE_RANDOM_RELIC_COUNT	/* random gives a randomized relic count, but still evenly spaced */
	#define ALLOW_PERSONAL_RELIC	/* additionally, and independent of what you choose above, you can choose to allow the possibility that players start with a relic at their base */
	#define ALLOW_OYSTERS	/* allows oysters to spown as a gold source */
elseif HYPERRANDOM_LIGHT
	#define NO_SMALL_PONDS		/* arabia, classic gold rush, black forest are examples of maps that have small ponds */
	#define USE_STANDARD_STARTING_UNITS	/* force standard starting units and buildings, otherwise you might get extra villagers, buildings and/or a different kind of scout */
	#define USE_STANDARD_RESOURCES	/* force standard starting and map resources - otherwise, resources clumps may be larger or smaller and may contain variable amounts of resources */
	#define NO_GAIA_ARMIES	/* prevent gaia armies guarding the monument when playing king of the hill */
	#define NO_MONUMENT_UNITS	/* prevent trainable units from the monument when playing king of the hill */
	#define USE_DE_RELIC_BALANCE	/* DE balance is 5 on smaller maps and more on larger maps */
	#define REDUCE_ELEVATION	/* smaller hills */
	#define NO_GAIA_REGEN	/* gaia animals will not slowly regen hitpoints */
	#define NO_RESOURCE_DELTA	/* each resource node will have the expected amount of resources */
	if ANTIQUITY_MODE ALLOW_OYSTERS endif
elseif HYPERRANDOM_EXTREME
	#define ALLOW_NOMAD_WITHOUT_TC_RES	/* players may need to gather wood before building a TC - they will get a mule cart */
	#define ALLOW_NIGHT_COLOR_CORRECTION	
	#define EXTREME_BUILDINGS
	#define EXTREME_SCOUTS
	#define EXTREME_BOATS
	#define EXTREME_RESOURCES
	#define EXTREME_CHANCES
	#define ALLOW_RESOURCE_ROCKS	/* gold and stone rocks */
	#define ALLOW_FULL_RANDOM_PLACEMENT	/* allow player lands to ignore the usual circle placement - this makes it much more random, but considerably less fair */
	#define ALLOW_RANDOM_ZONES	/* comment this out If you do not want random zone assignment to be an option for player lands. ie. you might share an island with an enemy If you allow this */
	#define ALLOW_DOUBLE_PLAYER_LANDS	/* chance for a second set of lands for each player */
	#define ALLOW_RANDOM_CORNERS	/* determines If unequal corners are allowed; comment out to ensure symmetrical corner lands */
	#define ALLOW_WATER_ELEVATION	/* comment out If you don't want the option of hilly water - even then, hilly water may sometimes still occur at the edges of lands */
	#define ALLOW_NOMAD_WITHOUT_TC_RES	/* players may need to gather wood before building a TC - they will get a mule cart */
	#define ALLOW_RANDOM_SCOUT	/* this enables the chance to choose a scout entirely at random, from a wide selection of possible units.  Will only happen when standard starting units are disabled. */
	#define ALLOW_RANDOM_BUILDINGS	/* this enables the chance to choose a bonus starting building entirely at random, from almost all possible buildings in game.  Will only happen when standard starting units are disabled. */	
	#define ALLOW_DEFEND_THE_WONDER	/* allows a custom win condition when the random building is a large monument. When it is destroyed a player loses */
	#define ALLOW_RANDOM_BOAT	/* this enables the chance to choose a bonus starting boat, from a wide selection of possible units.  Will only happen when standard starting units are disabled. */	
	#define ALLOW_MODIFIED_STARTING_STOCKPILE	/* allow the map script to randomly modify your starting resource stockpile - equally for all players. */
	#define ALLOW_BETWEEN_RUSH_RESOURCES	
	#define ALLOW_CORNER_RUSH_RESOURCES	/* allow gold/stone/boar/deer/forage -rush syle - i.e. large amounts of one of these resources might be placed on  all 4 corners. */
	#define ALLOW_SIDE_RUSH_RESOURCES	/* only fish/oysters */
	#define ALLOW_RELIC_RUSH	/* relic-rush syle - i.e. large amounts of one of relics might be placed on the center land, If there is one. */
	#define ALLOW_MONUMENT	/* allow a monument to spawn in the center, even when not playing king of the hill. */
	#define ALLOW_EMPIRE_WARS	/* allow empire wars -style starts to occur, even when not selected in the lobby */
	#define USE_RANDOM_RELIC_COUNT	/* random gives a randomized relic count, but still evenly spaced */
	#define ALLOW_PERSONAL_RELIC	/* additionally, and independent of what you choose above, you can choose to allow the possibility that players start with a relic at their base */
	#define ALLOW_OYSTERS	/* allows oysters to spown as a gold source */
elseif HYPERRANDOM_CUSTOM
	/* make your own */
	
endif

/* stuff to always include */
if TRUE
	#define NOMAD_ALLIED_VISION	/* enables shared exploration after a TC is built - shared exploration must be disabled in the lobby */
	#define ALLOW_GAIA_DOCKS	/* allow neutral docks to spawn in the corners, which players can trade with */
	#define ALLOW_NEUTRAL_MARKET	/* allow a neutral market to spawn in the center, which players can trade with */
	#define ALLOW_CENTER_RUSH_RESOURCES	/* allow gold/stone/boar/deer/forage -rush syle - i.e. large amounts of one of these resources might be placed on the center land, If there is one. */
endif


if DEATH_MATCH
	#define NO_MICHI
	#define NO_ISLANDS
	#define NEVER_NOMAD
	#define DM_SCOUT_POOL /* requires allowing random scouts */
	#define NO_STONG_WALLS	/* nothing stronger than stone walls */
	#define KEEP_CENTER_OPEN	/* passage through center if center is a forest */
	#define PREFER_WIDER_CONNECTIONS
	#define NO_STONE_RUSH
	#define LIMIT_STONE
	#define REDUCE_ELEVATION
endif

if BATTLE_ROYALE
	#define NO_MICHI
	#define NO_ISLANDS
	#define OPEN_MAP
endif

if OPEN_MAP
	#define KEEP_CENTER_OPEN	/* passage through center if center is a forest */
	#define PREFER_WIDER_CONNECTIONS
	#define NEVER_WALLS
else	/* occasionally generate an open map anyway */
	start_random
		percent_chance 2	#define KEEP_CENTER_OPEN
		percent_chance 3	#define PREFER_WIDER_CONNECTIONS
		percent_chance 4	#define KEEP_CENTER_OPEN	#define PREFER_WIDER_CONNECTIONS
	end_random
endif	

if ALL_STYLES

elseif LAND_ONLY
	#define NO_WATER_BASED_MAPS	/* islands, rivers, coastal, continental, yucatan, nomad are examples of water-based map styles */
	#define NO_LAKES	/* baltic, mediteranean, oasis, four lakes, acropolis are examples of map styles with lakes */
	#define NO_SMALL_PONDS	/* arabia, classic gold rush, black forest are examples of maps that have small ponds */
elseif WATER_ONLY
	
endif

/* currently unused */
/*	#define USE_5_RELICS */	/* always gives 5 relics */
/*	#define USE_EVENLY_SPACED_RELICS */	/* even spacing will give as many as fit on the map, but with a large spacing so the amount will not be excessive */

/* =================================================================================================== */

/* modify how often you want to have a nomad start (no town center and scattered villagers) */
if ALWAYS_NOMAD	#define USE_NOMAD_SETUP
elseif NEVER_NOMAD
elseif EMPIRE_WARS
elseif BATTLE_ROYALE
elseif DEFEND_WONDER
elseif DEATH_MATCH
else
	start_random
		percent_chance 9	#define USE_NOMAD_SETUP
	end_random
endif

if USE_NOMAD_SETUP
	#define NO_ISLANDS
	#define NO_MICHI
endif

/* modify how often you want walls */
if ALWAYS_WALLS #define USE_WALLS 
elseif NEVER_WALLS
elseif USE_NOMAD_SETUP
else
	start_random
		percent_chance 11	#define USE_WALLS
	end_random
endif

/* If the "team together" box is ticked, there is a chance of being grouped very closely to team members in one part of the map (like lombardia or team acropolis) */
if FIXED_POSITIONS  
	start_random
		percent_chance 4	#define USE_TEAM_GROUPING	
	end_random
endif
	

/* =================================================================================================== */
/* the base terrain is either land, water or forest */
/* arabia, mongolia, baltic, ghost lake, acropolis, land nomad, are examples of land-based maps */
/* islands, rivers, coastal, continental, yucatan, classic nomad, are examples of water-based maps */
/* black forest, arena, michi, are examples of forest-based maps */
		
if NO_WATER_BASED_MAPS
	start_random
		percent_chance 74	#define LAND_BASED_MAP
		percent_chance 25	#define FOREST_BASED_MAP
	end_random
elseif WATER_ONLY	
	start_random
		percent_chance 38	#define LAND_BASED_MAP	#define FORCE_LAKE
		percent_chance 60	#define WATER_BASED_MAP		
		percent_chance 1	#define FOREST_BASED_MAP	#define FORCE_LAKE
	end_random
elseif BATTLE_ROYALE	/* prefer land */
	start_random
		percent_chance 79	#define LAND_BASED_MAP
		percent_chance 10	#define WATER_BASED_MAP
		percent_chance 10	#define FOREST_BASED_MAP
	end_random
else
	start_random
		percent_chance 39	#define LAND_BASED_MAP
		percent_chance 40	#define WATER_BASED_MAP
		percent_chance 20	#define FOREST_BASED_MAP
	end_random
endif

if FOREST_BASED_MAP
	if NO_MICHI
	else
		start_random
			percent_chance 4	#define USE_MICHI_STYLE    /* forest completely separating players - probability is (forest chance)x(michi chance) - currently 1% ; effective chance is even lower due interference from center land and zones */
		end_random
	endif
elseif WATER_BASED_MAP
	if NO_ISLANDS
	else
		if WATER_ONLY
			start_random
				percent_chance 49	#define USE_ISLANDS_STYLE   /* water completely separating players - probability is (water chance)x(islands chance) - currently 20%  -  actual chance is lower due to zones and central land */
			end_random
		else
			start_random
				percent_chance 24	#define USE_ISLANDS_STYLE   /* water completely separating players - probability is (water chance)x(islands chance) - currently 10%  -  actual chance is lower due to zones and central land */
			end_random
		endif
	endif
endif

/* =================================================================================================== */

if WATER_BASED_MAP	#define ENLARGE_MAP
elseif FOREST_BASED_MAP	#define ENLARGE_MAP
endif

/* water and forest maps need more space */
if ENLARGE_MAP
	if MAPSIZE_NANO				override_map_size 36	#define 36x36	#define TINY_OR_SMALLER	#define MINI_OR_SMALLER
	elseif MAPSIZE_MICRO		override_map_size 80	#define 80x80	#define TINY_OR_SMALLER	#define MINI_OR_SMALLER
	elseif MAPSIZE_MINI			override_map_size 100	#define 100x100	#define TINY_OR_SMALLER
	elseif MAPSIZE_PUNY			override_map_size 120	#define 120x120	#define TINY_OR_SMALLER
	elseif MAPSIZE_TINY			override_map_size 144	#define 144x144
	elseif MAPSIZE_SMALL		override_map_size 168	#define 168x168
	elseif MAPSIZE_MEDIUM		override_map_size 200	#define 200x200
	elseif MAPSIZE_NORMAL		override_map_size 220	#define 220x220
	elseif MAPSIZE_LARGE		override_map_size 240	#define 240x240	#define HUGE_OR_LARGER
	elseif MAPSIZE_HUGE			override_map_size 252	#define 252x252	#define HUGE_OR_LARGER
	elseif MAPSIZE_GIANT		override_map_size 276	#define 276x276	#define HUGE_OR_LARGER
	elseif MAPSIZE_MASSIVE		override_map_size 300	#define 300x300	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER
	elseif MAPSIZE_ENORMOUS		override_map_size 320	#define 320x320	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER
	elseif MAPSIZE_COLOSSAL		override_map_size 360	#define 360x360	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER	#define INCREDIBLE_OR_LARGER
	elseif MAPSIZE_INCREDIBLE	override_map_size 400	#define 400x400	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER	#define INCREDIBLE_OR_LARGER
	elseif MAPSIZE_MONSTROUS	override_map_size 480	#define 480x480	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER	#define INCREDIBLE_OR_LARGER
	elseif MAPSIZE_LUDICROUS							#define 480x480	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER	#define INCREDIBLE_OR_LARGER
	endif
else
	if MAPSIZE_NANO			override_map_size 36	#define 36x36	#define TINY_OR_SMALLER	#define MINI_OR_SMALLER
	elseif MAPSIZE_MICRO	override_map_size 60	#define 60x60	#define TINY_OR_SMALLER	#define MINI_OR_SMALLER
	elseif MAPSIZE_MINI								#define 80x80	#define TINY_OR_SMALLER	#define MINI_OR_SMALLER
	elseif MAPSIZE_PUNY		override_map_size 100	#define 100x100	#define TINY_OR_SMALLER
	elseif MAPSIZE_TINY								#define 120x120	#define TINY_OR_SMALLER
	elseif MAPSIZE_SMALL		#define 144x144
	elseif MAPSIZE_MEDIUM		#define 168x168
	elseif MAPSIZE_NORMAL		#define 200x200
	elseif MAPSIZE_LARGE		#define 220x220
	elseif MAPSIZE_HUGE			#define 240x240	#define HUGE_OR_LARGER
	elseif MAPSIZE_GIANT		#define 252x252	#define HUGE_OR_LARGER
	elseif MAPSIZE_MASSIVE		#define 276x276	#define HUGE_OR_LARGER
	elseif MAPSIZE_ENORMOUS		#define 300x300	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER
	elseif MAPSIZE_COLOSSAL		#define 320x320	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER
	elseif MAPSIZE_INCREDIBLE	#define 360x360	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER	#define INCREDIBLE_OR_LARGER
	elseif MAPSIZE_MONSTROUS	#define 400x400	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER	#define INCREDIBLE_OR_LARGER
	elseif MAPSIZE_LUDICROUS	#define 480x480	#define HUGE_OR_LARGER	#define ENORMOUS_OR_LARGER	#define INCREDIBLE_OR_LARGER
	endif
endif

/* =================================================================================================== */

if EMPIRE_WARS
	if DARK_AGE_START	#define EW_DARK
	elseif FEUDAL_AGE_START	#define EW_FEUDAL
	elseif CASTLE_AGE_START	#define EW_FEUDAL
	elseif IMPERIAL_AGE_START	#define EW_FEUDAL
	elseif POST_IMPERIAL_AGE_START	#define EW_FEUDAL
	endif
elseif USE_NOMAD_SETUP
elseif DEATH_MATCH
elseif ALLOW_EMPIRE_WARS
	start_random
		percent_chance 49	#define CONSIDER_SECONDARY_EMPIRE_WARS
	end_random
endif

if CONSIDER_SECONDARY_EMPIRE_WARS
	start_random
		percent_chance 1	#define EW_DARK	#define EMPIRE_WARS
		percent_chance 1	#define EW_FEUDAL	#define EMPIRE_WARS
	end_random
endif

/* =================================================================================================== */

if 8_PLAYER_GAME	 #define 3+PLAYERS #define 4+PLAYERS #define 5+PLAYERS #define 6+PLAYERS #define 7+PLAYERS	#define EVEN_PLAYERS
elseif 7_PLAYER_GAME #define 3+PLAYERS #define 4+PLAYERS #define 5+PLAYERS #define 6+PLAYERS #define 7+PLAYERS
elseif 6_PLAYER_GAME #define 3+PLAYERS #define 4+PLAYERS #define 5+PLAYERS #define 6+PLAYERS #define 6-PLAYERS	#define EVEN_PLAYERS
elseif 5_PLAYER_GAME #define 3+PLAYERS #define 4+PLAYERS #define 5+PLAYERS #define 5-PLAYERS #define 6-PLAYERS
elseif 4_PLAYER_GAME #define 3+PLAYERS #define 4+PLAYERS #define 4-PLAYERS #define 5-PLAYERS #define 6-PLAYERS	#define EVEN_PLAYERS
elseif 3_PLAYER_GAME #define 3+PLAYERS #define 3-PLAYERS #define 4-PLAYERS #define 5-PLAYERS #define 6-PLAYERS
elseif 2_PLAYER_GAME #define 3-PLAYERS #define 4-PLAYERS #define 5-PLAYERS #define 6-PLAYERS	#define EVEN_PLAYERS
elseif 1_PLAYER_GAME #define 3-PLAYERS #define 4-PLAYERS #define 5-PLAYERS #define 6-PLAYERS
endif

/* =================================================================================================== */
/* biomes */ 

/* a biome consists of:
#const LAND_A	base for the map and lands
#const LAND_X	alternative base that can be used for the central land or corner/side lands
#const LAND_B	large patches of this on the primary terrain  (layered underneath primary terrain)
#const LAND_C	small patches on the secondary terrain 	(layered underneath secondary terrain)
#const LAND_D	small patches on the primary terrain (layered above primary terrain)
#const LAND_Z	terrain that cannot be built on (ice/rock/quicksand/bogland)
#const ROAD_A	used for connecting team members
#const HILL_A	used only on elevated portions; should be different from A, but can be the same as X
#const HILL_B	layered above hill A

#const FOREST_A		main forest - could be map base terrain
#const FOREST_B		mixer for the main forest
#const FOREST_C		mixer for the main forest
#const FOREST_FILLER	tree type to fill forests with that are not 100% dense
#const HILL_FOREST		forest to use preferentially on hills

#const WATER_A		usually standard shallow water
#const WATER_B		mixer for primary water - usually medium water
#const WATER_C		mixer for secondary water - usually deep water
#const SHALLOWS_A	usually shallows, sometimes ice shallows or mangroveshallows
#const BEACH_A		usually a beach type

#const STRAGGLER_A		straggler tree style (often from forest A)
#const STRAGGLER_B		straggler tree style (often from forest B)
#const STRAGGLER_C		straggler tree style (often from forest C)

and an animal biome group, which will cover the following:
#const BERRY_TYPE
#const SHEEP_A
#const SHEEP_B
#const BOAR_A
#const BOAR_B
#const DEER_A
#const DEER_B
#const PREDATOR_A
#const BIRD_A
#const BIRD_B
#const BIRD_C
#const FISH_A
#const FISH_B
#const SHOREFISH_C
#const DEEPFISH_D
#const HERO_ANIMAL
a wild animal to make huntable

a color correction 
a cliff type
*/

/* =================================================================================================== */
/* biome descriptions */
/*
Polar - all snow, water maybe frozen, snow pines
	Tundra - all snow, water not frozen, snow pines (now part of polar)
Taiga - snow with patches of grass and leaves, snow pines
	Frozen-taiga - like taiga, but water frozen (now part of taiga)
	Boreal-swamp - taiga with extra shallows (now part of taiga)
Alpine - grass with snow patches, pines and snow pines
Highland - pine with oak, more dirt 
	Asian-highland - bamboo with pine  (now part of highland)
Temperate - oak with pine, more grass
	Asian-temperate - bamboo with oak (now part of temperate)
	Temperate-swamp - temperate with mangroveshallows (now part of temperate)
	Mediteranean - mediteranean forest (part of temperate)
	Bush forest - part of temperate
Autumn - temperate with autumn trees
Autumn-snow - snowy temperate with snowy autumn trees
Jungle - jungle and rainforest
	Asian-jungle - bamboo with jungle (now part of jungle)
	Temperate-jungle - jungle with oak (now part of jungle)
	Jungle-swamp - jungle with mangroves (now part of jungle)
Tropical - palms and jungle, grass and sand and bright water
	Tropical-swamp - tropical with mangroveshallows or reeds (now part of tropical)
Savannah - african forests, dirt and dry grass
Desert - maybe less water, lots of sandy desert, sandy connections (can be reeds)
High-desert - like desert, pines and lots of dirt
	Gravel-desert - high desert with gravel terrains
Mangrove-swamp - mangrove shallows with mangrove forests
	Reed-swamp - mangrove shallows with reed forests
Wasteland - bonus biome; dead trees, burning black terrain
*/


start_random
	percent_chance 4	#define POLAR_BIOME
	percent_chance 5	#define TAIGA_BIOME
	percent_chance 5	#define ALPINE_BIOME
	percent_chance 10	#define HIGHLAND_BIOME
	percent_chance 18	#define TEMPERATE_BIOME	 
	percent_chance 5	#define AUTUMN_TEMPERATE_BIOME
	percent_chance 5	#define AUTUMN_SNOW_BIOME
	percent_chance 10	#define JUNGLE_BIOME
	percent_chance 10	#define TROPICAL_BIOME
	percent_chance 10	#define SAVANNAH_BIOME
	percent_chance 10	#define DESERT_BIOME
	percent_chance 5	#define HIGH_DESERT_BIOME
	percent_chance 1	#define MANGROVE_SWAMP_BIOME 
	percent_chance 1	#define WASTELAND_BIOME
end_random 


if LAND_ONLY
	if MANGROVE_SWAMP_BIOME
		#define TEMPERATE_BIOME
	endif
endif


/* =================================================================================================== */
/* the actual biomes are handled here */

if POLAR_BIOME	/* =================================================================================================== */
	#define ARCTIC_ANIMALS
	#const CLIFFS_TYPE 2
	
	#const LAND_A 32	/* snow */
	#const LAND_X 73	/* snow weak layering */
	#const LAND_B 74	/* snow strong layering */
	#const LAND_C 72	/* underbrush snow */
	#const LAND_D 70	/* gravel */
	#const ROAD_A 38	/* road snow */
	#const HILL_A 81	/* wet gravel */
	#const HILL_B 82	/* ice */
	#const FOREST_A 106	/* dead forest */
	#const FOREST_B 21	/* snow pine */
	#const FOREST_C 105	/* autumn snow */
	#const FOREST_FILLER 1054	/* snow bush */
	#const HILL_FOREST 21	/* snow pine */

	if WATER_ONLY
	else
		start_random 
			percent_chance 32 #define FREEZE_ALL_WATER
			percent_chance 33 #define FREEZE_PRIMARY_AND_SECONDARY_WATER
		end_random
	endif
	
	if FREEZE_ALL_WATER
		#const WATER_A 35	/* ice */
		#const WATER_B 35	/* ice */
		#const WATER_C 35	/* ice */	
		#const LAND_Z 35	/* ice */
	elseif FREEZE_PRIMARY_AND_SECONDARY_WATER
		start_random
			percent_chance 49	#const WATER_C 1	/* water */
			percent_chance 50	#const WATER_C 58	/* azure water */
		end_random
		#const WATER_A 35	/* ice */
		#const WATER_B 35	/* ice */	
		#const LAND_Z 40	/* road koth */		
	else
		#define USE_DEFAULT_WATER
		#const LAND_Z 35	/* ice */
	endif
	
	#const SHALLOWS_A 26	/* ice shallows */
	#const BEACH_A 37	/* ice beach */
		
	#const STRAGGLER_A 1250	/* dead tree */
	#const STRAGGLER_B 413	/* snow pine */
	#const STRAGGLER_C 1054	/* snowy bush */

elseif TAIGA_BIOME	/* =================================================================================================== */
	#define SNOW_ANIMALS
	#const CLIFFS_TYPE 2

	#const LAND_A 32	/* snow */
	#const LAND_X 73	/* snow weak layering */
	#const LAND_B 100	/* grass dry */
	#const LAND_C 5	/* leaves */
	#const LAND_D 5	/* leaves */
	#const ROAD_A 38	/* road snow */
	#const HILL_A 76	/* mud */
	#const HILL_B 82	/* wet rock */
	#const FOREST_A 21	/* snow pine */
	#const FOREST_B 105	/* autumn snow */ 
	#const FOREST_C 21	/* snow pine */
	#const FOREST_FILLER 413	/* snow pine */
	#const HILL_FOREST 21	/* snow pine */

	if WATER_ONLY
	else
		start_random 
			percent_chance 32 #define FREEZE_PRIMARY_WATER
			percent_chance 33 #define SWAMP
		end_random
	endif
	if FREEZE_PRIMARY_WATER
		start_random
			percent_chance 49	#const WATER_B 1	/* water */
			percent_chance 50	#const WATER_B 58	/* water azure */
		end_random
		start_random
			percent_chance 49	#const WATER_C 22	/* deep water */
			percent_chance 50	#const WATER_C 57	/* very deep water */
		end_random
		#define USE_RANDOM_SHALLOWS
		#const WATER_A 35	/* ice */
		#const LAND_Z 40	/* road koth */
	elseif SWAMP
		start_random
			percent_chance 49
				#const WATER_A 4	/* shallows */
				#const WATER_B 4	/* shallows */
			percent_chance 49
				#const WATER_A 111	/* mud shallows */
				#const WATER_B 111	/* mud shallows */
		end_random
		#const WATER_C 1	/* water */
		#const SHALLOWS_A 26	/* ice shallows */
		#const LAND_Z 35	/* ice */
	else
		#define USE_DEFAULT_WATER
		#define USE_RANDOM_SHALLOWS
		#const LAND_Z 35	/* ice */
	endif

	#const BEACH_A 37	/* ice beach */
	
		#const STRAGGLER_A 413	/* snow pine */
		#const STRAGGLER_B 1249	/* autumn snow tree */
		#const STRAGGLER_C 1250	/* dead tree */

elseif ALPINE_BIOME	/* =================================================================================================== */
	#define ALPINE_ANIMALS
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random
	
	#const LAND_A 100	/* drygrass */
	start_random
		percent_chance 49	#const LAND_X 6	/* dirt */
		percent_chance 50	#const LAND_X 76	/* mud */
	end_random
	#const LAND_B 32	/* snow */
	#const LAND_C 32	/* snow */
	#const LAND_D 73	/* snow weak layering */
	#const ROAD_A 38	/* road snow */
	#const HILL_A 11	/* dirt 2 */
	#const HILL_B 35	/* ice */
	#const LAND_Z 35	/* ice */

	#const FOREST_A 19	/* pine */
	#const FOREST_B 21	/* snow pine */
	#const FOREST_C 110 /* birch forest */
	#const HILL_FOREST 19	/* pine */
	#const FOREST_FILLER 413	/* snow pine */

	#define USE_DEFAULT_WATER
	#define USE_RANDOM_SHALLOWS
	#define USE_RANDOM_BEACHES
	
	#const STRAGGLER_A 350	/* pine */
	#const STRAGGLER_B 1249	/* autumn snow tree */
	#const STRAGGLER_C 1717	/* birch tree */

elseif HIGHLAND_BIOME	/* =================================================================================================== */
	#define TEMPERATE_ANIMALS
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random

	#const LAND_A 9	/* grass 3 */
	#const LAND_X 3 /* dirt3 */ 
	#const ROAD_A 39	/* road fungus */
	
	#const LAND_B 0	/* grass */
	#const LAND_C 12	/* grass2 */
	#const LAND_D 100	/* drygrass */
	start_random
		percent_chance 49	#const LAND_Z 101	/* bogland */
		percent_chance 50	#const LAND_Z 40	/* rock */
	end_random
	start_random
		percent_chance 79	#const HILL_A 11	/* dirt grass */
		percent_chance 20	#const HILL_A 76	/* mud */
	end_random
	#const HILL_B 70	/* gravel */

	start_random
		percent_chance 24 
			#const FOREST_A 19	/* pine */
			#const FOREST_B 10	/* (oak) forest */
			#const FOREST_C 19	/* pine */
			#const FOREST_FILLER 350	/* pine */
		percent_chance 25
			#const FOREST_A 110	/* birch */
			#const FOREST_B 19	/* pine */
			#const FOREST_C 110	/* birch */
			#const FOREST_FILLER 1717	/* birch */
		percent_chance 25
			#const FOREST_A 18	/* bamboo */
			#const FOREST_B 19	/* pine */
			#const FOREST_C 18	/* bamboo */
			#const FOREST_FILLER 350	/* pine */
		percent_chance 25
			#const FOREST_A 18 /* bamboo */
			#const FOREST_B 92	/* reed forest */
			#const FOREST_C 19	/* pine */
			#const FOREST_FILLER 350	/* pine */
	end_random
	#const HILL_FOREST 19	/* pine */

	#define USE_DEFAULT_WATER
	#define USE_RANDOM_SHALLOWS
	#define USE_RANDOM_BEACHES

	#const STRAGGLER_A 350	/* pine */
	#const STRAGGLER_B 349	/* oak */
	#const STRAGGLER_C 1053	/* bush */

elseif TEMPERATE_BIOME	/* =================================================================================================== */
	#define TEMPERATE_ANIMALS
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random

	#const LAND_C 100	/* drygrass */
	start_random
		percent_chance 49	#const LAND_X 6	/* dirt 1 */
		percent_chance 50	#const LAND_X 45	/* cracked */
	end_random
	start_random
		percent_chance 49	#const LAND_Z 101	/* bogland */
		percent_chance 50	#const LAND_Z 40	/* rock */
	end_random
	start_random
		percent_chance 79	#const HILL_A 11	/* dirt grass */
		percent_chance 20	#const HILL_A 76	/* mud */
	end_random
	#const HILL_B 70	/* gravel */

	#const LAND_A 0	/* grass 1 */
	#const LAND_B 9	/*  grass 3 */
	#const LAND_D 12	/* grass 2 */
	#const ROAD_A 39	/* road fungus */
	
	start_random
		percent_chance 19	/* default */
			#const FOREST_A 20	/* oak bush */
			#const FOREST_B 10	/* oak */
			#const FOREST_C 19	/* pine */
			#const FOREST_FILLER 349	/* oak */
		percent_chance 20	/* mediteranean */
			#const FOREST_A 88	/* mediteranean */
			#const FOREST_B 20	/* oak bush */
			#const FOREST_C 19	/* pine */
			#const FOREST_FILLER 351	/* palm */
		percent_chance 20	/* asian */
			#const FOREST_A 18	/* bamboo */
			#const FOREST_B 92	/* reeds */
			#const FOREST_C 20	/* oak bush */
			#const FOREST_FILLER 349	/* oak */
		percent_chance 20	/* bush forest */
			#const FOREST_A 89	/* bush forest */
			#const FOREST_B 20	/* oak bush */
			#const FOREST_C 10	/* oak forest */
			#const FOREST_FILLER 349	/* oak */
		percent_chance 20	/* birch */
			#const FOREST_A 110	/* birch */
			#const FOREST_B 20	/* oak bush */
			#const FOREST_C 89	/* bush forest */
			#const FOREST_FILLER 349	/* oak */
	end_random
	#const HILL_FOREST 19	/* pine */

	if WATER_ONLY
	else
		start_random
			percent_chance 29 #define SWAMP
		end_random
	endif
	if SWAMP
		#const WATER_A 54	/* mangrove shallows */
		#const WATER_B 54	/* mangrove shallows */
		#const WATER_C 55	/* mangrove forest */
		#const SHALLOWS_A 54	/* mangrove shallows */	
	else /* not swamp */
		#define USE_DEFAULT_WATER
		#define USE_RANDOM_SHALLOWS
	endif

	#define USE_RANDOM_BEACHES
	
	#const STRAGGLER_A 349	/* oak */
	#const STRAGGLER_B 1717	/* birch */
	#const STRAGGLER_C 350	/* pine */
	
elseif AUTUMN_TEMPERATE_BIOME	/* =================================================================================================== */
	#define TEMPERATE_ANIMALS
	
	start_random
		percent_chance 49	#define MUDDY_AUTUMN
		percent_chance 50	#define GRASSY_AUTUMN
	end_random		
	if MUDDY_AUTUMN
		#const CLIFFS_TYPE 1
		#const LAND_A 76	/* mud */
		start_random
			percent_chance 49
				#const LAND_B 42	/* dirt 4 */
				#const LAND_C 6	/* dirt 1 */
			percent_chance 50
				#const LAND_B 3	/* dirt 3 */
				#const LAND_C 11	/* dirt 2 */
		end_random
		start_random
			percent_chance 49	#const LAND_D 5	/* leaves */
			percent_chance 50	#const LAND_D 71	/* underbrush */
		end_random
		#const HILL_A 72	/* underbrush snow */
		#const HILL_B 70	/* gravel */
		#const LAND_X 9	/* grass 3 */			
	elseif GRASSY_AUTUMN
		start_random
			percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
			percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
		end_random
		start_random
			percent_chance 49	#const LAND_A 100	/* grass dry */
			percent_chance 50	#const LAND_A 9	/* grass 3 */
		end_random
		start_random
			percent_chance 49
				#const LAND_B 71	/* underbrush */
				#const LAND_D 5	/* leaves */
			percent_chance 50
				#const LAND_B 5	/* leaves */
				#const LAND_D 71	/* underbrush */
		end_random
		#const LAND_C 0	/* grass */
		#const HILL_A 11	/* dirt 2 */
		#const HILL_B 70	/* gravel */
		#const LAND_X 6	/* dirt 1 */
	endif
	start_random
		percent_chance 49	#const LAND_Z 101	/* bogland */
		percent_chance 50	#const LAND_Z 40	/* rock */
	end_random
	#const ROAD_A 39	/* road fungus */

	#const FOREST_A 104	/* autumn oak */
	#const FOREST_B 19	/* pine forest */
	start_random
		percent_chance 33	#const FOREST_C 104	/* autumn oak */ 
		percent_chance 33	#const FOREST_C 10	/* oak */ 
		percent_chance 33	#const FOREST_C 110	/* birch */
	end_random
	#const FOREST_FILLER 1248	/* autumn oak */
	#const HILL_FOREST 19	/* pine forest */

	#define USE_DEFAULT_WATER
	#define USE_RANDOM_SHALLOWS
	#define USE_RANDOM_BEACHES
		
	#const STRAGGLER_A 1248	/* autumn oak */
	#const STRAGGLER_B 1248	/* autumn oak */
	#const STRAGGLER_C 1248	/* autumn oak */
	
elseif AUTUMN_SNOW_BIOME	/* =================================================================================================== */
	#define TEMPERATE_ANIMALS
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random
	
	start_random
		percent_chance 49	#const LAND_A 100	/* grass dry */
		percent_chance 50	#const LAND_A 9	/* grass 3 */
	end_random
	start_random
		percent_chance 49	#const LAND_X 6	/* dirt */
		percent_chance 50	#const LAND_X 76	/* mud */
	end_random
	#const LAND_B 72	/* snow underbrush */
	#const LAND_C 73	/* snow weak layering */
	#const LAND_D 73	/* snow weak layering */
	#const ROAD_A 38	/* road snow */	
	start_random
		percent_chance 49	#const LAND_Z 101	/* bogland */
		percent_chance 50	#const LAND_Z 40	/* rock */
	end_random
	#const HILL_A 70	/* gravel */
	#const HILL_B 73	/* snow light */

	#const FOREST_A 105	/* snow autumn oak */
	#const FOREST_B 21	/* snow pine forest */
	#const FOREST_C 105	/* snow autumn oak */ 
	#const FOREST_FILLER 413	/* snow pine */
	#const HILL_FOREST 21	/* snow pine forest */

	#define USE_DEFAULT_WATER
	#define USE_RANDOM_SHALLOWS
	#const BEACH_A 37	/* ice beach */
		
	#const STRAGGLER_A 1249	/* snow autumn oak */
	#const STRAGGLER_B 1249	/* snow autumn oak */
	#const STRAGGLER_C 1249	/* snow autumn oak */
	
elseif JUNGLE_BIOME	/* =================================================================================================== */
	#define JUNGLE_ANIMALS
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random

	#const LAND_A 60	/* grass jungle */
	start_random
		percent_chance 49
			#const LAND_X 3	/* dirt 3 */
			#const HILL_A 76	/* mud */
			#const HILL_B 81	/* wet gravel */
		percent_chance 50
			#const LAND_X 76	/* mud */
			#const HILL_A 3	/* dirt 3 */
			#const HILL_B 70	/* gravel */
	end_random
	
	start_random
		percent_chance 49	#const LAND_B 5	/* leaves */
		percent_chance 50	#const LAND_B 77	/* underbrush jungle */
	end_random
	#const LAND_C 83	/* jungle grass */
	#const LAND_D 12	/* grass 2 */
	#const ROAD_A 61	/* road jungle */
	start_random
		percent_chance 49	#const LAND_Z 101	/* bogland */
		percent_chance 50	#const LAND_Z 40	/* rock */
	end_random
	
	start_random
		percent_chance 24 #define TEMPERATE_JUNGLE
		percent_chance 25 #define ASIAN_JUNGLE
	end_random
	if TEMPERATE_JUNGLE
		#const FOREST_A 56	/* rainforest */
		#const FOREST_B 10	/* (oak) forest */
		#const FOREST_C 17	/* jungle */
		#const FOREST_FILLER 414	/* jungle */
	elseif ASIAN_JUNGLE
		#const FOREST_A 18	/* bamboo */
		#const FOREST_B 56	/* rainforest */
		#const FOREST_C 17	/* jungle */
		#const FOREST_FILLER 414	/* jungle */
	else /* full jungle */
		#const FOREST_A 56	/* rainforest */
		#const FOREST_B 17	/* jungle */
		#const FOREST_C 112	/* palm forest grassy */
		#const FOREST_FILLER 414	/* jungle */
	endif
	#const HILL_FOREST 10	/* oak */
	
	if WATER_ONLY
	else
		start_random
			percent_chance 29 #define SWAMP
		end_random
	endif
	if SWAMP
		start_random
			percent_chance 49	#const WATER_C 55	/* mangrove forest */
			percent_chance 50	#const WATER_C 90	/* reed forest (shallows) */
		end_random
		#const WATER_A 54	/* mangrove shallows */
		#const WATER_B 54	/* mangrove shallows */
		#const SHALLOWS_A 54	/* mangrove shallows */	
	else /* not swamp */
		#define USE_DEFAULT_WATER
		start_random
			percent_chance 19	#const SHALLOWS_A 4	/* shallows */
			percent_chance 20	#const SHALLOWS_A 59	/* azure shallows */
			percent_chance 20	#const SHALLOWS_A 54	/* mangrove shallows */
			percent_chance 40	#const SHALLOWS_A 111	/* mud shallows */
		end_random
	endif
	
	#const BEACH_A 52	/* beach vegetation */
		
	#const STRAGGLER_A 1146	/* rainforest tree */
	#const STRAGGLER_B 1053	/* bush */
	#const STRAGGLER_C 414	/* jungletree */

elseif TROPICAL_BIOME	/* =================================================================================================== */
	#define TROPICAL_ANIMALS 
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random
	
	#const LAND_A 100	/* drygrass */
	#const LAND_X 45	/* cracked */
	#const LAND_B 9	/* grass 3 */
	#const LAND_C 0	/* grass 1 */
	#const LAND_D 12	/* grass 2 */
	#const LAND_Z 46	/* quicksand */
	#const ROAD_A 43	/* desert road */
	#const HILL_A 14	/* desert */
	#const HILL_B 14	/* desert */

	#const HILL_FOREST 13	/* palm forest */

	#const FOREST_A 112	/* palm forest grassy */
	#const FOREST_B 17	/* jungle */
	start_random
		percent_chance 49	#const FOREST_C 56	/* rainforest */
		percent_chance 50	#const FOREST_C 13	/* palm forest */
	end_random
	#const FOREST_FILLER 351	/* palms */

	if WATER_ONLY
	else
		start_random
			percent_chance 29 #define SWAMP
		end_random
	endif
	if SWAMP
		#const WATER_A 54	/* mangrove shallows */
		#const WATER_B 54	/* mangrove shallows */
		start_random
			percent_chance 49	#const WATER_C 1	/* water */
			percent_chance 50	#const WATER_C 90	/* reed forest (shallows) */
		end_random
		#const SHALLOWS_A 54	/* mangrove shallows */
	else /* not swamp */
		#const WATER_A 58	/* water azure */
		#const WATER_C 57	/* very deep water */
		#const SHALLOWS_A 59	/* azure shallows */	
		#const WATER_B 23	/* med water */
	endif
	
	#define USE_RANDOM_BEACHES
		
	#const STRAGGLER_A 351	/* palmtree */
	#const STRAGGLER_B 414	/* jungletree */
	#const STRAGGLER_C 351	/* palmtree */
	
elseif SAVANNAH_BIOME	/* =================================================================================================== */
	#define SAVANNAH_ANIMALS 
	#const CLIFFS_TYPE 1
	
	#const LAND_A 41	/* savannah */
	#const LAND_X 45	/* cracked */
	#const LAND_B 42	/* dirt 4 */
	#const LAND_D 100	/* dry grass */
	#const LAND_Z 46	/* quicksand */
	#const HILL_A 70	/* gravel */
	#const HILL_B 80	/* wet sand */
	#const LAND_C 6	/* dirt 1 */
	#const ROAD_A 25	/* dirt road */
	
	/* prefer dragon trees on forest based maps */
	if FOREST_BASED_MAP
		start_random
			percent_chance 79 #define DRAGON_TREES_FIRST
		end_random
	endif
	
	if DRAGON_TREES_FIRST
		#const FOREST_A 48	/* dragon forest */
		#const FOREST_B 20	/* oak forest */
		#const FOREST_C 50	/* acacia forest */
		#const HILL_FOREST 48	/* dragon forest */
		#const FOREST_FILLER 1052	/* baobab tree */
	else 
		start_random
			percent_chance 24
				#const FOREST_A 48	/* dragon forest */
				#const FOREST_B 20	/* oak forest */
				#const FOREST_C 50	/* acacia forest */
				#const HILL_FOREST 48	/* dragon forest */
				#const FOREST_FILLER 1052	/* baobab tree */
			percent_chance 25
				#const FOREST_A 49	/* baobab forest */
				#const FOREST_B 50	/* acacia forest */
				#const FOREST_C 48	/* dragon forest */
				#const HILL_FOREST 48	/* dragon forest */
				#const FOREST_FILLER 1350	/* reeds */
			percent_chance 25
				#const FOREST_A 50	/* acacia forest */
				#const FOREST_B 50	/* acacia forest */
				#const FOREST_C 50	/* acacia forest */
				#const HILL_FOREST 48	/* dragon forest */
				#const FOREST_FILLER 1052	/* baobab tree */
			percent_chance 25
				#const FOREST_A 49	/* baobab forest */
				#const FOREST_B 49	/* baobab forest */
				#const FOREST_C 49	/* baobab forest */
				#const HILL_FOREST 48	/* dragon forest */
				#const FOREST_FILLER 1350	/* reeds */
		end_random
	endif

	#const SHALLOWS_A 59	/* azure shallows */
	
	#define USE_DEFAULT_WATER
	#define USE_RANDOM_BEACHES

	#const STRAGGLER_A 1052	/* baobab tree */
	#const STRAGGLER_B 1063	/* acacia tree */
	#const STRAGGLER_C 1051	/* dragon tree */  
	
elseif DESERT_BIOME	/* =================================================================================================== */
	#define DESERT_ANIMALS 
	#const CLIFFS_TYPE 1
	
	#const LAND_A 6	/* dirt 1 */ 
	#const LAND_X 102	/* desert gravel */
	#const LAND_B 41	/* savannah */
	#const LAND_C 11	/* dirt 2 */
	#const LAND_D 76 /* mud */
	#const LAND_Z 46	/* quicksand */
	#const ROAD_A 43	/* desert road */
	#const HILL_A 14	/* desert */
	#const HILL_B 79	/* sand */
	
	#const HILL_FOREST 13	/* palm forest */
	
	start_random
		percent_chance 49
			#const FOREST_A 48	/* dragon forest */
			#const FOREST_B 88	/* mediteranean forest */
			#const FOREST_C 48	/* dragon forest */
			#const FOREST_FILLER 1052	/* baobab tree */
		percent_chance 50
			#const FOREST_A 50	/* acacia forest */
			#const FOREST_B 48	/* dragon forest */
			#const FOREST_C 48	/* dragon forest */
			#const FOREST_FILLER 1250	/* dead tree */
	end_random
	
	if WATER_ONLY
	else
		start_random
			percent_chance 49	#define WATER_IS_DRY
		end_random
	endif
	
	if WATER_IS_DRY
		start_random
			percent_chance 49	
				#const WATER_A 2	/* beach */
				#const WATER_B 107	/* wet beach */
				#const WATER_C 58	/* water azure */
			percent_chance 25	
				#const WATER_A 107	/* wet beach */
				#const WATER_B 91	/* reed forest (wet beach) */
				#const WATER_C 58	/* water azure */
			percent_chance 25	
				#const WATER_A 2	/* beach */
				#const WATER_B 107	/* wet beach */
				#const WATER_C 91	/* reed forest (wet beach) */
		end_random
	else
		#const WATER_A 58  /* water azure */
		#const WATER_B 23	/* ´med water */
		#const WATER_C 22 /* deep water */
	endif

	if WATER_IS_DRY
		#const SHALLOWS_A 59 /* azure shallows */ /* formerly wet beach */
		#const BEACH_A 2	/* beach */
	else
		#const SHALLOWS_A 59 /* azure shallows */ /* formerly beach */
		#define USE_RANDOM_BEACHES
	endif
	
	#const STRAGGLER_A 1250	/* dead tree */
	#const STRAGGLER_B 1250	/* dead tree */
	#const STRAGGLER_C 1250	/* dead tree */ 

elseif HIGH_DESERT_BIOME	/* =================================================================================================== */
	#define ALPINE_ANIMALS
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random
	
	start_random 
		percent_chance 49
			#const LAND_A 6	/* dirt 1 */
			#const LAND_X 45	/* cracked */
			#const LAND_B 102	/* desert gravel */
			#const LAND_C 70	/* gravel */
			#const LAND_D 40	/* rock */
			#const ROAD_A 103	/* desert gravel road */
			#const HILL_A 14	/* desert */
			#const HILL_B 79	/* sand */
		percent_chance 50
			#define GRAVEL_DESERT_BIOME
			#const LAND_A 102	/* desert gravel */
			#const LAND_X 45	/* cracked */
			#const LAND_B 70	/* gravel */
			#const LAND_C 81	/* wet gravel */
			#const LAND_D 40	/* rock */
			#const ROAD_A 103	/* desert gravel road */
			#const HILL_A 6	/* dirt 1 */
			#const HILL_B 6	/* dirt 1 */
	end_random
	
	#const LAND_Z 40	/* rock */
	#const HILL_FOREST 19	/* pine forest */
	
	#const FOREST_A 48	/* dragon forest */
	#const FOREST_B 19	/* pine forest */
	#const FOREST_C 48	/* dragon forest */
	#const FOREST_FILLER 1250	/* dead tree */

	if WATER_ONLY
	else
		start_random
			percent_chance 49	#define WATER_IS_DRY
		end_random
	endif
	
	if WATER_IS_DRY
		start_random
			percent_chance 49	
				#const WATER_A 2	/* beach */
				#const WATER_B 107	/* wet beach */
				#const WATER_C 1	/* water */
			percent_chance 25	
				#const WATER_A 107	/* wet beach */
				#const WATER_B 91	/* reed forest (wet beach) */
				#const WATER_C 1	/* water */
			percent_chance 25	
				#const WATER_A 2	/* beach */
				#const WATER_B 107	/* wet beach */
				#const WATER_C 91	/* reed forest (wet beach) */
		end_random
	else
		#const WATER_A 1	/* water */ 
		#const WATER_B 23	/* med water */
		#const WATER_C 22	/* deep water */
	endif
	
	if GRAVEL_DESERT_BIOME
		if WATER_IS_DRY
			#const SHALLOWS_A 59 /* azure shallows */	/* formerly wet beach */
			#const BEACH_A 2	/* beach */
		else
			#const SHALLOWS_A 59 /* azure shallows */	/* formerly wet gravel beach */
			#const BEACH_A 108	/* wet gravel beach */
		endif
	elseif WATER_IS_DRY
		#const SHALLOWS_A 59 /* azure shallows */ /* formerly beach */
		#const BEACH_A 2	/* beach */
	else
		#const SHALLOWS_A 59 /* azure shallows */ /* formerly beach */
		#define USE_RANDOM_BEACHES
	endif
	
	#const STRAGGLER_A 1051	/* dragon tree */
	#const STRAGGLER_B 350	/* pinetree */
	#const STRAGGLER_C 1051	/* dragon tree */
	
elseif MANGROVE_SWAMP_BIOME	/* =================================================================================================== */
	#define SWAMP_ANIMALS 
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random
	
	#const HILL_A 76	/* mud */
	#const HILL_B 80	/* wet sand */
	#const LAND_A 54	/* mangrove shallows */	
	#const LAND_X 44	/* grass mud */ 
	#const LAND_B 71	/* underbrush leaves */
	#const LAND_C 60	/* grass jungle */
	#const ROAD_A 61	/* road jungle */
	#const LAND_D 12	/* grass 2 */
	
	#const LAND_Z 101	/* bogland */

	start_random
		percent_chance 74
			#const FOREST_A 55	/* mangrove */
			#const FOREST_B 55	/* mangrove */
			#const FOREST_C 55	/* mangrove */
			#const HILL_FOREST 56	/* rainforest */
			#const FOREST_FILLER 1146	/* rainforest tree */
		percent_chance 25	/* reed swamp */
			#const FOREST_A 90	/* reed forest (shallows) */
			#const FOREST_B 90	/* reed forest (shallows) */
			#const FOREST_C 90	/* reed forest (shallows) */
			#const HILL_FOREST 56	/* rainforest */
			#const FOREST_FILLER 1144	/* mangrove tree */
	end_random

	#const WATER_A 58	/* water azure */
	#const WATER_B 23	/* med water */
	#const WATER_C 57	/* very deep water */
	#const SHALLOWS_A 54	/* mangrove shallows */	
	
	#const BEACH_A 52	/* beach vegetation */
		
	#const STRAGGLER_A 1144	/* mangrove tree */
	#const STRAGGLER_B 1144	/* mangrove tree */
	#const STRAGGLER_C 1144	/* mangrove tree */

elseif WASTELAND_BIOME	/* =================================================================================================== */
	#define ARCTIC_ANIMALS
	start_random
		percent_chance 49	#const CLIFFS_TYPE 0	/* granite */
		percent_chance 50	#const CLIFFS_TYPE 3	/* marble */
	end_random
	
	#const LAND_A 81	/* wet gravel beach */ 
	#const LAND_X 82	/* wet rock buildable */ 
	#const LAND_B 82	/* wet rock buildable */
	#const LAND_C 47	/* black */
	#const LAND_D 80	/* wet sand */
	#const LAND_Z 101	/* bogland */
	#const FOREST_A 106	/* dead forest */
	#const FOREST_B 106	/* dead forest */
	#const FOREST_C 106	/* dead forest */
	#const FOREST_FILLER 1250	/* dead tree */ 
	#const WATER_A 96	/* brown water */
	#const WATER_B 95	/* green water */
	#const WATER_C 95	/* green water */
	#const SHALLOWS_A 111	/* mud shallows */
	#const BEACH_A 109	/* wet rock beach */
	#const ROAD_A 38	/* road snow */
	#const HILL_A 76	/* mud */
	#const HILL_B 82	/* wet rock */
	#const HILL_FOREST 106	/* dead forest */
	
	#const STRAGGLER_A 1250	/* dead tree */
	#const STRAGGLER_B 1250	/* dead tree */
	#const STRAGGLER_C 1250	/* dead tree */ 

else  /* AoC temperate fallback here - just in case something goes wrong */	/* =================================================================================================== */
	#define TEMPERATE_ANIMALS
	#const CLIFFS_TYPE 0
	
	#const LAND_A 0	/* grass 1 */
	#const LAND_X 6	/* dirt 1 */
	#const LAND_B 9	/* grass 3 */
	#const LAND_C 11	/* dirt 2 */
	#const LAND_D 12	/* grass 2 */
	#const LAND_Z 40	/* road koth */
	#const ROAD_A 39	/* road fungus */
	#const HILL_A 0		/* grass */

	#const FOREST_A 20	/* oak forest */
	#const FOREST_B 19	/* pine forest */
	#const FOREST_C 10	/* forest (also oak) */
	#const HILL_FOREST 20	/* oak forest */

	#const WATER_A 1	/* water */
	#const WATER_B 23	/* med water */
	#const WATER_C 22	/* deep water */

	#const SHALLOWS_A 4	/* shallows */
	#const BEACH_A 2	/* beach */
	
	#const STRAGGLER_A 349	/* oak tree */
	#const STRAGGLER_B 350	/* pine tree */
	#const STRAGGLER_C 349	/* oak tree */
	
endif



/* =================================================================================================== */
/*  standard water types - moved it here because it is often the same code */
if USE_DEFAULT_WATER
	start_random
		percent_chance 49	#const WATER_A 1	/* water */
		percent_chance 50	#const WATER_A 58	/* water azure */
	end_random
	start_random
		percent_chance 49	#const WATER_C 22	/* deep water */
		percent_chance 50	#const WATER_C 57	/* very deep water */
	end_random
	#const WATER_B 23	/* med water */
endif

if USE_RANDOM_SHALLOWS
	start_random
		percent_chance 33	#const SHALLOWS_A 4	/* shallows */
		percent_chance 33	#const SHALLOWS_A 59	/* azure shallows */
		percent_chance 33	#const SHALLOWS_A 111	/* mud shallows */
	end_random
endif

/* =================================================================================================== */
/*  standard beach types - moved it here because it is almost always the same code */
if USE_RANDOM_BEACHES
	start_random
		percent_chance 15	#const BEACH_A 2	/* beach */
		percent_chance 14	#const BEACH_A 51	/* beach2 */
		percent_chance 14	#const BEACH_A 52	/* beach3 */
		percent_chance 14	#const BEACH_A 53	/* beach4 */
		percent_chance 14	#const BEACH_A 107	/* wet beach */
		percent_chance 14	#const BEACH_A 108	/* wet gravel beach */
		percent_chance 14	#const BEACH_A 109	/* wet rock beach */
	end_random 
endif


/* =================================================================================================== */
/* choose animals and berries */
if ARCTIC_ANIMALS	/* =================================================================================================== */

	#const BERRY_TYPE 59	/* forage bush */
	
	start_random
		percent_chance 33	#const SHEEP_A 305	/* llama */
		percent_chance 33	#const SHEEP_A 594	/* sheep */
		percent_chance 33	#const SHEEP_A 1060	/* goat */
	end_random
	start_random
		percent_chance 33	#const SHEEP_B 305	/* llama */
		percent_chance 33	#const SHEEP_B 594	/* sheep */
		percent_chance 33	#const SHEEP_B 1060	/* goat */
	end_random
	
	#const BOAR_A 48	/* boar */
	#const BOAR_B 48	/* boar */
	
	start_random
		percent_chance 49	#const DEER_A 1239	/* ibex */
		percent_chance 50	#const DEER_A 65	/* deer */
	end_random
	start_random
		percent_chance 49	#const DEER_B 1239	/* ibex */
		percent_chance 50	#const DEER_B 65	/* deer */
	end_random
	
	start_random
		percent_chance 49	#const PREDATOR_A 1241	/* snow leopard */
		percent_chance 25	#const PREDATOR_A 486	/* bear */
		percent_chance 25	#const PREDATOR_A 126	/* wolf */
	end_random
	
	#const BIRD_A 96	/* hawk */
	#const BIRD_B 1056	/* falcon */
	#const BIRD_C 1305	/* vulture */
	
	#const FISH_A 456	/* salmon */
	#const FISH_B 457	/* tuna */
	#const SHOREFISH_C 69	/* shore fish */
	
	#define PENGUIN_OVERRIDE	/* override deer c */
	#const DEER_C 1019	/* zebra */
	#const DEER_C_DEAD 1020
	
	#const HERO_ANIMAL 639	/* scripter64 */

elseif SNOW_ANIMALS	/* =================================================================================================== */

	#const BERRY_TYPE 59	/* forage bush */
	
	start_random
		percent_chance 33	#const SHEEP_A 305	/* llama */
		percent_chance 33	#const SHEEP_A 594	/* sheep */
		percent_chance 33	#const SHEEP_A 1060	/* goat */
	end_random
	start_random
		percent_chance 33	#const SHEEP_B 305	/* llama */
		percent_chance 33	#const SHEEP_B 594	/* sheep */
		percent_chance 33	#const SHEEP_B 1060	/* goat */
	end_random	
	
	#const BOAR_A 48	/* boar */
	#const BOAR_B 48	/* boar */
	
	start_random
		percent_chance 49	#const DEER_A 1239	/* ibex */
		percent_chance 50	#const DEER_A 65	/* deer */
	end_random
	start_random
		percent_chance 49	#const DEER_B 1239	/* ibex */
		percent_chance 50	#const DEER_B 65	/* deer */
	end_random
	
	start_random
		percent_chance 33	#const PREDATOR_A 1241	/* snow leopard */
		percent_chance 33	#const PREDATOR_A 486	/* bear */
		percent_chance 33	#const PREDATOR_A 126	/* wolf */
	end_random
	
	#const BIRD_A 96	/* hawk */
	#const BIRD_B 1056	/* falcon */
	#const BIRD_C 1305	/* vulture */
	
	#const FISH_A 456	/* salmon */	
	start_random
		percent_chance 49	#const FISH_B 457	/* tuna */
		percent_chance 50	#const FISH_B 53	/* perch */
	end_random
	#const SHOREFISH_C 69	/* shore fish */
	
	start_random	/* override deer c */
		percent_chance 49	#define BACTRIAN_CAMEL_OVERRIDE
		percent_chance 50	#define HORSE_HEAVY_OVERRIDE
	end_random
	#const DEER_C 1019	/* zebra */
	#const DEER_C_DEAD 1020
	
	#const HERO_ANIMAL 1300	/* alfred */
	
elseif ALPINE_ANIMALS	/* =================================================================================================== */

	#const BERRY_TYPE 59	/* forage bush */
	
	start_random
		percent_chance 16	#const SHEEP_A 305	/* llama */
		percent_chance 17	#const SHEEP_A 594	/* sheep */
		percent_chance 5	#const SHEEP_A 705	#define SHEEP_A_IS_COW	/* cow */
		percent_chance 4	#const SHEEP_A 1596	#define SHEEP_A_IS_COW	/* cow B */
		percent_chance 4	#const SHEEP_A 1598	#define SHEEP_A_IS_COW	/* cow C */
		percent_chance 4	#const SHEEP_A 1600	#define SHEEP_A_IS_COW	/* cow D */
		percent_chance 17	#const SHEEP_A 1060	/* goat */
		percent_chance 16	#const SHEEP_A 1243	/* goose */
		percent_chance 16	#const SHEEP_A 1245	/* pig */
	end_random
	start_random
		percent_chance 16	#const SHEEP_B 305	/* llama */
		percent_chance 17	#const SHEEP_B 594	/* sheep */
		percent_chance 5	#const SHEEP_B 705	#define SHEEP_B_IS_COW	/* cow */
		percent_chance 4	#const SHEEP_B 1596	#define SHEEP_B_IS_COW	/* cow B */
		percent_chance 4	#const SHEEP_B 1598	#define SHEEP_B_IS_COW	/* cow C */
		percent_chance 4	#const SHEEP_B 1600	#define SHEEP_B_IS_COW	/* cow D */
		percent_chance 17	#const SHEEP_B 1060	/* goat */
		percent_chance 16	#const SHEEP_B 1243	/* goose */
		percent_chance 16	#const SHEEP_B 1245	/* pig */
	end_random	
	
	#const BOAR_A 48	/* boar */
	#const BOAR_B 48	/* boar */
	
	start_random
		percent_chance 33	#const DEER_A 1239	/* ibex */
		percent_chance 33	#const DEER_A 65	/* deer */
		percent_chance 33	#const DEER_A 2340	/* mouflon */
	end_random
	start_random
		percent_chance 33	#const DEER_B 1239	/* ibex */
		percent_chance 33	#const DEER_B 65	/* deer */
		percent_chance 33	#const DEER_B 2340	/* mouflon */
	end_random
	
	start_random
		percent_chance 33	#const PREDATOR_A 1241	/* snow leopard */
		percent_chance 33	#const PREDATOR_A 486	/* bear */
		percent_chance 33	#const PREDATOR_A 126	/* wolf */
	end_random
	
	#const BIRD_A 96	/* hawk */
	#const BIRD_B 1056	/* falcon */
	#const BIRD_C 1305	/* vulture */
	
	#const FISH_A 456	/* salmon */	
	start_random
		percent_chance 49	#const FISH_B 457	/* tuna */
		percent_chance 50	#const FISH_B 53	/* perch */
	end_random
	#const SHOREFISH_C 69	/* shore fish */
	
	start_random	/* override deer c */
		percent_chance 49	#define BACTRIAN_CAMEL_OVERRIDE
		percent_chance 50	#define HORSE_HEAVY_OVERRIDE
	end_random
	#const DEER_C 1019	/* zebra */
	#const DEER_C_DEAD 1020
	
	#const HERO_ANIMAL 1300	/* alfred */

elseif TEMPERATE_ANIMALS	/* =================================================================================================== */

	start_random
		percent_chance 49 	#const BERRY_TYPE 59	/* forage bush */
		percent_chance 50 	#const BERRY_TYPE 1059	/* fruit bush */
	end_random
	
	start_random
		percent_chance 16	#const SHEEP_A 594	/* sheep */
		percent_chance 17	#const SHEEP_A 833	/* turkey */
		percent_chance 4	#const SHEEP_A 705	#define SHEEP_A_IS_COW	/* cow */
		percent_chance 4	#const SHEEP_A 1596	#define SHEEP_A_IS_COW	/* cow B */
		percent_chance 4	#const SHEEP_A 1598	#define SHEEP_A_IS_COW	/* cow C */
		percent_chance 4	#const SHEEP_A 1600	#define SHEEP_A_IS_COW	/* cow D */
		percent_chance 16	#const SHEEP_A 1060	/* goat */
		percent_chance 17	#const SHEEP_A 1243	/* goose */
		percent_chance 17	#const SHEEP_A 1245	/* pig */
	end_random
	start_random
		percent_chance 16	#const SHEEP_B 594	/* sheep */
		percent_chance 17	#const SHEEP_B 833	/* turkey */
		percent_chance 4	#const SHEEP_B 705	#define SHEEP_B_IS_COW	/* cow */
		percent_chance 4	#const SHEEP_B 1596	#define SHEEP_B_IS_COW	/* cow B */
		percent_chance 4	#const SHEEP_B 1598	#define SHEEP_B_IS_COW	/* cow C */
		percent_chance 4	#const SHEEP_B 1600	#define SHEEP_B_IS_COW	/* cow D */
		percent_chance 16	#const SHEEP_B 1060	/* goat */
		percent_chance 17	#const SHEEP_B 1243	/* goose */
		percent_chance 17	#const SHEEP_B 1245	/* pig */
	end_random	
	
	start_random
		percent_chance 49	#const BOAR_A 48	/* boar */
		percent_chance 50	#const BOAR_A 822	/* javelina */
	end_random	
	start_random
		percent_chance 49	#const BOAR_B 48	/* boar */
		percent_chance 50	#const BOAR_B 822	/* javelina */
	end_random	
	
	start_random
		percent_chance 19	#const DEER_A 1239	/* ibex */
		percent_chance 40	#const DEER_A 65	/* deer */
		percent_chance 20	#const DEER_A 1796	/* gazelle */
		percent_chance 20	#const DEER_A 2340	/* mouflon */
	end_random
	start_random
		percent_chance 19	#const DEER_B 1239	/* ibex */
		percent_chance 40	#const DEER_B 65	/* deer */
		percent_chance 20	#const DEER_B 1796	/* gazelle */
		percent_chance 20	#const DEER_B 2340	/* mouflon */
	end_random
	
	start_random
		percent_chance 39	#const PREDATOR_A 486	/* bear */
		percent_chance 40	#const PREDATOR_A 126	/* wolf */
		percent_chance 10	#const PREDATOR_A 812	/* jaguar */
		percent_chance 10	#const PREDATOR_A 1137	/* tiger */
	end_random

	#const BIRD_A 96	/* hawk */
	#const BIRD_B 1056	/* falcon */
	#const BIRD_C 1028	/* stork */
	
	start_random
		percent_chance 33
			#const FISH_A 456	/* salmon */
			#const FISH_B 457	/* tuna */
		percent_chance 33
			#const FISH_A 456	/* salmon */
			#const FISH_B 53	/* perch */
		percent_chance 33
			#const FISH_A 458	/* snapper */
			#const FISH_B 455	/* dorado */
	end_random	
	start_random
		percent_chance 49	#const SHOREFISH_C 69	/* shore fish */
		percent_chance 50	#const SHOREFISH_C 1141	/* box turtles */
	end_random
	
	start_random	/* override deer c */
		percent_chance 19	#define MONKEY_OVERRIDE
		percent_chance 20	#define HORSE_BROWN_OVERRIDE
		percent_chance 20	#define HORSE_GREYBLACK_OVERRIDE
		percent_chance 20	#define HORSE_GREY_BROWN_OVERRIDE
		percent_chance 20	#define HORSE_WHITE_BROWN_OVERRIDE
	end_random
	#const DEER_C 1019	/* zebra */
	#const DEER_C_DEAD 1020
	
	#const HERO_ANIMAL 707	/* ornlu */

elseif JUNGLE_ANIMALS	/* =================================================================================================== */

	start_random
		percent_chance 49 	#const	BERRY_TYPE 59	/* forage bush */
		percent_chance 50 	#const	BERRY_TYPE 1059	/* fruit bush */
	end_random
	
	start_random
		percent_chance 19	#const SHEEP_A 833	/* turkey */
		percent_chance 20	#const SHEEP_A 1142	#define SHEEP_A_IS_COW	/* water buffalo */
		percent_chance 20	#const SHEEP_A 1060	/* goat */
		percent_chance 20	#const SHEEP_A 1243	/* goose */
		percent_chance 20	#const SHEEP_A 1245	/* pig */
	end_random
	start_random
		percent_chance 19	#const SHEEP_B 833	/* turkey */
		percent_chance 20	#const SHEEP_B 1142	#define SHEEP_B_IS_COW	/* water buffalo */
		percent_chance 20	#const SHEEP_B 1060	/* goat */
		percent_chance 20	#const SHEEP_B 1243	/* goose */
		percent_chance 20	#const SHEEP_B 1245	/* pig */
	end_random	

	start_random
		percent_chance 33	#const BOAR_A 48	/* boar */
		percent_chance 33	#const BOAR_A 1139	/* rhino */
		percent_chance 33	#const BOAR_A 1301	/* elephant */
	end_random
	start_random
		percent_chance 33	#const BOAR_B 48	/* boar */
		percent_chance 33	#const BOAR_B 1139	/* rhino */
		percent_chance 33	#const BOAR_B 1301	/* elephant */
	end_random
	
	start_random
		percent_chance 79	#const DEER_A 65	/* deer */
		percent_chance 20	#const DEER_A 1796	/* gazelle */
	end_random
	start_random
		percent_chance 79	#const DEER_B 65	/* deer */
		percent_chance 20	#const DEER_B 1796	/* gazelle */
	end_random
	
	start_random
		percent_chance 24	#const PREDATOR_A 812	/* jaguar */
		percent_chance 25	#const PREDATOR_A 1031	/* crocodile */
		percent_chance 25	#const PREDATOR_A 1135	/* komodo */
		percent_chance 25	#const PREDATOR_A 1137	/* tiger */
	end_random
	
	#const BIRD_A 816	/* macaw */
	#const BIRD_B 816	/* macaw */
	#const BIRD_C 1028	/* stork */
	
	#const FISH_A 458	/* snapper */
	start_random
		percent_chance 49	#const FISH_B 457	/* tuna */	
		percent_chance 50	#const FISH_B 455	/* dorado */
	end_random
	start_random
		percent_chance 19	#const SHOREFISH_C 69	/* shore fish */
		percent_chance 80	#const SHOREFISH_C 1141	/* box turtles */
	end_random
	
	#define MONKEY_OVERRIDE	/* override deer c */
	#const DEER_C 1019	/* zebra */
	#const DEER_C_DEAD 1020
	
	#const HERO_ANIMAL 860	/* furious */
	
elseif TROPICAL_ANIMALS	/* =================================================================================================== */

	start_random
		percent_chance 49 	#const	BERRY_TYPE 59	/* forage bush */
		percent_chance 50 	#const	BERRY_TYPE 1059	/* fruit bush */
	end_random
	
	start_random
		percent_chance 19	#const SHEEP_A 833	/* turkey */
		percent_chance 20	#const SHEEP_A 1142	#define SHEEP_A_IS_COW	/* water buffalo */
		percent_chance 20	#const SHEEP_A 1060	/* goat */
		percent_chance 20	#const SHEEP_A 1243	/* goose */
		percent_chance 20	#const SHEEP_A 1245	/* pig */
	end_random
	start_random
		percent_chance 19	#const SHEEP_B 833	/* turkey */
		percent_chance 20	#const SHEEP_B 1142	#define SHEEP_B_IS_COW	/* water buffalo */
		percent_chance 20	#const SHEEP_B 1060	/* goat */
		percent_chance 20	#const SHEEP_B 1243	/* goose */
		percent_chance 20	#const SHEEP_B 1245	/* pig */
	end_random	

	start_random
		percent_chance 39	#const BOAR_A 48	/* boar */
		percent_chance 40	#const BOAR_A 822	/* javelina */
		percent_chance 10	#const BOAR_A 1139	/* rhino */
		percent_chance 10	#const BOAR_A 1301	/* elephant */
	end_random	
	start_random
		percent_chance 39	#const BOAR_B 48	/* boar */
		percent_chance 40	#const BOAR_B 822	/* javelina */
		percent_chance 10	#const BOAR_B 1139	/* rhino */
		percent_chance 10	#const BOAR_B 1301	/* elephant */
	end_random	
	
	start_random
		percent_chance 33	#const DEER_A 1019	/* zebra */
		percent_chance 33	#const DEER_A 1026	/* ostrich */
		percent_chance 33	#const DEER_A 1796	/* gazelle */
	end_random
	start_random
		percent_chance 33	#const DEER_B 1019	/* zebra */
		percent_chance 33	#const DEER_B 1026	/* ostrich */
		percent_chance 33	#const DEER_B 1796	/* gazelle */
	end_random
	
	start_random
		percent_chance 19	#const PREDATOR_A 812	/* jaguar */
		percent_chance 20	#const PREDATOR_A 1029	/* lion */
		percent_chance 20	#const PREDATOR_A 1031	/* crocodile */
		percent_chance 20	#const PREDATOR_A 1135	/* komodo */
		percent_chance 20	#const PREDATOR_A 1137	/* tiger */
	end_random
	
	#const BIRD_A 816	/* macaw */
	#const BIRD_B 1028	/* stork */
	#const BIRD_C 1305	/* vulture */
	
	#const FISH_A 458	/* snapper */
	start_random
		percent_chance 49	#const FISH_B 457	/* tuna */	
		percent_chance 49	#const FISH_B 455	/* dorado */
	end_random
	start_random
		percent_chance 79	#const SHOREFISH_C 69	/* shore fish */
		percent_chance 20	#const SHOREFISH_C 1141	/* box turtles */
	end_random
	
	#define MONKEY_OVERRIDE	/* override deer c */
	start_random	/* override deer c */
		percent_chance 49	#define MONKEY_OVERRIDE
		percent_chance 10	#define CAMEL_DROMEDADARY_OVERRIDE
		percent_chance 10	#define HORSE_BROWN_OVERRIDE
		percent_chance 10	#define HORSE_GREYBLACK_OVERRIDE
		percent_chance 10	#define HORSE_GREY_BROWN_OVERRIDE
		percent_chance 10	#define HORSE_WHITE_BROWN_OVERRIDE
	end_random
	#const DEER_C 65	/* deer */
	#const DEER_C_DEAD 43
	
	#const HERO_ANIMAL 860	/* furious */
	
elseif SAVANNAH_ANIMALS	/* =================================================================================================== */
	
	start_random
		percent_chance 49 	#const	BERRY_TYPE 59	/* forage bush */
		percent_chance 50 	#const	BERRY_TYPE 1059	/* fruit bush */
	end_random
	
	start_random
		percent_chance 19	#const SHEEP_A 594	/* sheep */
		percent_chance 5	#const SHEEP_A 705	#define SHEEP_A_IS_COW	/* cow */
		percent_chance 5	#const SHEEP_A 1596	#define SHEEP_A_IS_COW	/* cow B */
		percent_chance 5	#const SHEEP_A 1598	#define SHEEP_A_IS_COW	/* cow C */
		percent_chance 5	#const SHEEP_A 1600	#define SHEEP_A_IS_COW	/* cow D */
		percent_chance 20	#const SHEEP_A 1142	#define SHEEP_A_IS_COW	/* water buffalo */
		percent_chance 20	#const SHEEP_A 1060	/* goat */
		percent_chance 20	#const SHEEP_A 1245	/* pig */
	end_random
	start_random
		percent_chance 19	#const SHEEP_B 594	/* sheep */
		percent_chance 5	#const SHEEP_B 705	#define SHEEP_B_IS_COW	/* cow */
		percent_chance 5	#const SHEEP_B 1596	#define SHEEP_B_IS_COW	/* cow B */
		percent_chance 5	#const SHEEP_B 1598	#define SHEEP_B_IS_COW	/* cow C */
		percent_chance 5	#const SHEEP_B 1600	#define SHEEP_B_IS_COW	/* cow D */
		percent_chance 20	#const SHEEP_B 1142	#define SHEEP_B_IS_COW	/* water buffalo */
		percent_chance 20	#const SHEEP_B 1060	/* goat */
		percent_chance 20	#const SHEEP_B 1245	/* pig */
	end_random

	start_random
		percent_chance 4	#const BOAR_A 48	/* boar */
		percent_chance 45	#const BOAR_A 1139	/* rhino */
		percent_chance 50	#const BOAR_A 1301	/* elephant */
	end_random
	start_random
		percent_chance 4	#const BOAR_B 48	/* boar */
		percent_chance 45	#const BOAR_B 1139	/* rhino */
		percent_chance 50	#const BOAR_B 1301	/* elephant */
	end_random

	start_random
		percent_chance 24	#const DEER_A 1019	/* zebra */
		percent_chance 25	#const DEER_A 1026	/* ostrich */
		percent_chance 25	#const DEER_A 1796	/* gazelle */
		percent_chance 25	#const DEER_A 2340	/* mouflon */
	end_random
	start_random
		percent_chance 24	#const DEER_B 1019	/* zebra */
		percent_chance 25	#const DEER_B 1026	/* ostrich */
		percent_chance 25	#const DEER_B 1796	/* gazelle */
		percent_chance 25	#const DEER_B 2340	/* mouflon */
	end_random
	
	start_random
		percent_chance 79	#const PREDATOR_A 1029	/* lion */
		percent_chance 20	#const PREDATOR_A 1031	/* crocodile */
	end_random
	
	#const BIRD_A 96	/* hawk */
	#const BIRD_B 1028	/* stork */
	#const BIRD_C 1305	/* vulture */
	
	#const FISH_A 458	/* snapper */
	start_random
		percent_chance 49	#const FISH_B 457	/* tuna */	
		percent_chance 49	#const FISH_B 455	/* dorado */
	end_random
	start_random
		percent_chance 49	#const SHOREFISH_C 69	/* shore fish */
		percent_chance 50	#const SHOREFISH_C 1141	/* box turtles */
	end_random
	
	start_random	/* override deer c */
		percent_chance 49	#define CAMEL_DROMEDADARY_OVERRIDE
		percent_chance 10	#define MONKEY_OVERRIDE
		percent_chance 10	#define HORSE_BROWN_OVERRIDE
		percent_chance 10	#define HORSE_GREYBLACK_OVERRIDE
		percent_chance 10	#define HORSE_GREY_BROWN_OVERRIDE
		percent_chance 10	#define HORSE_WHITE_BROWN_OVERRIDE
	end_random
	#const DEER_C 65	/* deer */
	#const DEER_C_DEAD 43
	
	#const HERO_ANIMAL 707	/* ornlu */
	
elseif DESERT_ANIMALS	/* =================================================================================================== */
	
	start_random
		percent_chance 19 	#const	BERRY_TYPE 59	/* forage bush */
		percent_chance 80 	#const	BERRY_TYPE 1059	/* fruit bush */
	end_random
	
	start_random
		percent_chance 24	#const SHEEP_A 305	/* llama */
		percent_chance 25	#const SHEEP_A 594	/* sheep */
		percent_chance 50	#const SHEEP_A 1060	/* goat */ 
	end_random
	start_random
		percent_chance 33	#const SHEEP_B 305	/* llama */
		percent_chance 33	#const SHEEP_B 594	/* sheep */
		percent_chance 33	#const SHEEP_B 1060	/* goat */
	end_random

	#const BOAR_A 822	/* javelina */
	#const BOAR_B 822	/* javelina */
	
	start_random
		percent_chance 25	#const DEER_A 1026	/* ostrich */
		percent_chance 25	#const DEER_A 1239	/* ibex */
		percent_chance 25	#const DEER_A 1796	/* gazelle */
		percent_chance 25	#const DEER_A 2340	/* mouflon */
	end_random
	start_random
		percent_chance 25	#const DEER_B 1026	/* ostrich */
		percent_chance 25	#const DEER_B 1239	/* ibex */
		percent_chance 25	#const DEER_B 1796	/* gazelle */
		percent_chance 25	#const DEER_B 2340	/* mouflon */
	end_random

	start_random
		percent_chance 24	#const PREDATOR_A 126	/* wolf */
		percent_chance 50	#const PREDATOR_A 1029	/* lion */
		percent_chance 25	#const PREDATOR_A 1135	/* komodo */
	end_random
	
	#const BIRD_A 96	/* hawk */
	#const BIRD_B 1056	/* falcon */
	#const BIRD_C 1305	/* vulture */
	
	#const FISH_A 458	/* snapper */
	start_random
		percent_chance 49	#const FISH_B 457	/* tuna */	
		percent_chance 49	#const FISH_B 455	/* dorado */
	end_random
	start_random
		percent_chance 49	#const SHOREFISH_C 69	/* shore fish */
		percent_chance 50	#const SHOREFISH_C 1141	/* box turtles */
	end_random
	
	start_random	/* override deer c */
		percent_chance 74	#define CAMEL_DROMEDADARY_OVERRIDE
		percent_chance 15	#define BACTRIAN_CAMEL_OVERRIDE
	end_random
	#const DEER_C 65	/* deer */
	#const DEER_C_DEAD 43
	
	#const HERO_ANIMAL 707	/* ornlu */

elseif SWAMP_ANIMALS	/* =================================================================================================== */

	start_random
		percent_chance 49 	#const	BERRY_TYPE 59	/* forage bush */
		percent_chance 50 	#const	BERRY_TYPE 1059	/* fruit bush */
	end_random

	start_random
		percent_chance 24	#const SHEEP_A 833	/* turkey */
		percent_chance 25	#const SHEEP_A 1142	#define SHEEP_A_IS_COW	/* water buffalo */
		percent_chance 25	#const SHEEP_A 1243	/* goose */
		percent_chance 25	#const SHEEP_A 1245	/* pig */
	end_random
	start_random
		percent_chance 24	#const SHEEP_B 833	/* turkey */
		percent_chance 25	#const SHEEP_B 1142	#define SHEEP_B_IS_COW	/* water buffalo */
		percent_chance 25	#const SHEEP_B 1243	/* goose */
		percent_chance 25	#const SHEEP_B 1245	/* pig */
	end_random		

	start_random
		percent_chance 49	#const BOAR_A 48	/* boar */
		percent_chance 25	#const BOAR_A 1139	/* rhino */
		percent_chance 25	#const BOAR_A 1301	/* elephant */
	end_random
	start_random
		percent_chance 49	#const BOAR_B 48	/* boar */
		percent_chance 25	#const BOAR_B 1139	/* rhino */
		percent_chance 25	#const BOAR_B 1301	/* elephant */
	end_random
	
	#const DEER_A 65	/* deer */ 
	#const DEER_B 65	/* deer */ 
	
	start_random
		percent_chance 9	#const PREDATOR_A 812	/* jaguar */
		percent_chance 80	#const PREDATOR_A 1031	/* crocodile */
		percent_chance 10	#const PREDATOR_A 1135	/* komodo */
	end_random
	
	#const BIRD_A 96	/* hawk */
	#const BIRD_B 1028	/* stork */
	#const BIRD_C 1305	/* vulture */
	
	#const FISH_A 458	/* snapper */
	#const FISH_B 455	/* dorado */

	#const SHOREFISH_C 1141	/* box turtles */
	
	#define MONKEY_OVERRIDE	/* override deer c */
	#const DEER_C 1019	/* zebra */
	#const DEER_C_DEAD 1020
	
	#const HERO_ANIMAL 860	/* furious */
	
else /* fallback - just in case something goes wrong */	/* =================================================================================================== */
	#const BERRY_TYPE 59	/* forage bush */
	#const SHEEP_A 594	/* sheep */
	#const SHEEP_B 594	/* sheep */
	#const BOAR_A 48	/* boar */
	#const BOAR_B 48	/* boar */
	#const DEER_A 65	/* deer */
	#const DEER_B 65	/* deer */
	#const PREDATOR_A 126	/* wolf */
	#const BIRD_A 96	/* hawk */
	#const FISH_A 455	/* dorado */
	#const FISH_B 53	/* perch has slightly less food than other fish */
	#const SHOREFISH_C 69	/* shore fish */
	#define HORSE_BROWN_OVERRIDE	/* override deer c */
	#const DEER_C 1019	/* zebra */
	#const DEER_C_DEAD 1020
	#const HERO_ANIMAL 707	/* ornlu */
endif

/* global animals */
start_random
	percent_chance 33	#const DEEPFISH_D 61	/* dolphin */
	percent_chance 33	#const DEEPFISH_D 450	/* marlin 1 */
	percent_chance 33	#const DEEPFISH_D 451	/* marlin 2 */
end_random

/* define all terrains as prep for terrain and connection section */
if TRUE
#const GRASS 0
#const WATER 1
#const BEACH 2
#const DIRT3 3
#const SHALLOW 4
#const LEAVES 5
#const DIRT 6
#const FARM_PLANTED 7
#const FARM_DEAD 8
#const GRASS3 9
#const FOREST 10
#const DIRT2 11
#const GRASS2 12
#const PALM_DESERT 13
#const DESERT 14
#const WATER_NOBEACH 15
#const ROCK1 16	#const CLIFF_GRASS 16
#const JUNGLE 17
#const BAMBOO 18
#const PINE_FOREST 19
#const OAK_FOREST 20
#const SNOW_FOREST 21
#const MED_WATER 23
#const DEEP_WATER 22
#const ROAD 24
#const ROAD2 25
#const ICE_SHALLOWS 26
#const DIRT_GRASS_FOUNDATION 27
#const WATER_WALKABLE 28
#const FARM1 29
#const FARM2 30
#const FARM3 31
#const SNOW 32
#const DIRT_SNOW 33
#const GRASS_SNOW 34
#const ICE 35
#const DIRT_SNOW_FOUNDATION 36
#const ICYSHORE 37
#const ROAD_SNOW 38
#const ROAD_FUNGUS 39
#const DLC_ROCK 40
#const DLC_SAVANNAH 41
#const DLC_DIRT4 42
#const DLC_DRYROAD 43
#const DLC_MOORLAND 44
#const DLC_CRACKED 45
#const DLC_QUICKSAND 46
#const DLC_BLACK 47
#const DLC_BAOBABFOREST 49
#const DLC_DRAGONFOREST 48
#const DLC_ACACIAFOREST 50
#const DLC_BEACH2 51
#const DLC_BEACH3 52
#const DLC_BEACH4 53
#const DLC_MANGROVESHALLOW 54
#const DLC_MANGROVEFOREST 55
#const DLC_RAINFOREST 56
#const DLC_WATER4 57
#const DLC_WATER5 58
#const DLC_NEWSHALLOW 59
#const DLC_JUNGLEGRASS 60
#const DLC_JUNGLEROAD 61
#const DLC_JUNGLELEAVES 62
#const RICE_FARM_PLANTED 63
#const RICE_FARM_DEAD 64
#const RICE_FARM1 65
#const RICE_FARM2 66
#const RICE_FARM3 67
/* aoc grass */
#const EVIL_FOG 69
#const GRAVEL 70
#const UNDERBRUSH_LEAVES 71
#const SNOW_UNDERBRUSH 72
#const SNOW_LIGHT 73
#const SNOW_HEAVY 74
#const ROAD_FUNGUS_NEW 75
#const MUD 76
#const UNDERBRUSH_JUNGLE 77
#const ROAD_GRAVEL_NEW 78
#const BEACH_BUILDABLE 79
#const WET_BEACH_BUILDABLE 80
#const WET_GRAVEL_BUILDABLE 81
#const WET_ROCK_BUILDABLE 82
#const JUNGLE_GRASS_NEW 83
/* unused */
#const MEDITERRANEAN_FOREST 88
#const BUSH_FOREST 89
#const REED_FOREST_SHALLOWS 90
#const DLC_REEDSBEACH 91
#const REED_FOREST 92
/* unused */
#const WATER_GREEN 95
#const WATER_BROWN 96
/* unused */
#const DLC_DRYGRASS 100
#const DLC_BOGLAND 101
#const DLC_DESERTGRAVEL 102
#const DLC_ROADGRAVEL 103
#const DLC_FORESTAUTUMN 104
#const DLC_FORESTSNOWAUTUMN 105
#const DLC_FORESTDEAD 106
#const DLC_WETBEACH 107
#const DLC_GRAVELBEACH 108 
#const DLC_WETROCKBEACH 109
#const BIRCH_FOREST 110
#const MUDDY_SHALLOW 111
#const PALM_FOREST 112
endif

/* pick buildings to start with */
start_random
	percent_chance 7	#const STANDARD_BUILDING_TYPE 12	/* barracks  */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 49	/* siege workshop */
	percent_chance 4	#const STANDARD_BUILDING_TYPE 68	/* mill */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 84	/* market */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 87	/* archery range */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 101	/* stable */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 103	/* blacksmith */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 104	/* monastry */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 209	/* university */
	percent_chance 5	#const STANDARD_BUILDING_TYPE 562	/* lumber camp */
	percent_chance 5	#const STANDARD_BUILDING_TYPE 584	/* mining camp */
	percent_chance 8	#const STANDARD_BUILDING_TYPE 1665	/* donjon */
	percent_chance 4	#const STANDARD_BUILDING_TYPE 1734	/* folwark */
	percent_chance 1	#const STANDARD_BUILDING_TYPE 1754	/* caravanserai */
	percent_chance 100	#const STANDARD_BUILDING_TYPE 1808	/* mule cart */
end_random

start_random
	percent_chance 19	#const CASTLE_TYPE 33	/* fortress - 30 pop */
	percent_chance 20	#const CASTLE_TYPE 445	/* poenari castle - 25 pop */
	percent_chance 20	#const CASTLE_TYPE 1251	/* krepost */
	percent_chance 100	#const CASTLE_TYPE 82	/* castle */
end_random

start_random
	percent_chance 49	#const FARM_TYPE 50	/* farm */
	percent_chance 50	#const FARM_TYPE 1187	/* rice farm */
end_random

start_random
	percent_chance 34	#const TOWER_TYPE 79	/* watch tower */
	percent_chance 15	#const TOWER_TYPE 190	/* fire tower */
	percent_chance 15	#const TOWER_TYPE 234	/* gaurd tower */
	percent_chance 5	#const TOWER_TYPE 235	/* keep */
	percent_chance 5	#const TOWER_TYPE 235	/* bombard tower */
	percent_chance 1	#const TOWER_TYPE 684	/* accursed tower */
	percent_chance 1	#const TOWER_TYPE 685	/* tower of the flies */
	percent_chance 10	#const TOWER_TYPE 1665	/* donjon */
	percent_chance 10	#const TOWER_TYPE 1806	/* fortified church - does not train/research */
	percent_chance 1	#const TOWER_TYPE 2275	/* economic town center - does not train/research */
	percent_chance 1	#const TOWER_TYPE 2276	/* defensive town center - does not train/research */
	percent_chance 1	#const TOWER_TYPE 2277	/* military town center - does not train/research */
end_random

start_random
	percent_chance 19	#define TC_TOWER 79	/* watch tower */
	percent_chance 20	#define TC_TOWER 234	/* guard tower */
	percent_chance 20	#define TC_TOWER 235	/* keep */
	percent_chance 20	#define TC_TOWER 236	/* bombard tower */
	percent_chance 20	#define TC_TOWER 190	/* fire tower */
end_random

start_random
	percent_chance 3	#const HOUSE_TYPE 624	/* pavilion 1 */
	percent_chance 4	#const HOUSE_TYPE 625	/* pavilion 3 */
	percent_chance 4	#const HOUSE_TYPE 626	/* pavilion 2 */
	percent_chance 2	#const HOUSE_TYPE 712	/* yurt 1 */
	percent_chance 2	#const HOUSE_TYPE 713	/* yurt 2 */
	percent_chance 2	#const HOUSE_TYPE 714	/* yurt 3 */
	percent_chance 2	#const HOUSE_TYPE 715	/* yurt 4 */
	percent_chance 2	#const HOUSE_TYPE 716	/* yurt 5 */
	percent_chance 2	#const HOUSE_TYPE 717	/* yurt 6 */
	percent_chance 2	#const HOUSE_TYPE 718	/* yurt 7 */
	percent_chance 2	#const HOUSE_TYPE 719	/* yurt 8 */
	percent_chance 3	#const HOUSE_TYPE 1082	/* hut a */
	percent_chance 3	#const HOUSE_TYPE 1083	/* hut b */
	percent_chance 3	#const HOUSE_TYPE 1084	/* hut c */
	percent_chance 3	#const HOUSE_TYPE 1085	/* hut d */
	percent_chance 3	#const HOUSE_TYPE 1086	/* hut e */
	percent_chance 3	#const HOUSE_TYPE 1087	/* hut f */
	percent_chance 3	#const HOUSE_TYPE 1088	/* hut g */
	percent_chance 3	#const HOUSE_TYPE 1097	/* tent a */
	percent_chance 3	#const HOUSE_TYPE 1098	/* tent b */
	percent_chance 3	#const HOUSE_TYPE 1099	/* tent c */
	percent_chance 3	#const HOUSE_TYPE 1100	/* tent d */
	percent_chance 3	#const HOUSE_TYPE 1101	/* tent e */
	percent_chance 3	#const HOUSE_TYPE 1196	/* army tent a */
	percent_chance 3	#const HOUSE_TYPE 1197	/* army tent b */
	percent_chance 3	#const HOUSE_TYPE 1198	/* army tent c */
	percent_chance 3	#const HOUSE_TYPE 1199	/* army tent d */
	percent_chance 3	#const HOUSE_TYPE 1200	/* army tent e */
	percent_chance 3	#const HOUSE_TYPE 1832	/* yurt i */
	percent_chance 3	#const HOUSE_TYPE 1833	/* yurt j */
	percent_chance 3	#const HOUSE_TYPE 1834	/* yurt k */
	percent_chance 3	#const HOUSE_TYPE 1835	/* yurt l */
	percent_chance 4	#const HOUSE_TYPE 2176	/* greek army tent a */
	percent_chance 4	#const HOUSE_TYPE 2262	/* greek commander tent a */
	/* 99 so far */
	percent_chance 100	#const HOUSE_TYPE 70	/* house */
end_random 

start_random
	percent_chance 4	#const MONUMENT_TYPE 599	/* cathederal */
	percent_chance 5	#const MONUMENT_TYPE 655	/* mosque */
	percent_chance 5	#const MONUMENT_TYPE 689	/* pyramid */
	percent_chance 5	#const MONUMENT_TYPE 690	/* dome of the rock */
	percent_chance 5	#const MONUMENT_TYPE 696	/* great pyramid */
	percent_chance 5	#const MONUMENT_TYPE 251	/* amphitheatre */
	percent_chance 5	#const MONUMENT_TYPE 263	/* colosseum */
	percent_chance 5	#const MONUMENT_TYPE 637	/* temple of heaven */
	percent_chance 6	#const MONUMENT_TYPE 872	/* quimter cathederal */
	percent_chance 6	#const MONUMENT_TYPE 899	/* arch of constantine */
	percent_chance 6	#const MONUMENT_TYPE 1096	/* palace */
	percent_chance 6	#const MONUMENT_TYPE 1216	/* sanchi stupa */
	percent_chance 6	#const MONUMENT_TYPE 1217	/* goi gumbaz */
	percent_chance 6	#const MONUMENT_TYPE 1367	/* sankore madrasah */
	percent_chance 6	#const MONUMENT_TYPE 1368	/* tower of london */
	percent_chance 6	#const MONUMENT_TYPE 1369	/* dormition cathederal */
	percent_chance 6	#const MONUMENT_TYPE 1622	/* aachen cathederal */
	percent_chance 100	#const MONUMENT_TYPE 1773	/* minaret of jam */
end_random

start_random
	percent_chance 10	#const MISC_BUILDING_TYPE 110	/* trade workshop no function */
	percent_chance 10	#const MISC_BUILDING_TYPE 179	/* trade workshop no function */
	percent_chance 10	#const MISC_BUILDING_TYPE 1081	/* storage */
	percent_chance 10	#const MISC_BUILDING_TYPE 1089	/* granery */
	percent_chance 5	#const MISC_BUILDING_TYPE 1090	/* barricade */
	percent_chance 5	#const MISC_BUILDING_TYPE 1218	/* barriacade b */
	percent_chance 5	#const MISC_BUILDING_TYPE 1219	/* barricade c */
	percent_chance 5	#const MISC_BUILDING_TYPE 1220	/* barricade d */
	percent_chance 10	#const MISC_BUILDING_TYPE 1264	/* shrine */
	percent_chance 10	#const MISC_BUILDING_TYPE 1712	/* pagan shrine */
	percent_chance 10	#const MISC_BUILDING_TYPE 2281	/* sapper tunnel */
	percent_chance 100	#const MISC_BUILDING_TYPE 598	/* outpost */
end_random

start_random
	percent_chance 49	#const OP_BUILDINGS_TYPE 308	/*  armored outpost - slightly buggy */
	percent_chance 50	#const OP_BUILDINGS_TYPE 566	/*  super strong watch tower */
end_random


/* check team setup */
if 2_PLAYER_GAME	
	#define BALANCED_TEAMS
elseif FIXED_POSITIONS
	if 4_PLAYER_GAME
		if TEAM2_SIZE2
			#define BALANCED_TEAMS
		endif
	elseif 6_PLAYER_GAME
		if TEAM1_SIZE3
			if TEAM2_SIZE3
				#define BALANCED_TEAMS
			endif
		endif
	elseif 8_PLAYER_GAME
		if TEAM1_SIZE4
			if TEAM2_SIZE4
				#define BALANCED_TEAMS
			endif
		elseif 4_TEAM_GAME
			#define BALANCED_TEAMS
		endif
	endif
endif
if 0_TEAM_GAME
	if 2_PLAYER_GAME
	else	#define FREE_FOR_ALL
	endif
endif

/* =================================================================================================== */
<PLAYER_SETUP>
/* nomad resources, grouped by team, and UP effects are implemented here */

/* randomly choose an architecture style for gaia */
if BATTLE_ROYALE
	start_random
		percent_chance 9	set_gaia_civilization rnd(0,48)
	end_random
endif

behavior_version rnd(0,1)

/* add the cost of a town center to the starting resources */
if USE_NOMAD_SETUP	
	if DISABLE_NOMAD_TREATY
	else	force_nomad_treaty
	endif
	if USE_STANDARD_STARTING_UNITS	nomad_resources
	elseif ALLOW_NOMAD_WITHOUT_TC_RES
		start_random
			percent_chance 1	#define GIVE_PACKED_TC
			percent_chance 97	nomad_resources
			percent_chance 1	#define NOMAD_WITHOUT_TC_RES
		end_random
	else
		start_random
			percent_chance 1	#define GIVE_PACKED_TC
			percent_chance 98	nomad_resources
		end_random
	endif
endif
if NOMAD_WITHOUT_TC_RES	#define GIVE_MULE_CART
else
	start_random
		percent_chance 4	#define GIVE_MULE_CART
	end_random
endif

/* modify the starting resources */
if USE_STANDARD_RESOURCES
elseif ALLOW_MODIFIED_STARTING_STOCKPILE
	start_random
		percent_chance 9
			effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD rnd(-100,100)
			if NOMAD_WITHOUT_TC_RES else effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD rnd(-100,100) endif
			effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD rnd(-50,50)
			effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD rnd(-100,100)
	end_random
endif

/* place players as if they were neutral lands, ie. not in a circle */
if ALLOW_FULL_RANDOM_PLACEMENT
	if KING_OT_HILL
	elseif CAPTURE_THE_RELIC
	elseif CAPTURE_RELICS
	elseif BATTLE_ROYALE
	elseif 2_PLAYER_GAME
	elseif BALANCED_TEAMS
	else
		if FIXED_POSITIONS
			start_random
				percent_chance 4	#define USE_FULL_RANDOM_PLACEMENT 	#define NO_PLAYER_LAND_BORDERS	#define NO_CENTRAL_LAND	#define NO_CORNER_LANDS	#define NO_SIDE_LANDS
			end_random
		else
			start_random
				percent_chance 19	#define USE_FULL_RANDOM_PLACEMENT 	#define NO_PLAYER_LAND_BORDERS	#define NO_CENTRAL_LAND	#define NO_CORNER_LANDS	#define NO_SIDE_LANDS
			end_random
		endif
	endif
endif

if USE_FULL_RANDOM_PLACEMENT	direct_placement	
elseif USE_TEAM_GROUPING	grouped_by_team
else					random_placement
endif

/* some dynamic help for the AI */
/* can be made more advanced in the future with water and islands support and such */
if USE_NOMAD_SETUP
	if USE_MICHI_STYLE	ai_info_map_type CUSTOM 1 1 0
	else				ai_info_map_type CUSTOM 1 0 0
	endif
elseif USE_MICHI_STYLE	ai_info_map_type CUSTOM 0 1 0
else					ai_info_map_type CUSTOM 0 0 0
endif

/* delayed allied vision on nomad */
#const ALLIED_VISION_RESOURCE 50
#const TC_ANNEX 890
if USE_NOMAD_SETUP
	if NOMAD_ALLIED_VISION
		if 0_TEAM_GAME
			else	guard_state TC_ANNEX ALLIED_VISION_RESOURCE 100 2
		endif
	endif
endif

/* custom hunt */
if TESTING_NO_HUNT_OVERRIDE
#const DEER_C 65
#const DEER_C_DEAD 43

elseif PENGUIN_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 8259
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 8259
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 8258
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 8261
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 8261
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 8257
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 8260
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5734
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 157
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 128
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 16
effect_percent GAIA_SET_ATTRIBUTE DEER_C ATTR_MOVE_SPEED 64

elseif MONKEY_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 7351
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 7351
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 7350
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 7353
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 7353
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 7349
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 7352
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5853
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 132
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 99
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 9
effect_percent GAIA_SET_ATTRIBUTE DEER_C ATTR_MOVE_SPEED 99

elseif CAMEL_DROMEDADARY_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 7572
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 7572
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 7571
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 7575
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 7573
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 7570
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 7574
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5736
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 135
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 200
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 10

elseif BACTRIAN_CAMEL_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 10439
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 10439
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 10438
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 10442
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 10440
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 10437
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 10441
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5334
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 266
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 200
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 10

elseif HORSE_BROWN_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 6636
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 6636
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 6635
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 6639
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 6637
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 6634
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 6638
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5735
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 112
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 200
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 10

elseif HORSE_HEAVY_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 5596
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 5596
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 5595
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 5599
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 5597
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 5594
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 5598
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5735
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 112
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 200
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 10

elseif HORSE_GREYBLACK_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 5602
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 5602
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 5601
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 5605
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 5603
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 5600
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 5604
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5735
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 112
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 200
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 10

elseif HORSE_GREY_BROWN_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 5608
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 5608
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 5607
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 5611
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 5609
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 5606
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 5610
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5735
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 112
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 200
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 10

elseif HORSE_WHITE_BROWN_OVERRIDE
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING_GRAPHIC 5614
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STANDING2_GRAPHIC 5614
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_DYING_GRAPHIC 5613
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_WALKING_GRAPHIC 5617
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_RUNNING_GRAPHIC 5615
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ATTACK_GRAPHIC 5612
effect_amount GAIA_SET_ATTRIBUTE DEER_C_DEAD ATTR_STANDING_GRAPHIC 5616
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_NAME_ID 5735
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_ICON_ID 112
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_STORAGE_VALUE 200
effect_amount GAIA_SET_ATTRIBUTE DEER_C ATTR_HITPOINTS 10
endif

/* respawning resources */
#const DOLPHIN 61
#const BUSH_A 302
#const REEDTREE 1350
#const MOUFLON 2340

if USE_RESPAWNING_RESOURCES
	effect_amount SET_ATTRIBUTE FORAGE ATTR_DEAD_ID 59
	effect_amount SET_ATTRIBUTE DLC_ORANGEBUSH ATTR_DEAD_ID 1059
	effect_amount SET_ATTRIBUTE GOLD ATTR_DEAD_ID 66
	effect_amount SET_ATTRIBUTE STONE ATTR_DEAD_ID 102
	effect_amount SET_ATTRIBUTE OYSTERS ATTR_DEAD_ID 2170

	effect_amount SET_ATTRIBUTE BUSH_A ATTR_DEAD_ID 302
	effect_amount SET_ATTRIBUTE BAMBOO_TREE ATTR_DEAD_ID 348
	effect_amount SET_ATTRIBUTE OAKTREE ATTR_DEAD_ID 349
	effect_amount SET_ATTRIBUTE PINETREE ATTR_DEAD_ID 350
	effect_amount SET_ATTRIBUTE PALMTREE ATTR_DEAD_ID 351
	effect_amount SET_ATTRIBUTE FOREST_TREE ATTR_DEAD_ID 411
	effect_amount SET_ATTRIBUTE SNOWPINETREE ATTR_DEAD_ID 413
	effect_amount SET_ATTRIBUTE JUNGLETREE ATTR_DEAD_ID 414
	effect_amount SET_ATTRIBUTE DLC_DRAGONTREE ATTR_DEAD_ID 1051
	effect_amount SET_ATTRIBUTE DLC_BAOBABTREE ATTR_DEAD_ID 1052
	effect_amount SET_ATTRIBUTE DLC_AFRICANBUSH ATTR_DEAD_ID 1053
	effect_amount SET_ATTRIBUTE DLC_AFRICANBUSH_2 ATTR_DEAD_ID 1054
	effect_amount SET_ATTRIBUTE DLC_ACACIATREE ATTR_DEAD_ID 1063
	effect_amount SET_ATTRIBUTE DLC_MANGROVE_TREE ATTR_DEAD_ID 1144
	effect_amount SET_ATTRIBUTE DLC_RAINTREE ATTR_DEAD_ID 1146
	effect_amount SET_ATTRIBUTE DLC_AUTUMNTREE ATTR_DEAD_ID 1248
	effect_amount SET_ATTRIBUTE DLC_AUTUMNSNOWTREE ATTR_DEAD_ID 1249
	effect_amount SET_ATTRIBUTE DLC_DEADTREE ATTR_DEAD_ID 1250
	effect_amount SET_ATTRIBUTE CYPRESS_TREE ATTR_DEAD_ID 1347
	effect_amount SET_ATTRIBUTE ITALIAN_PINETREE ATTR_DEAD_ID 1348
	effect_amount SET_ATTRIBUTE OLIVE_TREE ATTR_DEAD_ID 1349
	effect_amount SET_ATTRIBUTE REEDTREE ATTR_DEAD_ID 1350
	effect_amount SET_ATTRIBUTE BIRCH_TREE ATTR_DEAD_ID 1717

	effect_amount SET_ATTRIBUTE TREE_TD ATTR_DEAD_ID 284
	effect_amount SET_ATTRIBUTE TREE_A ATTR_DEAD_ID 399
	effect_amount SET_ATTRIBUTE TREE_B ATTR_DEAD_ID 400
	effect_amount SET_ATTRIBUTE TREE_C ATTR_DEAD_ID 401
	effect_amount SET_ATTRIBUTE TREE_D ATTR_DEAD_ID 402
	effect_amount SET_ATTRIBUTE TREE_E ATTR_DEAD_ID 403
	effect_amount SET_ATTRIBUTE TREE_F ATTR_DEAD_ID 404
	effect_amount SET_ATTRIBUTE TREE_G ATTR_DEAD_ID 405
	effect_amount SET_ATTRIBUTE TREE_H ATTR_DEAD_ID 406
	effect_amount SET_ATTRIBUTE TREE_I ATTR_DEAD_ID 407
	effect_amount SET_ATTRIBUTE TREE_J ATTR_DEAD_ID 408
	effect_amount SET_ATTRIBUTE TREE_K ATTR_DEAD_ID 409
	effect_amount SET_ATTRIBUTE TREE_L ATTR_DEAD_ID 410

	effect_amount SET_ATTRIBUTE DLC_LLAMA ATTR_DEAD_ID 305
	effect_amount SET_ATTRIBUTE SHEEP ATTR_DEAD_ID 594
	effect_amount SET_ATTRIBUTE DLC_COW ATTR_DEAD_ID 705
	effect_amount SET_ATTRIBUTE TURKEY ATTR_DEAD_ID 833
	effect_amount SET_ATTRIBUTE DLC_GOAT ATTR_DEAD_ID 1060
	effect_amount SET_ATTRIBUTE DLC_WATERBUFFALO ATTR_DEAD_ID 1142
	effect_amount SET_ATTRIBUTE DLC_GOOSE ATTR_DEAD_ID 1243
	effect_amount SET_ATTRIBUTE DLC_PIG ATTR_DEAD_ID 1245
	effect_amount SET_ATTRIBUTE DLC_COW_B ATTR_DEAD_ID 1596
	effect_amount SET_ATTRIBUTE DLC_COW_C ATTR_DEAD_ID 1598
	effect_amount SET_ATTRIBUTE DLC_COW_D ATTR_DEAD_ID 1600

	effect_amount SET_ATTRIBUTE DEER ATTR_DEAD_ID 65
	effect_amount SET_ATTRIBUTE DLC_ZEBRA ATTR_DEAD_ID 1019
	effect_amount SET_ATTRIBUTE DLC_OSTRICH ATTR_DEAD_ID 1026
	effect_amount SET_ATTRIBUTE DLC_IBEX ATTR_DEAD_ID 1239
	effect_amount SET_ATTRIBUTE GAZELLE ATTR_DEAD_ID 1796
	effect_amount SET_ATTRIBUTE MOUFLON ATTR_DEAD_ID 2340

	effect_amount SET_ATTRIBUTE BOAR ATTR_DEAD_ID 48
	effect_amount SET_ATTRIBUTE JAVELINA ATTR_DEAD_ID 822
	effect_amount SET_ATTRIBUTE DLC_ELEPHANT ATTR_DEAD_ID 1301
	effect_amount SET_ATTRIBUTE DLC_RHINO ATTR_DEAD_ID 1139

	effect_amount SET_ATTRIBUTE FISH ATTR_DEAD_ID 53
	effect_amount SET_ATTRIBUTE DOLPHIN ATTR_DEAD_ID 61
	effect_amount SET_ATTRIBUTE SHORE_FISH ATTR_DEAD_ID 69
	effect_amount SET_ATTRIBUTE MARLIN1 ATTR_DEAD_ID 450
	effect_amount SET_ATTRIBUTE MARLIN2 ATTR_DEAD_ID 451
	effect_amount SET_ATTRIBUTE DORADO ATTR_DEAD_ID 455
	effect_amount SET_ATTRIBUTE SALMON ATTR_DEAD_ID 456
	effect_amount SET_ATTRIBUTE TUNA ATTR_DEAD_ID 457
	effect_amount SET_ATTRIBUTE SNAPPER ATTR_DEAD_ID 458
	effect_amount SET_ATTRIBUTE DLC_BOXTURTLE ATTR_DEAD_ID 1141
endif

/* placeholder to position empire wars docks properly */
#const PH_WATER_OFF 1291 /* invisible object that keeps players alive */
effect_amount SET_ATTRIBUTE PH_WATER_OFF ATTR_DEAD_ID -1
effect_amount SET_ATTRIBUTE PH_WATER_OFF ATTR_TERRAIN_ID 17
effect_amount SET_ATTRIBUTE PH_WATER_OFF ATTR_LINE_OF_SIGHT 0
effect_amount SET_ATTRIBUTE PH_WATER_OFF ATTR_HITPOINTS 0
effect_amount SET_ATTRIBUTE PH_WATER_OFF ATTR_STORAGE_VALUE 0

/* prevent fish on beaches, but allow on shallows */
effect_amount SET_ATTRIBUTE FISH ATTR_TERRAIN_ID 17
effect_amount SET_ATTRIBUTE DORADO ATTR_TERRAIN_ID 17
effect_amount SET_ATTRIBUTE SALMON ATTR_TERRAIN_ID 17
effect_amount SET_ATTRIBUTE TUNA ATTR_TERRAIN_ID 17
effect_amount SET_ATTRIBUTE SNAPPER ATTR_TERRAIN_ID 17

effect_amount SET_ATTRIBUTE DOLPHIN ATTR_TERRAIN_ID 17
effect_amount SET_ATTRIBUTE MARLIN1 ATTR_TERRAIN_ID 17
effect_amount SET_ATTRIBUTE MARLIN2 ATTR_TERRAIN_ID 17


/* correcting terrain restrictions for huntables so they may also generate on beaches */
effect_amount SET_ATTRIBUTE DEER_A ATTR_TERRAIN_ID 7
effect_amount SET_ATTRIBUTE DEER_B ATTR_TERRAIN_ID 7
effect_amount SET_ATTRIBUTE DEER_C ATTR_TERRAIN_ID 7

/* fix to make sure resources spawn correctly on mangrove shallows biomes */
#const GOLD_ROCK 841
#const STONE_ROCK 839
if MANGROVE_SWAMP_BIOME
	effect_amount SET_ATTRIBUTE BERRY_TYPE ATTR_TERRAIN_ID 7
	effect_amount SET_ATTRIBUTE GOLD ATTR_TERRAIN_ID 7
	effect_amount SET_ATTRIBUTE STONE ATTR_TERRAIN_ID 7
	effect_amount SET_ATTRIBUTE GOLD_ROCK ATTR_TERRAIN_ID 7
	effect_amount SET_ATTRIBUTE STONE_ROCK ATTR_TERRAIN_ID 7
else	/* the standard terrain restrictions */
	effect_amount SET_ATTRIBUTE BERRY_TYPE ATTR_TERRAIN_ID 8
	effect_amount SET_ATTRIBUTE GOLD ATTR_TERRAIN_ID 8
	effect_amount SET_ATTRIBUTE STONE ATTR_TERRAIN_ID 8
	effect_amount SET_ATTRIBUTE GOLD_ROCK ATTR_TERRAIN_ID 8
	effect_amount SET_ATTRIBUTE STONE_ROCK ATTR_TERRAIN_ID 8
endif

/* change forest tree wood amount */
if USE_STANDARD_RESOURCES
elseif NO_RESOURCE_DELTA
else
	effect_amount GAIA_SET_ATTRIBUTE BUSH_A ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE BAMBOO_TREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE OAKTREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE PINETREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE PALMTREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE FOREST_TREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE SNOWPINETREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE JUNGLETREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE DLC_DRAGONTREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE DLC_BAOBABTREE ATTR_STORAGE_VALUE rnd(100,300)
	effect_amount GAIA_SET_ATTRIBUTE DLC_AFRICANBUSH ATTR_STORAGE_VALUE rnd(50,150)	
	effect_amount GAIA_SET_ATTRIBUTE DLC_AFRICANBUSH_2 ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE DLC_ACACIATREE ATTR_STORAGE_VALUE rnd(75,125)
	effect_amount GAIA_SET_ATTRIBUTE DLC_MANGROVE_TREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE DLC_RAINTREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE DLC_AUTUMNTREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE DLC_AUTUMNSNOWTREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE DLC_DEADTREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE CYPRESS_TREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE ITALIAN_PINETREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE OLIVE_TREE ATTR_STORAGE_VALUE rnd(50,150)
	effect_amount GAIA_SET_ATTRIBUTE REEDTREE ATTR_STORAGE_VALUE rnd(25,75)
	effect_amount GAIA_SET_ATTRIBUTE BIRCH_TREE ATTR_STORAGE_VALUE rnd(50,150)	
endif

/* gaia units regenerate hp */
if NO_GAIA_REGEN
else
	effect_amount SET_ATTRIBUTE PREDATOR_A ATTR_REGENERATION_RATE rnd(0,5)
	effect_amount SET_ATTRIBUTE BOAR_A ATTR_REGENERATION_RATE rnd(0,5)
	effect_amount SET_ATTRIBUTE BOAR_B ATTR_REGENERATION_RATE rnd(0,5)
	effect_amount SET_ATTRIBUTE DEER_A ATTR_REGENERATION_RATE rnd(0,5)
	effect_amount SET_ATTRIBUTE DEER_B ATTR_REGENERATION_RATE rnd(0,5)
	effect_amount SET_ATTRIBUTE DEER_C ATTR_REGENERATION_RATE rnd(0,5)
	effect_amount SET_ATTRIBUTE SHEEP_A ATTR_REGENERATION_RATE rnd(0,5)
	effect_amount SET_ATTRIBUTE SHEEP_B ATTR_REGENERATION_RATE rnd(0,5)
endif

/* upgrade wild horse into another unit */
/*
effect_amount UPGRADE_UNIT WILD_HORSE WILD_ANIMAL_A 0
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_LINE_OF_SIGHT 2
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_SEARCH_RADIUS 2
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_ATTACK 1024
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_ATTACK 3328
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_ATTACK 5376
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_ARMOR 768
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_ARMOR 1024
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_SHOWN_ATTACK 0
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_SHOWN_MELEE_ARMOR 0
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_SHOWN_PIERCE_ARMOR 0
effect_amount SET_ATTRIBUTE WILD_HORSE ATTR_HITPOINTS 25
*/

/* safe delete and HP regen on TCs in sudden death and the same for kings in regicide */
if SUDDEN_DEATH
	effect_amount SET_ATTRIBUTE TOWN_CENTER ATTR_HERO_STATUS 1
	effect_amount SET_ATTRIBUTE TOWN_CENTER_F ATTR_HERO_STATUS 1
	effect_amount SET_ATTRIBUTE TOWN_CENTER_C ATTR_HERO_STATUS 1
	effect_amount SET_ATTRIBUTE TOWN_CENTER_I ATTR_HERO_STATUS 1
endif
if REGICIDE
	effect_amount SET_ATTRIBUTE KING ATTR_HERO_STATUS 1
endif

/* trainable units from the monument */
if USE_NOMAD_SETUP
elseif NO_MONUMENT_UNITS
else
	/*
	#const IMPERIAL_LEGIONARY 1
	effect_amount ENABLE_OBJECT IMPERIAL_LEGIONARY ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE IMPERIAL_LEGIONARY ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE IMPERIAL_LEGIONARY ATTR_TRAIN_BUTTON 1
	effect_amount SET_ATTRIBUTE IMPERIAL_LEGIONARY ATTR_HOTKEY_ID 16079
	*/

	#const SPY 138
	effect_amount ENABLE_OBJECT SPY ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE SPY ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE SPY ATTR_TRAIN_BUTTON 1
	effect_amount SET_ATTRIBUTE SPY ATTR_HOTKEY_ID 16079
	effect_amount SET_ATTRIBUTE SPY ATTR_CREATE_SDESC_ID 51803
	
	/* imperial centurion 
	effect_amount ENABLE_OBJECT CARAVAN ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE CARAVAN ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE CARAVAN ATTR_TRAIN_BUTTON 2
	effect_amount SET_ATTRIBUTE CARAVAN ATTR_HOTKEY_ID 16078
	*/

	#const ELITE_QIZILBASH 1829
	effect_amount ENABLE_OBJECT ELITE_QIZILBASH ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE ELITE_QIZILBASH ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE ELITE_QIZILBASH ATTR_TRAIN_BUTTON 2
	effect_amount SET_ATTRIBUTE ELITE_QIZILBASH ATTR_HOTKEY_ID 16078
	
	effect_amount ENABLE_OBJECT ARCHERS_OF_THE_EYES ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE ARCHERS_OF_THE_EYES ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE ARCHERS_OF_THE_EYES ATTR_TRAIN_BUTTON 3
	effect_amount SET_ATTRIBUTE ARCHERS_OF_THE_EYES ATTR_HOTKEY_ID 16679
	effect_amount SET_ATTRIBUTE ARCHERS_OF_THE_EYES ATTR_CREATE_SDESC_ID -14432 
	
	#const FLAMETHROWER 188
	effect_amount ENABLE_OBJECT FLAMETHROWER ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE FLAMETHROWER ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE FLAMETHROWER ATTR_TRAIN_BUTTON 4
	effect_amount SET_ATTRIBUTE FLAMETHROWER ATTR_HOTKEY_ID 16671
	
	#const NINJA 1145
	effect_amount ENABLE_OBJECT NINJA ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE NINJA ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE NINJA ATTR_TRAIN_BUTTON 6
	effect_amount SET_ATTRIBUTE NINJA ATTR_HOTKEY_ID -1
	
	#const MOUNTED_SAMURAI 1568
	effect_amount ENABLE_OBJECT MOUNTED_SAMURAI ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE MOUNTED_SAMURAI ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE MOUNTED_SAMURAI ATTR_TRAIN_BUTTON 7
	effect_amount SET_ATTRIBUTE MOUNTED_SAMURAI ATTR_HOTKEY_ID -1
	
	#const KHAN 1275
	effect_amount ENABLE_OBJECT KHAN ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE KHAN ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE KHAN ATTR_TRAIN_BUTTON 8
	effect_amount SET_ATTRIBUTE KHAN ATTR_HOTKEY_ID 16734
	effect_amount SET_ATTRIBUTE KHAN ATTR_CREATE_SDESC_ID -14596 
	
	effect_amount ENABLE_OBJECT SABOTEUR ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE SABOTEUR ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE SABOTEUR ATTR_TRAIN_BUTTON 9
	effect_amount SET_ATTRIBUTE SABOTEUR ATTR_HOTKEY_ID 16445
	effect_amount SET_ATTRIBUTE SABOTEUR ATTR_CREATE_SDESC_ID -14412

	effect_amount ENABLE_OBJECT IMAM ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE IMAM ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE IMAM ATTR_TRAIN_BUTTON 10
	effect_amount SET_ATTRIBUTE IMAM ATTR_HOTKEY_ID 16691
	effect_amount SET_ATTRIBUTE IMAM ATTR_CREATE_SDESC_ID -14258
	
	#const HEAVY_PIKEMAN 892
	effect_amount ENABLE_OBJECT HEAVY_PIKEMAN ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE HEAVY_PIKEMAN ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE HEAVY_PIKEMAN ATTR_TRAIN_BUTTON 11
	effect_amount SET_ATTRIBUTE HEAVY_PIKEMAN ATTR_HOTKEY_ID -1
	
	#const CRUSADER_KNIGHT 1723
	effect_amount ENABLE_OBJECT CRUSADER_KNIGHT ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE CRUSADER_KNIGHT ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE CRUSADER_KNIGHT ATTR_TRAIN_BUTTON 12
	effect_amount SET_ATTRIBUTE CRUSADER_KNIGHT ATTR_HOTKEY_ID -1
	
	#const ROYAL_JANISSARY 52
	effect_amount ENABLE_OBJECT ROYAL_JANISSARY ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE ROYAL_JANISSARY ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE ROYAL_JANISSARY ATTR_TRAIN_BUTTON 13
	effect_amount SET_ATTRIBUTE ROYAL_JANISSARY ATTR_HOTKEY_ID -1
	
	#const WARWOLF_TREBUCHET 1691
	effect_amount ENABLE_OBJECT WARWOLF_TREBUCHET ATTR_ENABLE 1
	effect_amount SET_ATTRIBUTE WARWOLF_TREBUCHET ATTR_TRAIN_LOCATION 826
	effect_amount SET_ATTRIBUTE WARWOLF_TREBUCHET ATTR_TRAIN_BUTTON 14
	effect_amount SET_ATTRIBUTE WARWOLF_TREBUCHET ATTR_HOTKEY_ID -1
	effect_amount SET_ATTRIBUTE WARWOLF_TREBUCHET ATTR_CREATE_SDESC_ID -14445 
endif

/* beta unit names to fix missing strings */
#const BETA_CAMEL_RIDER 37
effect_amount SET_ATTRIBUTE BETA_CAMEL_RIDER ATTR_NAME_ID 1005	/* beta version */
effect_amount SET_ATTRIBUTE BETA_CAMEL_RIDER ATTR_ICON_ID 78
#const BETA_GENITOUR 583
effect_amount SET_ATTRIBUTE BETA_GENITOUR ATTR_ICON_ID 201
#const BETA_ELITE_GENITOUR 596
effect_amount SET_ATTRIBUTE BETA_ELITE_GENITOUR ATTR_ICON_ID 201

#const VMDL 206	/* vmdl */
effect_amount SET_ATTRIBUTE VMDL ATTR_NAME_ID 5653

#const RAIDER_ARCHER 571	/* raider archer */
effect_amount SET_ATTRIBUTE RAIDER_ARCHER ATTR_NAME_ID 13356
#const RAIDER_SWORDSMAN 573	/* raider swordsman */
effect_amount SET_ATTRIBUTE RAIDER_SWORDSMAN ATTR_NAME_ID 13356
#const RAIDER_CAVALRY 575	/* raider cavalry */
effect_amount SET_ATTRIBUTE RAIDER_CAVALRY ATTR_NAME_ID 13357 /* cavalry raider */
#const RAIDER_CAVALRY_ARCHER 577	/* raider cavalry archer */
effect_amount SET_ATTRIBUTE RAIDER_CAVALRY_ARCHER ATTR_NAME_ID 13357

#const BDGAL 535	/* bdgal - boarding galley */	
effect_amount SET_ATTRIBUTE BDGAL ATTR_NAME_ID 13353 /* boarding boat */
effect_amount SET_ATTRIBUTE BDGAL ATTR_HERO_STATUS 2 /* cannot be converted */
#const ABGAL 536	/* abgal - advanced boarding galley */	
effect_amount SET_ATTRIBUTE ABGAL ATTR_NAME_ID 13353 /* boarding boat */
effect_amount SET_ATTRIBUTE ABGAL ATTR_HERO_STATUS 2 /* cannot be converted */
#const MONKBOAT 1022	/* monkboat */
effect_amount SET_ATTRIBUTE MONKBOAT ATTR_NAME_ID 13353 /* boarding boat */
effect_amount SET_ATTRIBUTE MONKBOAT ATTR_HERO_STATUS 2 /* cannot be converted */
effect_amount SET_ATTRIBUTE MONKBOAT ATTR_MAX_RANGE 0

/* give hero glow and regen to the iron boar */
effect_amount SET_ATTRIBUTE IRON_BOAR ATTR_HERO_STATUS 70
effect_amount SET_ATTRIBUTE HERO_ANIMAL ATTR_HERO_STATUS 70

/* give eagle scout or camel scout occasionally - note this will only apply when the default scout is selected in objects generation */
#const STARTING_SCOUT_RESOURCE 263
start_random
	percent_chance 9	effect_amount MOD_RESOURCE STARTING_SCOUT_RESOURCE ATTR_SET 448	/* scout */
	percent_chance 10	effect_amount MOD_RESOURCE STARTING_SCOUT_RESOURCE ATTR_SET 751	/* eagle */
	percent_chance 10	effect_amount MOD_RESOURCE STARTING_SCOUT_RESOURCE ATTR_SET 1755	/* camel */
end_random

/* add neutral buildings lighthouses, towers, pyramids */
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_NAME_ID 66460	/* lighthouse */
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_ARMOR 1768
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_ARMOR 2024
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_SHOWN_MELEE_ARMOR 1000
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_SHOWN_PIERCE_ARMOR 1000
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_LINE_OF_SIGHT 16
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_ATTACK 768
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_ATTACK 2816
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_ATTACK 4096
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_ATTACK 7680
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_ATTACK 8704
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_SHOWN_ATTACK 0
effect_amount GAIA_SET_ATTRIBUTE SEA_TOWER ATTR_MAX_RANGE 0

effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_NAME_ID 13352	/* Tower */
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_ARMOR 1768
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_ARMOR 2024
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_SHOWN_MELEE_ARMOR 1000
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_SHOWN_PIERCE_ARMOR 1000
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_LINE_OF_SIGHT 16
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_ATTACK 768
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_ATTACK 2816
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_ATTACK 4096
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_ATTACK 7680
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_ATTACK 8704
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_SHOWN_ATTACK 0
effect_amount GAIA_SET_ATTRIBUTE DLC_FORTIFIED_TOWER ATTR_MAX_RANGE 0

effect_amount GAIA_SET_ATTRIBUTE PYRAMID ATTR_ARMOR 1768
effect_amount GAIA_SET_ATTRIBUTE PYRAMID ATTR_ARMOR 2024
effect_amount GAIA_SET_ATTRIBUTE PYRAMID ATTR_SHOWN_MELEE_ARMOR 1000
effect_amount GAIA_SET_ATTRIBUTE PYRAMID ATTR_SHOWN_PIERCE_ARMOR 1000
effect_amount GAIA_SET_ATTRIBUTE PYRAMID ATTR_LINE_OF_SIGHT 16

/* neutral gaia docks and markets */
if BATTLE_ROYALE
else
	effect_amount GAIA_SET_ATTRIBUTE DOCK ATTR_NAME_ID 5319	/* port */
	effect_amount GAIA_SET_ATTRIBUTE DOCK ATTR_ARMOR 1768
	effect_amount GAIA_SET_ATTRIBUTE DOCK ATTR_ARMOR 2024
	effect_amount GAIA_SET_ATTRIBUTE DOCK ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount GAIA_SET_ATTRIBUTE DOCK ATTR_SHOWN_PIERCE_ARMOR 1000

	effect_amount GAIA_SET_ATTRIBUTE DOCK_F ATTR_NAME_ID 5319	/* port */
	effect_amount GAIA_SET_ATTRIBUTE DOCK_F ATTR_ARMOR 1768
	effect_amount GAIA_SET_ATTRIBUTE DOCK_F ATTR_ARMOR 2024
	effect_amount GAIA_SET_ATTRIBUTE DOCK_F ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount GAIA_SET_ATTRIBUTE DOCK_F ATTR_SHOWN_PIERCE_ARMOR 1000

	effect_amount GAIA_SET_ATTRIBUTE DOCK_C ATTR_NAME_ID 5319	/* port */
	effect_amount GAIA_SET_ATTRIBUTE DOCK_C ATTR_ARMOR 1768
	effect_amount GAIA_SET_ATTRIBUTE DOCK_C ATTR_ARMOR 2024
	effect_amount GAIA_SET_ATTRIBUTE DOCK_C ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount GAIA_SET_ATTRIBUTE DOCK_C ATTR_SHOWN_PIERCE_ARMOR 1000

	effect_amount GAIA_SET_ATTRIBUTE DOCK_I ATTR_NAME_ID 5319	/* port */
	effect_amount GAIA_SET_ATTRIBUTE DOCK_I ATTR_ARMOR 1768
	effect_amount GAIA_SET_ATTRIBUTE DOCK_I ATTR_ARMOR 2024
	effect_amount GAIA_SET_ATTRIBUTE DOCK_I ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount GAIA_SET_ATTRIBUTE DOCK_I ATTR_SHOWN_PIERCE_ARMOR 1000
	
	effect_amount GAIA_SET_ATTRIBUTE MARKET ATTR_ARMOR 1768
	effect_amount GAIA_SET_ATTRIBUTE MARKET ATTR_ARMOR 2024
	effect_amount GAIA_SET_ATTRIBUTE MARKET ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount GAIA_SET_ATTRIBUTE MARKET ATTR_SHOWN_PIERCE_ARMOR 1000

	effect_amount GAIA_SET_ATTRIBUTE MARKET_C ATTR_ARMOR 1768
	effect_amount GAIA_SET_ATTRIBUTE MARKET_C ATTR_ARMOR 2024
	effect_amount GAIA_SET_ATTRIBUTE MARKET_C ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount GAIA_SET_ATTRIBUTE MARKET_C ATTR_SHOWN_PIERCE_ARMOR 1000

	effect_amount GAIA_SET_ATTRIBUTE MARKET_I ATTR_ARMOR 1768
	effect_amount GAIA_SET_ATTRIBUTE MARKET_I ATTR_ARMOR 2024
	effect_amount GAIA_SET_ATTRIBUTE MARKET_I ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount GAIA_SET_ATTRIBUTE MARKET_I ATTR_SHOWN_PIERCE_ARMOR 1000
endif

/* resource trickle and other things for battle royale */
if BATTLE_ROYALE
	#const SPIES 408
	#const FLEMISH_REVOLUTION 755
	#const FIRST_CRUSADE 756
	#const DONJON_ENABLER 775
	#const TRADE_COG_ENABLER 180
	#const FISH_TRAP_ENABLER 357
	effect_amount DISABLE_TECH SPIES ATTR_DISABLE 408
	effect_amount DISABLE_TECH FLEMISH_REVOLUTION ATTR_DISABLE 755
	effect_amount DISABLE_TECH FIRST_CRUSADE ATTR_DISABLE 756
	effect_amount DISABLE_TECH DONJON_ENABLER ATTR_DISABLE 775
	effect_amount DISABLE_TECH TRADE_COG_ENABLER ATTR_DISABLE 180
	effect_amount DISABLE_TECH FISH_TRAP_ENABLER ATTR_DISABLE 357
	effect_amount ENABLE_OBJECT FISHING_SHIP ATTR_DISABLE 0

	/* DE official uses "add 15" of each instead of setting to a value */
	effect_amount MOD_RESOURCE AMOUNT_FOOD_GENERATION ATTR_SET rnd(30,40)
	effect_amount MOD_RESOURCE AMOUNT_WOOD_GENERATION ATTR_SET rnd(30,40)
	effect_amount MOD_RESOURCE AMOUNT_GOLD_GENERATION ATTR_SET rnd(30,40)
endif

/* capture the relic changes */
#const MONK_WITH_RELIC 286
#const WARRIOR_PRIEST 1811	
if CAPTURE_THE_RELIC
	effect_amount SET_ATTRIBUTE WARRIOR_PRIEST ATTR_TRAIN_LOCATION 0
	effect_percent SET_ATTRIBUTE MONK_WITH_RELIC ATTR_MOVE_SPEED 25
	effect_amount SET_ATTRIBUTE MONASTERY ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount SET_ATTRIBUTE MONASTERY ATTR_SHOWN_PIERCE_ARMOR 1000
	effect_amount SET_ATTRIBUTE MONASTERY_F ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount SET_ATTRIBUTE MONASTERY_F ATTR_SHOWN_PIERCE_ARMOR 1000
	effect_amount SET_ATTRIBUTE MONASTERY_C ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount SET_ATTRIBUTE MONASTERY_C ATTR_SHOWN_PIERCE_ARMOR 1000
	effect_amount SET_ATTRIBUTE MONASTERY_I ATTR_SHOWN_MELEE_ARMOR 1000
	effect_amount SET_ATTRIBUTE MONASTERY_I ATTR_SHOWN_PIERCE_ARMOR 1000
endif

if REGICIDE_ONLY_KING
/* Standard resources in regicide mode */
if REGICIDE
	if RANDOM_MAP
	else
		if RANDOM_RESOURCES
		elseif INFINITE_RESOURCES
		elseif DEATH_MATCH
		elseif HIGH_RESOURCES
			effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD 0
			effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD 0
			effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD 700
			effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD 500
		elseif MEDIUM_RESOURCES
			effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD -250
			effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD -250
			effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD 300
			effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD 175
		else
			effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD -300
			effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD -300
			effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD 100
			effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD 50
		endif
	endif
endif

/* King costs 0 pop space. */
effect_amount SET_ATTRIBUTE KING ATTR_POPULATION 0
endif

/* temporary map revealer */
#const TEMP_MAP_REVEALER 0
effect_amount SET_ATTRIBUTE TEMP_MAP_REVEALER ATTR_HITPOINTS ATTR_SET 0

/* =================================================================================================== */
<LAND_GENERATION> 
/* this is the most critical part of the whole script - it is where the structure of the lands is decided */

if LAND_BASED_MAP		base_terrain LAND_A
elseif FOREST_BASED_MAP	base_terrain FOREST_A
elseif WATER_BASED_MAP	base_terrain WATER_A
endif

/* create a special land in the center when there is something to fight for */
if FORCE_LAKE	/* no special center */
elseif KING_OT_HILL	#define SPECIAL_CENTER
elseif CAPTURE_THE_RELIC #define SPECIAL_CENTER
elseif CAPTURE_RELICS #define SPECIAL_CENTER
elseif BATTLE_ROYALE #define SPECIAL_CENTER
else 
	start_random
		percent_chance 1	#define CONSIDER_MORE_CENTERS
	end_random
endif

/* 0.1% chance */
if CONSIDER_MORE_CENTERS
	if ALLOW_MONUMENT
		if USE_NOMAD_SETUP
		else
			start_random
				percent_chance 5	#define USE_MONUMENT	#define SPECIAL_CENTER
			end_random
		endif
	endif
endif

/* 0.4% chance */
if CONSIDER_MORE_CENTERS
	if SPECIAL_CENTER	/* then it is already taken, otherwise we can still use it */
	elseif ALLOW_RELIC_RUSH
		start_random
			percent_chance 20	#define USE_RELIC_RUSH	#define SPECIAL_CENTER
		end_random
	endif
endif

/* 1% chance */
if CONSIDER_MORE_CENTERS
	if SPECIAL_CENTER	/* then it is already taken, otherwise we can still use it */
	elseif ALLOW_NEUTRAL_MARKET
		start_random
			percent_chance 50	#define USE_NEUTRAL_MARKET	#define SPECIAL_CENTER
		end_random
	endif
endif

if SPECIAL_CENTER
	#define NO_CENTRAL_LAND
endif

/* decide how much of the total map goes towards player lands */
if LAND_BASED_MAP
	start_random 
		percent_chance 0	#define 20%_PLAYER_LANDS 
		percent_chance 1	#define 30%_PLAYER_LANDS
		percent_chance 5	#define 40%_PLAYER_LANDS
		percent_chance 10	#define 50%_PLAYER_LANDS
		percent_chance 20	#define 60%_PLAYER_LANDS
		percent_chance 20	#define 70%_PLAYER_LANDS
		percent_chance 15	#define 80%_PLAYER_LANDS
		percent_chance 15	#define 90%_PLAYER_LANDS
		percent_chance 13	#define 100%_PLAYER_LANDS
	end_random
elseif FOREST_BASED_MAP
	start_random 
		percent_chance 0	#define 30%_PLAYER_LANDS
		percent_chance 5	#define 40%_PLAYER_LANDS
		percent_chance 10	#define 50%_PLAYER_LANDS
		percent_chance 20	#define 60%_PLAYER_LANDS
		percent_chance 20	#define 70%_PLAYER_LANDS
		percent_chance 15	#define 80%_PLAYER_LANDS
		percent_chance 15	#define 90%_PLAYER_LANDS
		percent_chance 14	#define 100%_PLAYER_LANDS
	end_random
elseif WATER_BASED_MAP
	start_random 
		percent_chance 14	#define 50%_PLAYER_LANDS
		percent_chance 20	#define 60%_PLAYER_LANDS
		percent_chance 20	#define 70%_PLAYER_LANDS
		percent_chance 15	#define 80%_PLAYER_LANDS
		percent_chance 15	#define 90%_PLAYER_LANDS
		percent_chance 15	#define 100%_PLAYER_LANDS
	end_random
endif

/* decide how far player lands need to stay from the map edge */
/* possibly support non-symmetrical borders in the future */
if WATER_BASED_MAP
	if WATER_ONLY
		start_random 
			percent_chance 48	#define 5%_PLAYER_LAND_BORDERS
			percent_chance 49	#define 10%_PLAYER_LAND_BORDERS	#define BORDERS_EXIST
			percent_chance 1	#define 15%_PLAYER_LAND_BORDERS #define BORDERS_EXIST if SPECIAL_CENTER #define 10%_PLAYER_LAND_BORDERS endif
			percent_chance 1	#define 20%_PLAYER_LAND_BORDERS #define BORDERS_EXIST if SPECIAL_CENTER #define 10%_PLAYER_LAND_BORDERS endif
		end_random
	else
		start_random 
			percent_chance 39	#define NO_PLAYER_LAND_BORDERS
			percent_chance 34	#define 5%_PLAYER_LAND_BORDERS
			percent_chance 24	#define 10%_PLAYER_LAND_BORDERS	#define BORDERS_EXIST
			percent_chance 1	#define 15%_PLAYER_LAND_BORDERS #define BORDERS_EXIST if SPECIAL_CENTER #define 10%_PLAYER_LAND_BORDERS endif
			percent_chance 1	#define 20%_PLAYER_LAND_BORDERS #define BORDERS_EXIST if SPECIAL_CENTER #define 10%_PLAYER_LAND_BORDERS endif
		end_random	
	endif
else
	if WATER_ONLY
		start_random 
			percent_chance 49	#define 5%_PLAYER_LAND_BORDERS
			percent_chance 49	#define 10%_PLAYER_LAND_BORDERS	#define BORDERS_EXIST
			percent_chance 1	#define 15%_PLAYER_LAND_BORDERS #define BORDERS_EXIST if SPECIAL_CENTER #define 10%_PLAYER_LAND_BORDERS endif
		end_random
	else
		start_random 
			percent_chance 39	#define NO_PLAYER_LAND_BORDERS
			percent_chance 34	#define 5%_PLAYER_LAND_BORDERS
			percent_chance 24	#define 10%_PLAYER_LAND_BORDERS	#define BORDERS_EXIST
			percent_chance 1	#define 15%_PLAYER_LAND_BORDERS #define BORDERS_EXIST if SPECIAL_CENTER #define 10%_PLAYER_LAND_BORDERS endif
			percent_chance 1	#define 20%_PLAYER_LAND_BORDERS #define BORDERS_EXIST if SPECIAL_CENTER #define 10%_PLAYER_LAND_BORDERS endif
		end_random
	endif
endif

/* decide If we want to use the new circle radius placement option */
if USE_TEAM_GROUPING	#define USE_CIRCLE_RADIUS
elseif SPECIAL_CENTER	#define USE_CIRCLE_RADIUS
elseif BATTLE_ROYALE	#define USE_CIRCLE_RADIUS
elseif USE_FULL_RANDOM_PLACEMENT	/* don't use a circle */
else
	start_random
		percent_chance 69	#define USE_CIRCLE_RADIUS
		percent_chance 30	#define DONT_USE_CIRCLE_RADIUS
	end_random
endif

if USE_CIRCLE_RADIUS
	if NO_PLAYER_LAND_BORDERS
		start_random
			percent_chance 79 #define CIRCLE_RADIUS_40%
			percent_chance 10 #define CIRCLE_RADIUS_35%
			percent_chance 5 #define CIRCLE_RADIUS_30%
			percent_chance 4 #define CIRCLE_RADIUS_25%
			percent_chance 1 #define CIRCLE_RADIUS_20%
		end_random
	elseif 5%_PLAYER_LAND_BORDERS
		start_random
			percent_chance 84 #define CIRCLE_RADIUS_35%
			percent_chance 10 #define CIRCLE_RADIUS_30%
			percent_chance 4 #define CIRCLE_RADIUS_25%
			percent_chance 1 #define CIRCLE_RADIUS_20%
		end_random
	elseif 10%_PLAYER_LAND_BORDERS
		start_random
			percent_chance 94 #define CIRCLE_RADIUS_30%
			percent_chance 4 #define CIRCLE_RADIUS_25%
			percent_chance 1 #define CIRCLE_RADIUS_20%
		end_random
	elseif 15%_PLAYER_LAND_BORDERS
		start_random
			percent_chance 49 #define CIRCLE_RADIUS_25%
			percent_chance 50 #define CIRCLE_RADIUS_20%
		end_random
	elseif 20%_PLAYER_LAND_BORDERS
		#define CIRCLE_RADIUS_20%
	endif
endif

if WATER_BASED_MAP
	if NO_PLAYER_LAND_BORDERS
	else	#define SHRINK_CENTER
	endif
endif

/* decide If we want a central land */
if FORCE_LAKE
	start_random
		percent_chance 49	#define MEDIUM_CENTRAL_LAND
		percent_chance 50	#define LARGE_CENTRAL_LAND
	end_random
elseif CIRCLE_RADIUS_40%
	if SHRINK_CENTER
		start_random
			percent_chance 39	#define NO_CENTRAL_LAND
			percent_chance 30	#define SMALL_CENTRAL_LAND
			percent_chance 30	#define MEDIUM_CENTRAL_LAND
		end_random
	else
		start_random
			percent_chance 39	#define NO_CENTRAL_LAND
			percent_chance 20	#define SMALL_CENTRAL_LAND
			percent_chance 20	#define MEDIUM_CENTRAL_LAND
			percent_chance 20	#define LARGE_CENTRAL_LAND
		end_random
	endif
elseif CIRCLE_RADIUS_35%
	start_random
		percent_chance 39	#define NO_CENTRAL_LAND
		percent_chance 30	#define SMALL_CENTRAL_LAND
		percent_chance 30	#define MEDIUM_CENTRAL_LAND
	end_random
elseif CIRCLE_RADIUS_30%
	start_random
		percent_chance 39	#define NO_CENTRAL_LAND
		percent_chance 60	if TINY_OR_SMALLER #define NO_CENTRAL_LAND else #define SMALL_CENTRAL_LAND endif
	end_random
elseif CIRCLE_RADIUS_25%
	start_random
		percent_chance 49	#define NO_CENTRAL_LAND
		percent_chance 50	if TINY_OR_SMALLER #define NO_CENTRAL_LAND else #define SMALL_CENTRAL_LAND endif
	end_random
elseif CIRCLE_RADIUS_20%	#define NO_CENTRAL_LAND
else	#define NO_CENTRAL_LAND	/* fallback */
endif

/* decide If we want lands in the four corners */
if LARGE_CENTRAL_LAND	#define NO_CORNER_LANDS
elseif CIRCLE_RADIUS_40%	#define NO_CORNER_LANDS
elseif MEDIUM_CENTRAL_LAND
	start_random
		percent_chance 10	#define CORNER_LANDS
		percent_chance 90	#define NO_CORNER_LANDS
	end_random
elseif SMALL_CENTRAL_LAND
	start_random
		percent_chance 20	#define CORNER_LANDS
		percent_chance 80	#define NO_CORNER_LANDS
	end_random
else /* If no central land */
	start_random
		percent_chance 30	#define CORNER_LANDS
		percent_chance 70	#define NO_CORNER_LANDS
	end_random
endif

/* decide If we want lands along the sides */
if LARGE_CENTRAL_LAND	#define NO_SIDE_LANDS
elseif NO_PLAYER_LAND_BORDERS	#define NO_SIDE_LANDS
elseif CIRCLE_RADIUS_40%	#define NO_SIDE_LANDS
elseif 5%_PLAYER_LAND_BORDERS	#define NO_SIDE_LANDS
else
	start_random
		percent_chance 90	#define SIDE_LANDS
		percent_chance 9	#define NO_SIDE_LANDS
	end_random
endif

if USE_TEAM_GROUPING	#define NO_BETWEEN_LANDS
elseif 36x36	#define NO_BETWEEN_LANDS
elseif USE_FULL_RANDOM_PLACEMENT	#define NO_BETWEEN_LANDS
else
	if 2_PLAYER_GAME
		start_random
			percent_chance 49 #define NO_BETWEEN_LANDS
			percent_chance 25 #define BETWEEN_LANDS_x8
			percent_chance 25 #define BETWEEN_LANDS_x1
		end_random
	else
		start_random
			percent_chance 79 #define NO_BETWEEN_LANDS
			percent_chance 20 #define BETWEEN_LANDS_x8
		end_random
	endif
endif
if BETWEEN_LANDS_x8
	if ALLOW_DOUBLE_PLAYER_LANDS
		start_random
			percent_chance 25	#define USE_DOUBLE_PLAYER_LANDS
		end_random
	endif
endif


/* prevent base elevation If we have a water map - otherwise it can be very hard to place docks */
if WATER_BASED_MAP	/* don't allow */
else 	#define ALLOW_BASE_ELEVATION
endif


/* =================================================================================================== */
/* could support multi-land starts in the future */
/* actual create_player_lands command here */ 
/* maybe put player lands after neutral lands */

create_player_lands {
	terrain_type LAND_A
	
	if 20%_PLAYER_LANDS			land_percent rnd(15,25)
	elseif 30%_PLAYER_LANDS		land_percent rnd(25,35)
	elseif 40%_PLAYER_LANDS		land_percent rnd(35,45)
	elseif 50%_PLAYER_LANDS		land_percent rnd(45,55)
	elseif 60%_PLAYER_LANDS		land_percent rnd(55,65)
	elseif 70%_PLAYER_LANDS		land_percent rnd(65,75)
	elseif 80%_PLAYER_LANDS		land_percent rnd(75,85)
	elseif 90%_PLAYER_LANDS		land_percent rnd(85,95)
	elseif 100%_PLAYER_LANDS 	land_percent rnd(95,105)
	endif
	
	if USE_FULL_RANDOM_PLACEMENT	/* need to ensure some spacing between players */
		min_placement_distance 22
	endif
	
	if MINI_OR_SMALLER	base_size 8
	elseif USE_CIRCLE_RADIUS	base_size 12
	elseif CIRCLE_RADIUS_40%	base_size 20
	elseif CIRCLE_RADIUS_35%	base_size 16
	else	base_size 12
	endif
	
	if ALLOW_BASE_ELEVATION
		start_random
			percent_chance 59	base_elevation 0	#define PLAYERS_ELEVATION_0
			percent_chance 20	base_elevation 1	#define PLAYERS_ELEVATION_1
			percent_chance 10	base_elevation 2	#define PLAYERS_ELEVATION_2
			percent_chance 5	base_elevation 3	#define PLAYERS_ELEVATION_3
			percent_chance 2	base_elevation 4	#define PLAYERS_ELEVATION_4
			percent_chance 2	base_elevation 5	#define PLAYERS_ELEVATION_5
			percent_chance 1	base_elevation 6	#define PLAYERS_ELEVATION_6
			percent_chance 1	base_elevation rnd(7,16)	#define PLAYERS_ELEVATION_7
		end_random
	else	#define PLAYERS_ELEVATION_0
	endif
	
	if NO_PLAYER_LAND_BORDERS
	elseif 5%_PLAYER_LAND_BORDERS
		left_border 5
		right_border 5
		top_border 5
		bottom_border 5
	elseif 10%_PLAYER_LAND_BORDERS
		left_border 10
		right_border 10
		top_border 10
		bottom_border 10
	elseif 15%_PLAYER_LAND_BORDERS
		left_border 15
		right_border 15
		top_border 15
		bottom_border 15
	elseif 20%_PLAYER_LAND_BORDERS
		left_border 20
		right_border 20
		top_border 20
		bottom_border 20
		if FORCE_LAKE
		else	#define NO_CENTRAL_LAND
		endif
	endif
	
	if USE_CIRCLE_RADIUS
		if CIRCLE_RADIUS_40%
			if CORNER_LANDS circle_radius 35 1
			elseif SIDE_LANDS circle_radius 33 1
			else circle_radius rnd(38,42) rnd(0,10)
			endif
		elseif CIRCLE_RADIUS_35%
			if CORNER_LANDS circle_radius rnd(33,35) 1
			elseif SIDE_LANDS circle_radius 33 1
			else circle_radius rnd(33,37) rnd(0,5) 
			endif
		elseif CIRCLE_RADIUS_30%
			if CORNER_LANDS circle_radius rnd(28,32) 1
			elseif SIDE_LANDS circle_radius 30 1
			else circle_radius rnd(28,32) rnd(0,5) 
			endif
		elseif CIRCLE_RADIUS_25%
			circle_radius rnd(23,27) rnd(0,5) 
		elseif CIRCLE_RADIUS_20%
			circle_radius rnd(15,22) rnd(0,5) 
		endif
	endif

	if SIDE_LANDS	border_fuzziness rnd(60,100) /* ie. no fuzziness */
	else
		start_random
			percent_chance 19	border_fuzziness rnd(60,100) /* ie. no fuzziness */
			percent_chance 20	border_fuzziness rnd(20,60)
			percent_chance 20	border_fuzziness rnd(20,10)
			percent_chance 20	border_fuzziness rnd(10,5)
			percent_chance 20	border_fuzziness rnd(5,2) /* ie. very noticeable fuzziness */
		end_random
	endif
	
	start_random
		percent_chance 14	clumping_factor rnd(2,3) /* snaky lands */
		percent_chance 20	clumping_factor rnd(4,7)
		percent_chance 20	clumping_factor rnd(8,15)
		percent_chance 15	clumping_factor rnd(16,25)
		percent_chance 15	clumping_factor rnd(26,40) /* round lands */
		percent_chance 15	clumping_factor rnd(41,64) 
	end_random
	
	if USE_TEAM_GROUPING
		set_zone_by_team	#define TEAM_ZONES
	elseif USE_MICHI_STYLE
		start_random
			percent_chance 49	set_zone_by_team	#define TEAM_ZONES
			percent_chance 50	#define INDIVIDUAL_ZONES
		end_random
	elseif USE_ISLANDS_STYLE
		start_random
			percent_chance 49	set_zone_by_team	#define TEAM_ZONES
			percent_chance 50	#define INDIVIDUAL_ZONES
		end_random
	elseif BALANCED_TEAMS
		start_random
			percent_chance 33	set_zone_by_team	#define TEAM_ZONES
			percent_chance 33	zone 1	#define ONE_ZONE
			percent_chance 33	#define INDIVIDUAL_ZONES
		end_random
	elseif ALLOW_RANDOM_ZONES
		start_random
			percent_chance 24	set_zone_randomly	#define RANDOM_ZONES
			percent_chance 25	set_zone_by_team	#define TEAM_ZONES
			percent_chance 25	zone 1	#define ONE_ZONE
			percent_chance 25	#define INDIVIDUAL_ZONES
		end_random
	else
		start_random
			percent_chance 33	set_zone_by_team	#define TEAM_ZONES
			percent_chance 33	zone 1	#define ONE_ZONE
			percent_chance 33	#define INDIVIDUAL_ZONES
		end_random
	endif
	
	if 36x36	other_zone_avoidance_distance 3
	elseif TINY_OR_SMALLER	/* prevent huge distances */
		start_random
			percent_chance 19	other_zone_avoidance_distance rnd(2,3)
			percent_chance 20	other_zone_avoidance_distance rnd(4,5)
			percent_chance 20	other_zone_avoidance_distance rnd(6,7)
			percent_chance 20	other_zone_avoidance_distance rnd(8,9)
			percent_chance 20	other_zone_avoidance_distance 10
		end_random
	elseif USE_ISLANDS_STYLE   /* moderate avoidance distances needed */
		start_random
			percent_chance 29	other_zone_avoidance_distance rnd(5,6)
			percent_chance 30	other_zone_avoidance_distance rnd(7,8)
			percent_chance 30	other_zone_avoidance_distance rnd(9,10)
			percent_chance 10	other_zone_avoidance_distance rnd(11,12)
		end_random
	elseif USE_MICHI_STYLE   /* smaller avoidance distances are better here */
		start_random
			percent_chance 4	other_zone_avoidance_distance rnd(1,2)
			percent_chance 40	other_zone_avoidance_distance rnd(3,4)
			percent_chance 40	other_zone_avoidance_distance rnd(5,8)
			percent_chance 15	other_zone_avoidance_distance rnd(9,12)
		end_random
	else  /* the whole span of avoidance distances */
		start_random
			percent_chance 4	other_zone_avoidance_distance rnd(2,3)
			percent_chance 15	other_zone_avoidance_distance rnd(3,4)
			percent_chance 17	other_zone_avoidance_distance rnd(5,6)
			percent_chance 25	other_zone_avoidance_distance rnd(7,8)
			percent_chance 20	other_zone_avoidance_distance rnd(9,10)
			percent_chance 10	other_zone_avoidance_distance rnd(11,12)
			percent_chance 5	other_zone_avoidance_distance rnd(13,14)
			percent_chance 2	other_zone_avoidance_distance rnd(15,17)
			percent_chance 1	other_zone_avoidance_distance rnd(18,20)
		end_random
	endif
}		

/* =================================================================================================== */
/* create lands between the players */

if NO_BETWEEN_LANDS
else
	if USE_DOUBLE_PLAYER_LANDS	#define BETWEEN_IS_LAND
	elseif LAND_BASED_MAP
		if NO_LAKES
			start_random
				percent_chance 49	#define BETWEEN_IS_FOREST
				percent_chance 50	#define BETWEEN_IS_LAND
			end_random
		elseif FORCE_LAKE
			start_random
				percent_chance 69	#define BETWEEN_IS_WATER
				percent_chance 30	#define BETWEEN_IS_SHALLOWS
			end_random
		else
			start_random
				percent_chance 29	#define BETWEEN_IS_WATER
				percent_chance 40	#define BETWEEN_IS_FOREST
				percent_chance 10	#define BETWEEN_IS_SHALLOWS
				percent_chance 20	#define BETWEEN_IS_LAND
			end_random
		endif
	elseif FOREST_BASED_MAP
		if NO_LAKES	#define BETWEEN_IS_LAND
		elseif FORCE_LAKE
			start_random
				percent_chance 69	#define BETWEEN_IS_WATER
				percent_chance 30	#define BETWEEN_IS_SHALLOWS
			end_random
		else
			start_random
				percent_chance 19	#define BETWEEN_IS_WATER
				percent_chance 10	#define BETWEEN_IS_FOREST
				percent_chance 10	#define BETWEEN_IS_SHALLOWS
				percent_chance 100	#define BETWEEN_IS_LAND
			end_random
		endif
	elseif WATER_BASED_MAP
		start_random
			percent_chance 9	#define BETWEEN_IS_WATER
			percent_chance 5	#define BETWEEN_IS_SHALLOWS
			percent_chance 10	#define BETWEEN_IS_FOREST
			percent_chance 75	#define BETWEEN_IS_LAND
		end_random
	endif
endif
if BETWEEN_IS_LAND
	start_random
		percent_chance 50	#define BETWEEN_IS_LAND_A
		percent_chance 50	#define BETWEEN_IS_LAND_X
	end_random
endif


if NO_BETWEEN_LANDS
else	#define BETWEEN_LANDS_EXIST
if BETWEEN_LANDS_x1	create_land
elseif BETWEEN_LANDS_x8	create_player_lands
endif
{
	if BETWEEN_LANDS_x1 assign_to_player rnd(1,2) endif
	if USE_DOUBLE_PLAYER_LANDS else land_id 1 endif
	if BETWEEN_IS_LAND_A	terrain_type LAND_A
	elseif BETWEEN_IS_LAND_X	terrain_type LAND_X
	elseif BETWEEN_IS_FOREST	terrain_type FOREST_A
	elseif BETWEEN_IS_SHALLOWS	terrain_type SHALLOWS_A	if ALLOW_WATER_ELEVATION #define ALLOW_ELEVATION_BETWEEN endif
	elseif BETWEEN_IS_WATER	terrain_type WATER_A	if ALLOW_WATER_ELEVATION #define ALLOW_ELEVATION_BETWEEN endif
	endif
	
	if ALLOW_BASE_ELEVATION
		if ALLOW_ELEVATION_BETWEEN
			start_random
				percent_chance 59	base_elevation 0
				percent_chance 20	base_elevation 1
				percent_chance 10	base_elevation 2
				percent_chance 5	base_elevation 3
				percent_chance 2	base_elevation 4
				percent_chance 2	base_elevation 5
				percent_chance 1	base_elevation 6
				percent_chance 1	base_elevation rnd(7,16)
			end_random
		endif
	endif
	
	if 20%_PLAYER_LANDS			land_percent rnd(1,5)
	elseif 30%_PLAYER_LANDS		land_percent rnd(3,7)
	elseif 40%_PLAYER_LANDS		land_percent rnd(5,9)
	elseif 50%_PLAYER_LANDS		land_percent rnd(7,11)
	elseif 60%_PLAYER_LANDS		land_percent rnd(9,13)
	elseif TRUE	land_percent rnd(10,15)
	else	land_percent rnd(10,25)
	endif
	
	if USE_FULL_RANDOM_PLACEMENT min_placement_distance 12 endif
	
	if USE_DOUBLE_PLAYER_LANDS	base_size 8
	elseif MINI_OR_SMALLER	base_size 1
	elseif CIRCLE_RADIUS_20%	base_size 1
	elseif CIRCLE_RADIUS_25%	base_size 1
	elseif CIRCLE_RADIUS_30%	base_size 2
	elseif CIRCLE_RADIUS_35%	base_size 3
	elseif CIRCLE_RADIUS_40%	base_size 4
	else	base_size 4
	endif
	
	start_random
	percent_chance 33
		left_border 5
		right_border 5
		top_border 5
		bottom_border 5
	percent_chance 33
		left_border 10
		right_border 10
		top_border 10
		bottom_border 10
	end_random
	
	start_random
		percent_chance 19	border_fuzziness rnd(60,100) /* ie. no fuzziness */
		percent_chance 20	border_fuzziness rnd(20,60)
		percent_chance 20	border_fuzziness rnd(20,10)
		percent_chance 20	border_fuzziness rnd(10,5)
		percent_chance 20	border_fuzziness rnd(5,2) /* ie. very noticeable fuzziness */
	end_random
	
	if TRUE
		clumping_factor 40
	else
		start_random
			percent_chance 14	clumping_factor rnd(2,3) /* snaky lands */
			percent_chance 20	clumping_factor rnd(4,7)
			percent_chance 20	clumping_factor rnd(8,15)
			percent_chance 15	clumping_factor rnd(16,25)
			percent_chance 15	clumping_factor rnd(26,40) /* round lands */
			percent_chance 15	clumping_factor rnd(41,64) 
		end_random
	endif

	if BETWEEN_LANDS_x1
	start_random
		percent_chance 70
			if ONE_ZONE	zone 1
			else zone 5	#define BETWEEN_ZONE_5
			endif
		percent_chance 30
			zone 5	#define BETWEEN_ZONE_5
	end_random		
	else
	start_random
		percent_chance 50
			if TEAM_ZONES	set_zone_by_team
			elseif INDIVIDUAL_ZONES	/* shared with players */
			elseif ONE_ZONE	zone 1
			elseif RANDOM_ZONES	set_zone_randomly
			endif
		percent_chance 50
			zone 5		#define BETWEEN_ZONE_5
	end_random
	endif
		
	if TINY_OR_SMALLER	/* prevent huge distances */
		other_zone_avoidance_distance rnd(2,5)
	elseif USE_ISLANDS_STYLE   /* moderate avoidance distances needed */
		other_zone_avoidance_distance rnd(5,10)
	elseif USE_MICHI_STYLE   /* smaller avoidance distances are better here */
		other_zone_avoidance_distance rnd(1,5)
	else  /* the whole span of avoidance distances */
		other_zone_avoidance_distance rnd(2,10)
	endif
}
endif
			
/* =================================================================================================== */
/* create the central land here */


start_random
	percent_chance 19	#define CENTER_FUZZ_100 /* ie. no fuzziness */
	percent_chance 20	#define CENTER_FUZZ_40 
	percent_chance 20	#define CENTER_FUZZ_15 
	percent_chance 20	#define CENTER_FUZZ_5 
	percent_chance 20	#define CENTER_FUZZ_2 /* ie. very noticeable fuzziness */
end_random

start_random
	percent_chance 14	#define CENTER_CLUMP_2 /* snaky lands */
	percent_chance 20	#define CENTER_CLUMP_4
	percent_chance 20	#define CENTER_CLUMP_8
	percent_chance 15	#define CENTER_CLUMP_16
	percent_chance 15	#define CENTER_CLUMP_32 /* round lands */
	percent_chance 15	#define CENTER_CLUMP_64 
end_random

/* double center orientation */
start_random
	percent_chance 49	#define CENTER_W-E
	percent_chance 50	#define CENTER_N-S
end_random

start_random
	percent_chance 19	#define CENTER_SPLIT_WIDTH_3
	percent_chance 50	#define CENTER_SPLIT_WIDTH_5
	percent_chance 30	#define CENTER_SPLIT_WIDTH_8
end_random

start_random
	percent_chance 49	#define DOUBLE_CENTER_CONNECTED
	percent_chance 50	#define DOUBLE_CENTER_DISCONNECTED
end_random

if NO_CENTRAL_LAND
elseif CIRCLE_RADIUS_20%	#define SINGLE_CENTER
elseif CIRCLE_RADIUS_25%	#define SINGLE_CENTER
elseif CIRCLE_RADIUS_30%	#define SINGLE_CENTER
elseif DONT_USE_CIRCLE_RADIUS	#define SINGLE_CENTER
else
	start_random
		percent_chance 54	#define DOUBLE_CENTER
		percent_chance 45	#define SINGLE_CENTER
	end_random
endif

if DOUBLE_CENTER
	start_random
		percent_chance 33	#define QUAD_CENTER
	end_random
endif

if NO_CENTRAL_LAND
else	#define CENTER_LAND_EXISTS
	if LAND_BASED_MAP
		if NO_LAKES
			start_random
				percent_chance 39	#define CENTER_IS_FOREST
				percent_chance 60	#define CENTER_IS_LAND
			end_random
		elseif FORCE_LAKE
			start_random
				percent_chance 59	#define CENTER_IS_WATER
				percent_chance 40	#define CENTER_IS_SHALLOWS
			end_random
		else
			start_random
				percent_chance 39	#define CENTER_IS_WATER
				percent_chance 30	#define CENTER_IS_FOREST
				percent_chance 10	#define CENTER_IS_SHALLOWS
				percent_chance 20	#define CENTER_IS_LAND
			end_random
		endif
	elseif FOREST_BASED_MAP
		if NO_LAKES	#define CENTER_IS_LAND
		elseif FORCE_LAKE
			start_random
				percent_chance 59	#define CENTER_IS_WATER
				percent_chance 40	#define CENTER_IS_SHALLOWS
			end_random
		else
			start_random
				percent_chance 9	#define CENTER_IS_WATER
				percent_chance 1	#define CENTER_IS_FOREST
				percent_chance 10	#define CENTER_IS_SHALLOWS
				percent_chance 79	#define CENTER_IS_LAND
			end_random
		endif
	elseif WATER_BASED_MAP
		start_random
			percent_chance 1	#define CENTER_IS_WATER
			percent_chance 5	#define CENTER_IS_SHALLOWS
			percent_chance 3	#define CENTER_IS_FOREST
			percent_chance 90	#define CENTER_IS_LAND
		end_random
	endif
endif

if CENTER_IS_LAND
	start_random
		percent_chance 49	#define CENTER_IS_LAND_A
		percent_chance 50	#define CENTER_IS_LAND_X
	end_random
endif
	
if NO_CENTRAL_LAND
elseif SINGLE_CENTER
create_land {	
	if CENTER_IS_WATER
		terrain_type WATER_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_SHALLOWS
		terrain_type SHALLOWS_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_FOREST
		terrain_type FOREST_A
		#define ALLOW_ELEVATED_CENTER
	elseif CENTER_IS_LAND
		#define ALLOW_ELEVATED_CENTER
		if CENTER_IS_LAND_A	terrain_type LAND_A
		elseif CENTER_IS_LAND_X	terrain_type LAND_X
		endif
	endif
	
	if ALLOW_BASE_ELEVATION
		if ALLOW_ELEVATED_CENTER
			start_random
				percent_chance 59	base_elevation 0	#define CENTER_ELEVATION_0
				percent_chance 20	base_elevation 1	#define CENTER_ELEVATION_1
				percent_chance 10	base_elevation 2	#define CENTER_ELEVATION_2
				percent_chance 5	base_elevation 3	#define CENTER_ELEVATION_3
				percent_chance 2	base_elevation 4	#define CENTER_ELEVATION_4
				percent_chance 2	base_elevation 5	#define CENTER_ELEVATION_5
				percent_chance 1	base_elevation 6	#define CENTER_ELEVATION_6
				percent_chance 1	base_elevation rnd(7,16)	#define CENTER_ELEVATION_7
			end_random
		else	#define CENTER_ELEVATION_0
		endif
	else #define CENTER_ELEVATION_0
	endif
	
	if SMALL_CENTRAL_LAND
		land_percent rnd(5,20)
		left_border rnd(29,31)
		right_border rnd(29,31)
		top_border rnd(29,31)
		bottom_border rnd(29,31)
		if 36x36 base_size 2 else base_size 3 endif
	elseif MEDIUM_CENTRAL_LAND
		land_percent rnd(20,40)
		if 36x36 base_size 2 else base_size rnd(5,7) endif
		left_border rnd(19,21)
		right_border rnd(19,21)
		top_border rnd(19,21)
		bottom_border rnd(19,21)
	elseif LARGE_CENTRAL_LAND
		land_percent rnd(40,60)
		left_border rnd(9,11)
		right_border rnd(9,11)
		top_border rnd(9,11)
		bottom_border rnd(9,11)
		if 36x36 base_size 3 elseif TINY_OR_SMALLER base_size 6 else base_size rnd(9,11) endif
	endif
	
	land_position 50 50
	
	if CENTER_FUZZ_100	border_fuzziness rnd(60,100)
	elseif CENTER_FUZZ_40	border_fuzziness rnd(20,60)
	elseif CENTER_FUZZ_15	border_fuzziness rnd(20,10)
	elseif CENTER_FUZZ_5	border_fuzziness rnd(10,5)
	elseif CENTER_FUZZ_2	border_fuzziness rnd(5,2)
	endif

	if CENTER_CLUMP_2	clumping_factor rnd(2,3)
	elseif CENTER_CLUMP_4	clumping_factor rnd(4,7)
	elseif CENTER_CLUMP_8	clumping_factor rnd(8,15)
	elseif CENTER_CLUMP_16	clumping_factor rnd(16,25)
	elseif CENTER_CLUMP_32	clumping_factor rnd(26,40)
	elseif CENTER_CLUMP_64	clumping_factor rnd(41,64)
	endif
	
	zone 2
	land_id 2
	
	if 36x36	other_zone_avoidance_distance 3
	elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 8
	elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
	endif
}
elseif DOUBLE_CENTER
create_land {
	if CENTER_IS_WATER
		terrain_type WATER_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_SHALLOWS
		terrain_type SHALLOWS_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_FOREST
		terrain_type FOREST_A
		#define ALLOW_ELEVATED_CENTER
	elseif CENTER_IS_LAND
		#define ALLOW_ELEVATED_CENTER
		if CENTER_IS_LAND_A	terrain_type LAND_A
		elseif CENTER_IS_LAND_X	terrain_type LAND_X
		endif
	endif
	
	if ALLOW_BASE_ELEVATION
		if ALLOW_ELEVATED_CENTER
			start_random
				percent_chance 59	base_elevation 0	#define CENTER_ELEVATION_0
				percent_chance 20	base_elevation 1	#define CENTER_ELEVATION_1
				percent_chance 10	base_elevation 2	#define CENTER_ELEVATION_2
				percent_chance 5	base_elevation 3	#define CENTER_ELEVATION_3
				percent_chance 2	base_elevation 4	#define CENTER_ELEVATION_4
				percent_chance 2	base_elevation 5	#define CENTER_ELEVATION_5
				percent_chance 1	base_elevation 6	#define CENTER_ELEVATION_6
				percent_chance 1	base_elevation 7	#define CENTER_ELEVATION_7
			end_random
		else	#define CENTER_ELEVATION_0
		endif
	else #define CENTER_ELEVATION_0
	endif
	
	if CENTER_W-E	land_position 45 45
	elseif CENTER_N-S land_position 55 45
	endif
	
	if DOUBLE_CENTER_CONNECTED
		if 36x36 base_size 3
		elseif 60x60 base_size 4
		elseif 80x80 base_size 5
		elseif 100x100 base_size 7
		elseif 120x120 base_size 10
		elseif 144x144 base_size 11
		elseif 168x168 base_size 12
		elseif 200x200 base_size 13
		elseif 220x220 base_size 14
		elseif 240x240 base_size 15
		elseif 252x252 base_size 16
		elseif 276x276 base_size 17
		elseif 300x300 base_size 18
		elseif 320x320 base_size 19
		elseif 360x360 base_size 21
		elseif 400x400 base_size 24
		elseif 480x480 base_size 28
		endif
	elseif DOUBLE_CENTER_DISCONNECTED	base_size 3
	endif
	
	if SMALL_CENTRAL_LAND
		land_percent rnd(3,10)
		left_border rnd(29,31)
		right_border rnd(29,31)
		top_border rnd(29,31)
		bottom_border rnd(29,31)
	elseif MEDIUM_CENTRAL_LAND
		land_percent rnd(10,20)
		left_border rnd(19,21)
		right_border rnd(19,21)
		top_border rnd(19,21)
		bottom_border rnd(19,21)
	elseif LARGE_CENTRAL_LAND
		land_percent rnd(20,30)
		left_border rnd(9,11)
		right_border rnd(9,11)
		top_border rnd(9,11)
		bottom_border rnd(9,11)
	endif
	
	if CENTER_FUZZ_100	border_fuzziness rnd(60,100)
	elseif CENTER_FUZZ_40	border_fuzziness rnd(20,60)
	elseif CENTER_FUZZ_15	border_fuzziness rnd(20,10)
	elseif CENTER_FUZZ_5	border_fuzziness rnd(10,5)
	elseif CENTER_FUZZ_2	border_fuzziness rnd(5,2)
	endif

	if CENTER_CLUMP_2	clumping_factor rnd(2,3)
	elseif CENTER_CLUMP_4	clumping_factor rnd(4,7)
	elseif CENTER_CLUMP_8	clumping_factor rnd(8,15)
	elseif CENTER_CLUMP_16	clumping_factor rnd(16,25)
	elseif CENTER_CLUMP_32	clumping_factor rnd(26,40)
	elseif CENTER_CLUMP_64	clumping_factor rnd(41,64)
	endif
	
	zone 2
	land_id 2
	
	if 36x36	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_3	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_5 other_zone_avoidance_distance 5
	elseif CENTER_SPLIT_WIDTH_8 other_zone_avoidance_distance 8
	endif
}
create_land {
	if CENTER_IS_WATER
		terrain_type WATER_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_SHALLOWS
		terrain_type SHALLOWS_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_FOREST
		terrain_type FOREST_A
		#define ALLOW_ELEVATED_CENTER
	elseif CENTER_IS_LAND
		#define ALLOW_ELEVATED_CENTER
		if CENTER_IS_LAND_A	terrain_type LAND_A
		elseif CENTER_IS_LAND_X	terrain_type LAND_X
		endif
	endif
	
	if CENTER_ELEVATION_0	base_elevation 0
	elseif CENTER_ELEVATION_1	base_elevation 1
	elseif CENTER_ELEVATION_2	base_elevation 2
	elseif CENTER_ELEVATION_3	base_elevation 3
	elseif CENTER_ELEVATION_4	base_elevation 4
	elseif CENTER_ELEVATION_5	base_elevation 5
	elseif CENTER_ELEVATION_6	base_elevation 6
	elseif CENTER_ELEVATION_7	base_elevation 7
	endif
	
	if CENTER_W-E	land_position 55 55
	elseif CENTER_N-S land_position 45 55
	endif

	if DOUBLE_CENTER_CONNECTED
		if 36x36 base_size 3
		elseif 60x60 base_size 4
		elseif 80x80 base_size 5
		elseif 100x100 base_size 7
		elseif 120x120 base_size 10
		elseif 144x144 base_size 11
		elseif 168x168 base_size 12
		elseif 200x200 base_size 13
		elseif 220x220 base_size 14
		elseif 240x240 base_size 15
		elseif 252x252 base_size 16
		elseif 276x276 base_size 17
		elseif 300x300 base_size 18
		elseif 320x320 base_size 19
		elseif 360x360 base_size 21
		elseif 400x400 base_size 24
		elseif 480x480 base_size 28
		endif
	elseif DOUBLE_CENTER_DISCONNECTED	base_size 3
	endif

	if SMALL_CENTRAL_LAND
		land_percent rnd(3,10)
		left_border rnd(29,31)
		right_border rnd(29,31)
		top_border rnd(29,31)
		bottom_border rnd(29,31)
	elseif MEDIUM_CENTRAL_LAND
		land_percent rnd(10,20)
		left_border rnd(19,21)
		right_border rnd(19,21)
		top_border rnd(19,21)
		bottom_border rnd(19,21)
	elseif LARGE_CENTRAL_LAND
		land_percent rnd(20,30)
		left_border rnd(9,11)
		right_border rnd(9,11)
		top_border rnd(9,11)
		bottom_border rnd(9,11)
	endif

	if CENTER_FUZZ_100	border_fuzziness rnd(60,100)
	elseif CENTER_FUZZ_40	border_fuzziness rnd(20,60)
	elseif CENTER_FUZZ_15	border_fuzziness rnd(20,10)
	elseif CENTER_FUZZ_5	border_fuzziness rnd(10,5)
	elseif CENTER_FUZZ_2	border_fuzziness rnd(5,2)
	endif

	if CENTER_CLUMP_2	clumping_factor rnd(2,3)
	elseif CENTER_CLUMP_4	clumping_factor rnd(4,7)
	elseif CENTER_CLUMP_8	clumping_factor rnd(8,15)
	elseif CENTER_CLUMP_16	clumping_factor rnd(16,25)
	elseif CENTER_CLUMP_32	clumping_factor rnd(26,40)
	elseif CENTER_CLUMP_64	clumping_factor rnd(41,64)
	endif
	
	zone 2222
	land_id 2
	
	if 36x36	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_3	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_5 other_zone_avoidance_distance 5
	elseif CENTER_SPLIT_WIDTH_8 other_zone_avoidance_distance 8
	endif
}
if QUAD_CENTER
create_land {
	if CENTER_IS_WATER
		terrain_type WATER_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_SHALLOWS
		terrain_type SHALLOWS_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_FOREST
		terrain_type FOREST_A
		#define ALLOW_ELEVATED_CENTER
	elseif CENTER_IS_LAND
		#define ALLOW_ELEVATED_CENTER
		if CENTER_IS_LAND_A	terrain_type LAND_A
		elseif CENTER_IS_LAND_X	terrain_type LAND_X
		endif
	endif
	
	if CENTER_ELEVATION_0	base_elevation 0
	elseif CENTER_ELEVATION_1	base_elevation 1
	elseif CENTER_ELEVATION_2	base_elevation 2
	elseif CENTER_ELEVATION_3	base_elevation 3
	elseif CENTER_ELEVATION_4	base_elevation 4
	elseif CENTER_ELEVATION_5	base_elevation 5
	elseif CENTER_ELEVATION_6	base_elevation 6
	elseif CENTER_ELEVATION_7	base_elevation 7
	endif
	
	if CENTER_W-E	land_position 45 55
	elseif CENTER_N-S land_position 45 45
	endif

	if DOUBLE_CENTER_CONNECTED
		if 36x36 base_size 3
		elseif 60x60 base_size 4
		elseif 80x80 base_size 5
		elseif 100x100 base_size 7
		elseif 120x120 base_size 10
		elseif 144x144 base_size 11
		elseif 168x168 base_size 12
		elseif 200x200 base_size 13
		elseif 220x220 base_size 14
		elseif 240x240 base_size 15
		elseif 252x252 base_size 16
		elseif 276x276 base_size 17
		elseif 300x300 base_size 18
		elseif 320x320 base_size 19
		elseif 360x360 base_size 21
		elseif 400x400 base_size 24
		elseif 480x480 base_size 28
		endif
	elseif DOUBLE_CENTER_DISCONNECTED	base_size 3
	endif

	if SMALL_CENTRAL_LAND
		land_percent rnd(3,10)
		left_border rnd(29,31)
		right_border rnd(29,31)
		top_border rnd(29,31)
		bottom_border rnd(29,31)
	elseif MEDIUM_CENTRAL_LAND
		land_percent rnd(10,20)
		left_border rnd(19,21)
		right_border rnd(19,21)
		top_border rnd(19,21)
		bottom_border rnd(19,21)
	elseif LARGE_CENTRAL_LAND
		land_percent rnd(20,30)
		left_border rnd(9,11)
		right_border rnd(9,11)
		top_border rnd(9,11)
		bottom_border rnd(9,11)
	endif

	if CENTER_FUZZ_100	border_fuzziness rnd(60,100)
	elseif CENTER_FUZZ_40	border_fuzziness rnd(20,60)
	elseif CENTER_FUZZ_15	border_fuzziness rnd(20,10)
	elseif CENTER_FUZZ_5	border_fuzziness rnd(10,5)
	elseif CENTER_FUZZ_2	border_fuzziness rnd(5,2)
	endif

	if CENTER_CLUMP_2	clumping_factor rnd(2,3)
	elseif CENTER_CLUMP_4	clumping_factor rnd(4,7)
	elseif CENTER_CLUMP_8	clumping_factor rnd(8,15)
	elseif CENTER_CLUMP_16	clumping_factor rnd(16,25)
	elseif CENTER_CLUMP_32	clumping_factor rnd(26,40)
	elseif CENTER_CLUMP_64	clumping_factor rnd(41,64)
	endif
	
	zone 2223
	land_id 2
	
	if 36x36	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_3	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_5 other_zone_avoidance_distance 5
	elseif CENTER_SPLIT_WIDTH_8 other_zone_avoidance_distance 8
	endif
}
create_land {
	if CENTER_IS_WATER
		terrain_type WATER_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_SHALLOWS
		terrain_type SHALLOWS_A
		if ALLOW_WATER_ELEVATION
			#define ALLOW_ELEVATED_CENTER
		endif
	elseif CENTER_IS_FOREST
		terrain_type FOREST_A
		#define ALLOW_ELEVATED_CENTER
	elseif CENTER_IS_LAND
		#define ALLOW_ELEVATED_CENTER
		if CENTER_IS_LAND_A	terrain_type LAND_A
		elseif CENTER_IS_LAND_X	terrain_type LAND_X
		endif
	endif
	
	if CENTER_ELEVATION_0	base_elevation 0
	elseif CENTER_ELEVATION_1	base_elevation 1
	elseif CENTER_ELEVATION_2	base_elevation 2
	elseif CENTER_ELEVATION_3	base_elevation 3
	elseif CENTER_ELEVATION_4	base_elevation 4
	elseif CENTER_ELEVATION_5	base_elevation 5
	elseif CENTER_ELEVATION_6	base_elevation 6
	elseif CENTER_ELEVATION_7	base_elevation 7
	endif
	
	if CENTER_W-E	land_position 54 45
	elseif CENTER_N-S land_position 55 55
	endif

	if DOUBLE_CENTER_CONNECTED
		if 36x36 base_size 3
		elseif 60x60 base_size 4
		elseif 80x80 base_size 5
		elseif 100x100 base_size 7
		elseif 120x120 base_size 10
		elseif 144x144 base_size 11
		elseif 168x168 base_size 12
		elseif 200x200 base_size 13
		elseif 220x220 base_size 14
		elseif 240x240 base_size 15
		elseif 252x252 base_size 16
		elseif 276x276 base_size 17
		elseif 300x300 base_size 18
		elseif 320x320 base_size 19
		elseif 360x360 base_size 21
		elseif 400x400 base_size 24
		elseif 480x480 base_size 28
		endif
	elseif DOUBLE_CENTER_DISCONNECTED	base_size 3
	endif

	if SMALL_CENTRAL_LAND
		land_percent rnd(3,10)
		left_border rnd(29,31)
		right_border rnd(29,31)
		top_border rnd(29,31)
		bottom_border rnd(29,31)
	elseif MEDIUM_CENTRAL_LAND
		land_percent rnd(10,20)
		left_border rnd(19,21)
		right_border rnd(19,21)
		top_border rnd(19,21)
		bottom_border rnd(19,21)
	elseif LARGE_CENTRAL_LAND
		land_percent rnd(20,30)
		left_border rnd(9,11)
		right_border rnd(9,11)
		top_border rnd(9,11)
		bottom_border rnd(9,11)
	endif

	if CENTER_FUZZ_100	border_fuzziness rnd(60,100)
	elseif CENTER_FUZZ_40	border_fuzziness rnd(20,60)
	elseif CENTER_FUZZ_15	border_fuzziness rnd(20,10)
	elseif CENTER_FUZZ_5	border_fuzziness rnd(10,5)
	elseif CENTER_FUZZ_2	border_fuzziness rnd(5,2)
	endif

	if CENTER_CLUMP_2	clumping_factor rnd(2,3)
	elseif CENTER_CLUMP_4	clumping_factor rnd(4,7)
	elseif CENTER_CLUMP_8	clumping_factor rnd(8,15)
	elseif CENTER_CLUMP_16	clumping_factor rnd(16,25)
	elseif CENTER_CLUMP_32	clumping_factor rnd(26,40)
	elseif CENTER_CLUMP_64	clumping_factor rnd(41,64)
	endif
	
	zone 2224
	land_id 2
	
	if 36x36	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_3	other_zone_avoidance_distance 3
	elseif CENTER_SPLIT_WIDTH_5 other_zone_avoidance_distance 5
	elseif CENTER_SPLIT_WIDTH_8 other_zone_avoidance_distance 8
	endif
}
endif
endif

/* =================================================================================================== */
/* create corner lands */

if 2_PLAYER_GAME
else
	if ALLOW_RANDOM_ZONES
		start_random
			percent_chance 29	#define REDUCE_CORNER_CONSTRAINTS
		end_random
	endif
endif

if 2_PLAYER_GAME	/* create symmetrical lands */
	start_random
		percent_chance 33	#define CORNER1	#define CORNER2
		percent_chance 33	#define CORNER3	#define CORNER4
		percent_chance 33	#define CORNER1	#define CORNER2	#define CORNER3	#define CORNER4
	end_random
elseif BALANCED_TEAMS	/* create symmetrical lands */
	start_random
		percent_chance 33	#define CORNER1	#define CORNER2
		percent_chance 33	#define CORNER3	#define CORNER4
		percent_chance 33	#define CORNER1	#define CORNER2	#define CORNER3	#define CORNER4
	end_random
elseif ALLOW_RANDOM_CORNERS
	start_random
		percent_chance 69	#define CORNER1
	end_random
	start_random
		percent_chance 69	#define CORNER2
	end_random
	start_random
		percent_chance 69	#define CORNER3
	end_random
	start_random
		percent_chance 69	#define CORNER4
	end_random
else	/* create equal corner lands */
	#define CORNER1
	#define CORNER2
	#define CORNER3
	#define CORNER4
endif

if CORNER1 if CORNER2 if CORNER3 if CORNER4 #define 4_CORNERS endif endif endif endif

if NO_CORNER_LANDS
else #define CORNER_LANDS
	if LAND_BASED_MAP
		if NO_LAKES
			start_random
				percent_chance 39	#define CORNERS_ARE_FOREST
				percent_chance 60	#define CORNERS_ARE_LAND
			end_random
		else
			start_random
				percent_chance 39	#define CORNERS_ARE_WATER
				percent_chance 30	#define CORNERS_ARE_FOREST
				percent_chance 10	#define CORNERS_ARE_SHALLOWS
				percent_chance 20	#define CORNERS_ARE_LAND
			end_random
		endif
	elseif FOREST_BASED_MAP
		if NO_LAKES	#define CORNERS_ARE_LAND
		else
			start_random
				percent_chance 9	#define CORNERS_ARE_WATER
				percent_chance 10	#define CORNERS_ARE_FOREST
				percent_chance 10	#define CORNERS_ARE_SHALLOWS
				percent_chance 80	#define CORNERS_ARE_LAND
			end_random
		endif
	elseif WATER_BASED_MAP
		start_random
			percent_chance 9	#define CORNERS_ARE_WATER	if 4_CORNERS if BORDERS_EXIST #define CONSIDER_GAIA_DOCKS endif endif
			percent_chance 10	#define CORNERS_ARE_SHALLOWS	if 4_CORNERS if BORDERS_EXIST #define CONSIDER_GAIA_DOCKS endif endif
			percent_chance 1	#define CORNERS_ARE_FOREST
			percent_chance 79	#define CORNERS_ARE_LAND
		end_random
	endif

	if CORNERS_ARE_WATER		#define CORNERS_USE_WATER_A
	elseif CORNERS_ARE_SHALLOWS	#define CORNERS_USE_SHALLOWS_A
	elseif CORNERS_ARE_FOREST	#define CORNERS_USE_FOREST_A
	elseif CORNERS_ARE_LAND	
		if SPECIAL_CENTER
			start_random
				percent_chance 49	#define CORNERS_USE_LAND_A
				percent_chance 50	#define CORNERS_USE_LAND_X
			end_random
		else 
			start_random
				percent_chance 44	#define CORNERS_USE_LAND_A
				percent_chance 45	#define CORNERS_USE_LAND_X
				percent_chance 10	#define CORNERS_USE_LAND_Z
			end_random
		endif
	endif
	
	/* do this 4 times */
	if CORNER1
		create_land {
		land_position 1 1  /* left corner */
		if REDUCE_CORNER_CONSTRAINTS
			right_border 62
			left_border -15
			bottom_border 62
			top_border -15
		else
			left_border -15
			right_border 82
			top_border -15
			bottom_border 82
		endif
		zone 3
		land_id 3

		base_size 1
		land_percent 10

		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 8
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif

		if CORNERS_USE_LAND_A			terrain_type LAND_A
		elseif CORNERS_USE_LAND_X		terrain_type LAND_X
		elseif CORNERS_USE_LAND_Z	terrain_type LAND_Z
		elseif CORNERS_USE_FOREST_A		terrain_type FOREST_A
		elseif CORNERS_USE_SHALLOWS_A			terrain_type SHALLOWS_A
		elseif CORNERS_USE_WATER_A		terrain_type WATER_A
		endif
		}
	endif
	
	if CORNER2
		create_land {
		land_position 99 99  /* right corner */
		if REDUCE_CORNER_CONSTRAINTS
			left_border 62
			right_border -15
			top_border 62
			bottom_border -15
		else
			left_border 82
			right_border -15
			top_border 82
			bottom_border -15
		endif
		zone 3
		land_id 3
		
		base_size 1
		land_percent 10
		
		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 8
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif
		
		if CORNERS_USE_LAND_A			terrain_type LAND_A
		elseif CORNERS_USE_LAND_X		terrain_type LAND_X
		elseif CORNERS_USE_LAND_Z	terrain_type LAND_Z
		elseif CORNERS_USE_FOREST_A		terrain_type FOREST_A
		elseif CORNERS_USE_SHALLOWS_A			terrain_type SHALLOWS_A
		elseif CORNERS_USE_WATER_A		terrain_type WATER_A
		endif
		}
	endif

	if CORNER3
		create_land {
		land_position 99 1  /* top */
		if REDUCE_CORNER_CONSTRAINTS
			left_border 62
			right_border -15
			top_border -15
			bottom_border 62
		else
			left_border 82
			right_border -15
			top_border -15
			bottom_border 82
		endif
		zone 3
		land_id 3
		
		base_size 1
		land_percent 10
		
		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 8
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif
		
		if CORNERS_USE_LAND_A			terrain_type LAND_A
		elseif CORNERS_USE_LAND_X		terrain_type LAND_X
		elseif CORNERS_USE_LAND_Z	terrain_type LAND_Z
		elseif CORNERS_USE_FOREST_A		terrain_type FOREST_A
		elseif CORNERS_USE_SHALLOWS_A			terrain_type SHALLOWS_A
		elseif CORNERS_USE_WATER_A		terrain_type WATER_A
		endif
		}
	endif
	
	if CORNER4
		create_land {
		land_position 1 99  /* bottom */
		if REDUCE_CORNER_CONSTRAINTS
			left_border -15
			right_border 62
			bottom_border 62
			bottom_border -15
		else
			left_border -15
			right_border 82
			top_border 82
			bottom_border -15
		endif
		zone 3
		land_id 3
		
		base_size 1
		land_percent 10
		
		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 8
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif
		
		if CORNERS_USE_LAND_A			terrain_type LAND_A
		elseif CORNERS_USE_LAND_X		terrain_type LAND_X
		elseif CORNERS_USE_LAND_Z	terrain_type LAND_Z
		elseif CORNERS_USE_FOREST_A		terrain_type FOREST_A
		elseif CORNERS_USE_SHALLOWS_A			terrain_type SHALLOWS_A
		elseif CORNERS_USE_WATER_A		terrain_type WATER_A
		endif
		}
	endif
endif

if NO_CORNER_LANDS
	if WATER_BASED_MAP
		if BORDERS_EXIST
			#define CONSIDER_GAIA_DOCKS
		endif
	endif
endif

/* gaia docks in the corners */
if BATTLE_ROYALE
elseif FREEZE_ALL_WATER
elseif FREEZE_PRIMARY_AND_SECONDARY_WATER
elseif WATER_IS_DRY
elseif SWAMP 
elseif MANGROVE_SWAMP_BIOME
else
	if ALLOW_GAIA_DOCKS
		if CONSIDER_GAIA_DOCKS
			start_random	
				percent_chance 94	#define USE_GAIA_DOCKS
			end_random
		endif
	endif
endif


/* =================================================================================================== */
/* create side lands */

if 2_PLAYER_GAME	/* create symmetrical lands */
	if WATER_BASED_MAP
		start_random
			percent_chance 48	#define SIDE1	#define SIDE3
			percent_chance 49	#define SIDE2	#define SIDE4
			percent_chance 2	#define SIDE1	#define SIDE2	#define SIDE3	#define SIDE4
		end_random
	else
		start_random
			percent_chance 33	#define SIDE1	#define SIDE3
			percent_chance 33	#define SIDE2	#define SIDE4
			percent_chance 33	#define SIDE1	#define SIDE2	#define SIDE3	#define SIDE4
		end_random
	endif
elseif BALANCED_TEAMS	/* create symmetrical lands */
	start_random
		percent_chance 33	#define SIDE1	#define SIDE3
		percent_chance 33	#define SIDE2	#define SIDE4
		percent_chance 33	#define SIDE1	#define SIDE2	#define SIDE3	#define SIDE4
	end_random
elseif ALLOW_RANDOM_CORNERS
	start_random
		percent_chance 69	#define SIDE1
	end_random
	start_random
		percent_chance 69	#define SIDE2
	end_random
	start_random
		percent_chance 69	#define SIDE3
	end_random
	start_random
		percent_chance 69	#define SIDE4
	end_random
else	/* create equal side lands */
	#define SIDE1
	#define SIDE2
	#define SIDE3
	#define SIDE4
endif


if NO_SIDE_LANDS
else #define SIDE_LANDS	/* redundant, but do it anyway just in case */
	if LAND_BASED_MAP
		if NO_LAKES
			start_random
				percent_chance 39	#define SIDES_ARE_FOREST
				percent_chance 60	#define SIDES_ARE_LAND
			end_random
		else
			start_random
				percent_chance 29	#define SIDES_ARE_WATER
				percent_chance 40	#define SIDES_ARE_FOREST
				percent_chance 10	#define SIDES_ARE_SHALLOWS
				percent_chance 20	#define SIDES_ARE_LAND
			end_random
		endif
	elseif FOREST_BASED_MAP
		if NO_LAKES	#define SIDES_ARE_LAND
		else
			start_random
				percent_chance 9	#define SIDES_ARE_WATER
				percent_chance 10	#define SIDES_ARE_FOREST
				percent_chance 10	#define SIDES_ARE_SHALLOWS
				percent_chance 70	#define SIDES_ARE_LAND
			end_random
		endif
	elseif WATER_BASED_MAP
		start_random
			percent_chance 9	#define SIDES_ARE_WATER
			percent_chance 10	#define SIDES_ARE_SHALLOWS
			percent_chance 1	#define SIDES_ARE_FOREST
			percent_chance 79	#define SIDES_ARE_LAND
		end_random
	endif

	if SIDES_ARE_WATER		#define SIDES_USE_WATER_A
	elseif SIDES_ARE_SHALLOWS	#define SIDES_USE_SHALLOWS_A
	elseif SIDES_ARE_FOREST	#define SIDES_USE_FOREST_A
	elseif SIDES_ARE_LAND	
		start_random
			percent_chance 49	#define SIDES_USE_LAND_A
			percent_chance 50	#define SIDES_USE_LAND_X
		end_random
	endif
	
	/* do this 4 times */
	if SIDE1
		create_land {
		land_position 50 2  /* north west */
		left_border 20
		right_border 20
		top_border -15
		bottom_border 90
		zone 4
		land_id 4

		base_size 1
		land_percent 10

		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 4
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif

		if SIDES_USE_LAND_A	terrain_type LAND_A
		elseif SIDES_USE_LAND_X	terrain_type LAND_X
		elseif SIDES_USE_FOREST_A	terrain_type FOREST_A
		elseif SIDES_USE_SHALLOWS_A	terrain_type SHALLOWS_A
		elseif SIDES_USE_WATER_A	terrain_type WATER_A
		endif
		}
	endif
	
	if SIDE2
		create_land {
		land_position 98 50  /* north east */
		left_border 90
		right_border -15
		top_border 20
		bottom_border 20
		zone 4
		land_id 4

		base_size 1
		land_percent 10

		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 4
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif

		if SIDES_USE_LAND_A	terrain_type LAND_A
		elseif SIDES_USE_LAND_X	terrain_type LAND_X
		elseif SIDES_USE_FOREST_A	terrain_type FOREST_A
		elseif SIDES_USE_SHALLOWS_A	terrain_type SHALLOWS_A
		elseif SIDES_USE_WATER_A	terrain_type WATER_A
		endif
		}
	endif

	if SIDE3
		create_land {
		land_position 50 98  /* south east */
		left_border 20
		right_border 20
		top_border 90
		bottom_border -15
		zone 4
		land_id 4

		base_size 1
		land_percent 10

		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 4
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif

		if SIDES_USE_LAND_A	terrain_type LAND_A
		elseif SIDES_USE_LAND_X	terrain_type LAND_X
		elseif SIDES_USE_FOREST_A	terrain_type FOREST_A
		elseif SIDES_USE_SHALLOWS_A	terrain_type SHALLOWS_A
		elseif SIDES_USE_WATER_A	terrain_type WATER_A
		endif
		}
	endif
	
	if SIDE4
		create_land {
		land_position 2 55  /* south west */
		left_border -15
		right_border 90
		top_border 20
		bottom_border 20
		zone 4
		land_id 4

		base_size 1
		land_percent 10

		if 36x36	other_zone_avoidance_distance 3
		elseif USE_ISLANDS_STYLE	other_zone_avoidance_distance 4
		elseif USE_MICHI_STYLE	other_zone_avoidance_distance 2
		endif

		if SIDES_USE_LAND_A	terrain_type LAND_A
		elseif SIDES_USE_LAND_X	terrain_type LAND_X
		elseif SIDES_USE_FOREST_A	terrain_type FOREST_A
		elseif SIDES_USE_SHALLOWS_A	terrain_type SHALLOWS_A
		elseif SIDES_USE_WATER_A	terrain_type WATER_A
		endif
		}
	endif
endif



/* =================================================================================================== */
if SPECIAL_CENTER
	create_land {
	if BATTLE_ROYALE	terrain_type ROAD_A
	else	terrain_type LAND_Z
	endif
	land_position 50 50
	land_percent 0
	zone 2
	land_id 22
	if 480x480	base_size 25
	elseif 400x400	base_size 22
	elseif 360x360	base_size 22
	elseif 320x320	base_size 20
	elseif 300x300	base_size 20
	elseif 276x276	base_size 20
	elseif 252x252	base_size 16
	elseif 240x240	base_size 16
	elseif 220x220	base_size 14
	elseif 200x200	base_size 12
	elseif 168x168	base_size 10
	elseif 144x144	base_size 10
	elseif 120x120	base_size 10
	elseif 100x100	base_size 10
	elseif 80x80 base_size 8
	elseif 60x60 base_size 6
	elseif 36x36 base_size 2
	endif
	}
endif


/* =================================================================================================== */
<ELEVATION_GENERATION> 


/* base terrain elevation */
if WATER_BASED_MAP
	start_random
		percent_chance 4	/* none */
		percent_chance 25	create_elevation 1
		percent_chance 20	create_elevation 2
		percent_chance 20	create_elevation 3
		percent_chance 20	create_elevation 4
		percent_chance 6	create_elevation 5
		percent_chance 3	create_elevation 6
		percent_chance 1	create_elevation 7
	end_random
elseif FOREST_BASED_MAP
	start_random
		percent_chance 4	/* none */
		percent_chance 25	create_elevation 1
		percent_chance 20	create_elevation 2
		percent_chance 20	create_elevation 3
		percent_chance 20	create_elevation 4
		percent_chance 6	create_elevation 5
		percent_chance 3	create_elevation 6
		percent_chance 1	create_elevation 7
	end_random
else
	start_random
		percent_chance 2	/* none */
		percent_chance 11	create_elevation 1
		percent_chance 11	create_elevation 2
		percent_chance 21	create_elevation 3
		percent_chance 21	create_elevation 4
		percent_chance 11	create_elevation 5
		percent_chance 11	create_elevation 6
		percent_chance 11	create_elevation 7
	end_random
endif
{
	enable_balanced_elevation
	base_terrain LAND_A
	set_scale_by_size
	if REDUCE_ELEVATION
		start_random   /* number of tiles scaled by 100x100 - still needs testing */
			percent_chance 14	number_of_tiles 0
			percent_chance 10	number_of_tiles rnd(25,75)
			percent_chance 10	number_of_tiles rnd(76,200)
			percent_chance 10	number_of_tiles rnd(200,350)	
			percent_chance 10	number_of_tiles rnd(351,650)
			percent_chance 15	number_of_tiles rnd(651,800)	
			percent_chance 10	number_of_tiles rnd(801,1500)
			percent_chance 10	number_of_tiles rnd(1501,2500)	
			percent_chance 10	number_of_tiles rnd(2501,3500)
		end_random
		start_random /* number of clumps scaled by 100x100 - still needs testing */
			percent_chance 24	number_of_clumps rnd(6,12)
			percent_chance 25	number_of_clumps rnd(13,24)
			percent_chance 25	number_of_clumps rnd(25,42)
			percent_chance 25	number_of_clumps rnd(43,80)
		end_random
		start_random 
			percent_chance 39	spacing 1
			percent_chance 10	spacing 2
			percent_chance 10	spacing 3
			percent_chance 20	spacing 4
			percent_chance 20	spacing 5
		end_random		
	else
		start_random   /* number of tiles scaled by 100x100 - still needs testing */
			percent_chance 9	number_of_tiles 0
			percent_chance 5	number_of_tiles rnd(25,75)
			percent_chance 5	number_of_tiles rnd(76,200)
			percent_chance 10	number_of_tiles rnd(200,350)	
			percent_chance 10	number_of_tiles rnd(351,650)
			percent_chance 10	number_of_tiles rnd(651,800)	
			percent_chance 10	number_of_tiles rnd(801,1500)
			percent_chance 10	number_of_tiles rnd(1501,2500)	
			percent_chance 10	number_of_tiles rnd(2501,3500)
			percent_chance 10	number_of_tiles rnd(3501,4500)
			percent_chance 10	number_of_tiles rnd(4501,5000)
		end_random
		start_random /* number of clumps scaled by 100x100 - still needs testing */
			percent_chance 19	number_of_clumps rnd(6,12)
			percent_chance 20	number_of_clumps rnd(13,24)
			percent_chance 20	number_of_clumps rnd(25,42)
			percent_chance 20	number_of_clumps rnd(43,80)
			percent_chance 20	number_of_clumps rnd(81,136)
		end_random
		start_random 
			percent_chance 39	spacing 1
			percent_chance 25	spacing 2
			percent_chance 15	spacing 3
			percent_chance 10	spacing 4
			percent_chance 10	spacing 5
		end_random
	endif
	if MANGROVE_SWAMP_BIOME
		start_random
			percent_chance 79	number_of_tiles 0	/* override what was chosen above */
		end_random
	endif
}

/* forest elevation */
start_random
	percent_chance 9	/* none */
	percent_chance 10	create_elevation 1
	percent_chance 10	create_elevation 2
	percent_chance 20	create_elevation 3
	percent_chance 20	create_elevation 4
	percent_chance 10	create_elevation 5
	percent_chance 10	create_elevation 6
	percent_chance 10	create_elevation 7
end_random
{
	enable_balanced_elevation
	base_terrain FOREST_A
	set_scale_by_size
	start_random   /* number of tiles scaled by 100x100 - still needs testing */
		percent_chance 9	number_of_tiles 0
		percent_chance 10	number_of_tiles rnd(25,75)
		percent_chance 10	number_of_tiles rnd(76,200)
		percent_chance 10	number_of_tiles rnd(200,350)	
		percent_chance 10	number_of_tiles rnd(351,650)
		percent_chance 10	number_of_tiles rnd(651,800)	
		percent_chance 10	number_of_tiles rnd(801,1500)
		percent_chance 10	number_of_tiles rnd(1501,2500)	
		percent_chance 10	number_of_tiles rnd(2501,3500)
		percent_chance 10	number_of_tiles rnd(3501,4000)
	end_random
	start_random /* number of clumps currently not subjected to scaling */
		percent_chance 19	number_of_clumps rnd(6,12)
		percent_chance 20	number_of_clumps rnd(13,24)
		percent_chance 20	number_of_clumps rnd(25,42)
		percent_chance 20	number_of_clumps rnd(43,80)
		percent_chance 20	number_of_clumps rnd(81,136)
	end_random
	start_random 
		percent_chance 39	spacing 1
		percent_chance 25	spacing 2
		percent_chance 15	spacing 3
		percent_chance 10	spacing 4
		percent_chance 10	spacing 5
	end_random
}

/* land x elevation */
start_random
	percent_chance 9	/* none */
	percent_chance 10	create_elevation 1
	percent_chance 10	create_elevation 2
	percent_chance 20	create_elevation 3
	percent_chance 20	create_elevation 4
	percent_chance 10	create_elevation 5
	percent_chance 10	create_elevation 6
	percent_chance 10	create_elevation 7
end_random
{
	enable_balanced_elevation
	base_terrain LAND_X
	set_scale_by_size
	start_random   /* number of tiles scaled by 100x100 - still needs testing */
		percent_chance 9	number_of_tiles 0
		percent_chance 10	number_of_tiles rnd(25,75)
		percent_chance 10	number_of_tiles rnd(76,200)
		percent_chance 10	number_of_tiles rnd(200,350)	
		percent_chance 10	number_of_tiles rnd(351,650)
		percent_chance 10	number_of_tiles rnd(651,800)	
		percent_chance 10	number_of_tiles rnd(801,1500)
		percent_chance 10	number_of_tiles rnd(1501,2500)	
		percent_chance 10	number_of_tiles rnd(2501,3500)
		percent_chance 10	number_of_tiles rnd(3501,4000)	
	end_random
	start_random /* number of clumps currently not subjected to scaling */
		percent_chance 19	number_of_clumps rnd(6,12)
		percent_chance 20	number_of_clumps rnd(13,24)
		percent_chance 20	number_of_clumps rnd(25,42)
		percent_chance 20	number_of_clumps rnd(43,80)
		percent_chance 20	number_of_clumps rnd(81,136)
	end_random
	start_random 
		percent_chance 39	spacing 1
		percent_chance 25	spacing 2
		percent_chance 15	spacing 3
		percent_chance 10	spacing 4
		percent_chance 10	spacing 5
	end_random
}

if ALLOW_WATER_ELEVATION
start_random
	percent_chance 79	create_elevation 0	/* none */
	percent_chance 13	create_elevation 1
	percent_chance 6	create_elevation 2
	percent_chance 1	create_elevation 3
end_random
{
	enable_balanced_elevation
	base_terrain WATER_A
	set_scale_by_size
	start_random   /* number of tiles scaled by 100x100 - still needs testing */
		percent_chance 49	number_of_tiles 0
		percent_chance 10	number_of_tiles rnd(25,75)
		percent_chance 10	number_of_tiles rnd(76,200)
		percent_chance 10	number_of_tiles rnd(200,350)	
		percent_chance 10	number_of_tiles rnd(351,650)
		percent_chance 6	number_of_tiles rnd(651,800)	
		percent_chance 1	number_of_tiles rnd(801,1500)
		percent_chance 1	number_of_tiles rnd(1501,2500)	
		percent_chance 1	number_of_tiles rnd(2501,3500)
		percent_chance 1	number_of_tiles rnd(3501,4000)
	end_random
	start_random /* number of clumps currently not subjected to scaling */
		percent_chance 19	number_of_clumps rnd(6,12)
		percent_chance 20	number_of_clumps rnd(13,24)
		percent_chance 20	number_of_clumps rnd(25,42)
		percent_chance 20	number_of_clumps rnd(43,80)
		percent_chance 20	number_of_clumps rnd(81,136)
	end_random
	start_random 
		percent_chance 39	spacing 1
		percent_chance 25	spacing 2
		percent_chance 15	spacing 3
		percent_chance 10	spacing 4
		percent_chance 10	spacing 5
	end_random
}
endif
/* speacial case where corners are useless terrain */
if CORNERS_USE_LAND_Z
	create_elevation 7 {
		base_terrain LAND_Z
		number_of_tiles 99999
		number_of_clumps 999
		start_random 
			percent_chance 29	spacing 1
			percent_chance 30	spacing 2
			percent_chance 30	spacing 3
			percent_chance 10	spacing 4
		end_random
	}
endif

/* in ctr or koth */
if SPECIAL_CENTER
	if 480x480	create_elevation 7
	elseif 400x400	create_elevation 7
	elseif 360x360	create_elevation 7
	elseif 320x320	create_elevation 7
	elseif 300x300	create_elevation 7
	elseif 276x276	create_elevation 7
	elseif 252x252	create_elevation 6
	elseif 240x240	create_elevation 6
	elseif 220x220	create_elevation 5
	elseif 200x200	create_elevation 4
	elseif 168x168	create_elevation 4
	elseif 144x144	create_elevation 4
	elseif 120x120	create_elevation 4
	elseif 100x100	create_elevation 4
	elseif 80x80	create_elevation 3
	elseif 60x60	create_elevation 2
	elseif 36x36	create_elevation 1
	endif
	{
		if BATTLE_ROYALE base_terrain ROAD_A
		else	base_terrain LAND_Z endif
		number_of_tiles 99999
		number_of_clumps 9320
		spacing 2
	}
endif

/* =================================================================================================== */
/* <CLIFF_GENERATION>' */

/* only do cliffs on land maps, where there is more room */
if FOREST_BASED_MAP			#define NO_CLIFFS
elseif WATER_BASED_MAP		#define NO_CLIFFS
elseif CENTER_IS_FOREST		#define NO_CLIFFS
elseif CENTER_IS_SHALLOWS	#define NO_CLIFFS
elseif CENTER_IS_WATER		#define NO_CLIFFS
else
	start_random
		percent_chance 32	#define NO_CLIFFS
	end_random
endif

if NO_CLIFFS
else
<CLIFF_GENERATION>

cliff_type CLIFFS_TYPE

/* curliness - the percent chance of turning rather than going straight at any given tile */
cliff_curliness rnd(0,100)
/* spacing to other cliffs */
start_random
	percent_chance 4	min_distance_cliffs 1 /* 3 tiles */
	percent_chance 50 	min_distance_cliffs 2 /* 6 tiles */
	percent_chance 20 	min_distance_cliffs 3 /* 9 tiles */
	percent_chance 10 	min_distance_cliffs 4 /* 12 tiles */
	percent_chance 7 	min_distance_cliffs 5 /* 15 tiles */
	percent_chance 3 	min_distance_cliffs 6 /* 18 tiles */
	percent_chance 2 	min_distance_cliffs 7 /* 21 tiles */
	percent_chance 1 	min_distance_cliffs 8 /* 24 tiles */
	percent_chance 1 	min_distance_cliffs 9 /* 27 tiles */
	percent_chance 1 	min_distance_cliffs 10 /* 30 tiles */	
end_random
min_terrain_distance 2  /* distance to stay away from water - 2 is the default anyway */
if 36x36
	min_number_of_cliffs 1
	max_number_of_cliffs 1
	min_length_of_cliff 3
	max_length_of_cliff 3
elseif 60x60
	min_number_of_cliffs 2
	max_number_of_cliffs 4
	min_length_of_cliff 3
	max_length_of_cliff 3
elseif 80x80
	min_number_of_cliffs 3
	max_number_of_cliffs 7
	min_length_of_cliff 3
	max_length_of_cliff 4
elseif 100x100
	min_number_of_cliffs 4
	max_number_of_cliffs 9
	min_length_of_cliff 3
	max_length_of_cliff 5
elseif 120x120
	min_number_of_cliffs 5
	max_number_of_cliffs 11
	min_length_of_cliff 4
	max_length_of_cliff 6
elseif 144x144
	min_number_of_cliffs 8
	max_number_of_cliffs 17
	min_length_of_cliff 4
	max_length_of_cliff 7
elseif 168x168
	min_number_of_cliffs 11
	max_number_of_cliffs 22
	min_length_of_cliff 5
	max_length_of_cliff 8
elseif 200x200
	min_number_of_cliffs 16
	max_number_of_cliffs 32
	min_length_of_cliff 6
	max_length_of_cliff 9
elseif 220x220
	min_number_of_cliffs 19
	max_number_of_cliffs 38
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 240x240
	min_number_of_cliffs 23
	max_number_of_cliffs 46
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 252x252
	min_number_of_cliffs 26
	max_number_of_cliffs 51
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 276x276
	min_number_of_cliffs 30
	max_number_of_cliffs 61
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 300x300
	min_number_of_cliffs 36
	max_number_of_cliffs 72
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 320x320
	min_number_of_cliffs 41
	max_number_of_cliffs 82
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 360x360
	min_number_of_cliffs 52
	max_number_of_cliffs 104
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 400x400
	min_number_of_cliffs 64
	max_number_of_cliffs 120
	min_length_of_cliff 6
	max_length_of_cliff 10
elseif 480x480
	min_number_of_cliffs 92
	max_number_of_cliffs 184
	min_length_of_cliff 6
	max_length_of_cliff 10
endif
endif


/* =================================================================================================== */
<TERRAIN_GENERATION>

/* color correction */
if POLAR_BIOME
	start_random
		percent_chance 1	color_correction CC_AUTUMN
		percent_chance 90	color_correction CC_WINTER
		percent_chance 2	color_correction CC_JUNGLE
		percent_chance 2	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif TAIGA_BIOME
	start_random
		percent_chance 4	color_correction CC_AUTUMN
		percent_chance 87	color_correction CC_WINTER
		percent_chance 2	color_correction CC_JUNGLE
		percent_chance 2	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif ALPINE_BIOME
	start_random
		percent_chance 19	color_correction CC_AUTUMN
		percent_chance 72	color_correction CC_WINTER
		percent_chance 2	color_correction CC_JUNGLE
		percent_chance 2	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif HIGHLAND_BIOME
	start_random
		percent_chance 19	color_correction CC_AUTUMN
		percent_chance 20	color_correction CC_WINTER
		percent_chance 15	color_correction CC_JUNGLE
		percent_chance 15	color_correction CC_DESERT
		percent_chance 30	/* no color correction */
	end_random
elseif TEMPERATE_BIOME
	start_random
		percent_chance 14	color_correction CC_AUTUMN
		percent_chance 15	color_correction CC_WINTER
		percent_chance 15	color_correction CC_JUNGLE
		percent_chance 15	color_correction CC_DESERT
		percent_chance 40	/* no color correction */
	end_random
elseif AUTUMN_TEMPERATE_BIOME
	start_random
		percent_chance 70	color_correction CC_AUTUMN
		percent_chance 5	color_correction CC_WINTER
		percent_chance 5	color_correction CC_JUNGLE
		percent_chance 5	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif AUTUMN_SNOW_BIOME
	start_random
		percent_chance 50	color_correction CC_AUTUMN
		percent_chance 41	color_correction CC_WINTER
		percent_chance 2	color_correction CC_JUNGLE
		percent_chance 2	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif JUNGLE_BIOME
	start_random
		percent_chance 19	color_correction CC_AUTUMN
		percent_chance 2	color_correction CC_WINTER
		percent_chance 70	color_correction CC_JUNGLE
		percent_chance 4	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif TROPICAL_BIOME
	start_random
		percent_chance 5	color_correction CC_AUTUMN
		percent_chance 2	color_correction CC_WINTER
		percent_chance 20	color_correction CC_JUNGLE
		percent_chance 30	color_correction CC_DESERT
		percent_chance 42	/* no color correction */
	end_random
elseif SAVANNAH_BIOME
	start_random
		percent_chance 11	color_correction CC_AUTUMN
		percent_chance 2	color_correction CC_WINTER
		percent_chance 2	color_correction CC_JUNGLE
		percent_chance 80	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif DESERT_BIOME
	start_random
		percent_chance 1	color_correction CC_AUTUMN
		percent_chance 2	color_correction CC_WINTER
		percent_chance 2	color_correction CC_JUNGLE
		percent_chance 90	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif HIGH_DESERT_BIOME
	start_random
		percent_chance 9	color_correction CC_AUTUMN
		percent_chance 10	color_correction CC_WINTER
		percent_chance 2	color_correction CC_JUNGLE
		percent_chance 70	color_correction CC_DESERT
		percent_chance 8	/* no color correction */
	end_random
elseif MANGROVE_SWAMP_BIOME
	start_random
		percent_chance 11	color_correction CC_AUTUMN
		percent_chance 2	color_correction CC_WINTER
		percent_chance 80	color_correction CC_JUNGLE
		percent_chance 2	color_correction CC_DESERT
		percent_chance 4	/* no color correction */
	end_random
elseif WASTELAND_BIOME
	start_random
		percent_chance 19	color_correction CC_AUTUMN
		percent_chance 20	color_correction CC_WINTER
		percent_chance 20	color_correction CC_JUNGLE
		percent_chance 20	color_correction CC_DESERT
		percent_chance 20	/* no color correction */
	end_random
endif

if ALLOW_NIGHT_COLOR_CORRECTION
	start_random
		percent_chance 4	color_correction CC_NIGHT
	end_random
endif

/* add custom color corrections */

/* could add ring terrains around center and/or player lands */

/* =================================================================================================== */
/* central stuff */
if CENTER_IS_SHALLOWS	/* central lake If center is shallows */
	if CORNERS_ARE_SHALLOWS
	elseif SIDES_ARE_SHALLOWS
	elseif BETWEEN_IS_SHALLOWS
	elseif MANGROVE_SWAMP_BIOME
	else
		create_terrain WATER_A {
		base_terrain SHALLOWS_A
		spacing_to_other_terrain_types rnd(3,11)
		if SMALL_CENTRAL_LAND		land_percent 5
		elseif MEDIUM_CENTRAL_LAND	land_percent 10
		elseif LARGE_CENTRAL_LAND	land_percent 15
		endif
		if DOUBLE_CENTER number_of_clumps 12
		elseif QUAD_CENTER number_of_clumps 48
		else number_of_clumps 1
		endif
		clumping_factor 25
		}
	endif
elseif CENTER_IS_WATER	/* central island If center is water */
	if CORNERS_ARE_WATER
	elseif SIDES_ARE_WATER
	elseif BETWEEN_IS_WATER
	elseif WATER_BASED_MAP
	else
		start_random
			percent_chance 79
				#define CENTRAL_ISLAND
				create_terrain LAND_X {
				base_terrain WATER_A
				if FORCE_LAKE spacing_to_other_terrain_types 10
				elseif TINY_OR_SMALLER spacing_to_other_terrain_types 5
				else spacing_to_other_terrain_types 10
				endif
				land_percent 5
				if DOUBLE_CENTER number_of_clumps 12
				elseif QUAD_CENTER number_of_clumps 48
				else number_of_clumps 1
				endif
				clumping_factor 25
				}
		end_random
	endif
elseif CENTER_IS_FOREST	/* central lake If center is forest */
	if CORNERS_ARE_FOREST
	elseif SIDES_ARE_FOREST
	elseif BETWEEN_IS_FOREST
	elseif NO_LAKES
	elseif FOREST_BASED_MAP
	else 
		if LARGE_CENTRAL_LAND
			#define FOREST_LAKE
			create_terrain WATER_A {
			base_terrain FOREST_A
			land_percent 100
			if DOUBLE_CENTER number_of_clumps 12
			elseif QUAD_CENTER number_of_clumps 48
			else number_of_clumps 1
			endif
			if TINY_OR_SMALLER spacing_to_other_terrain_types 5
			else spacing_to_other_terrain_types 10
			endif
			}
		endif
	endif
endif

/* how many forests do we need? */
if CORNERS_USE_LAND_X #define LAND_X1 endif
if SIDES_USE_LAND_X if LAND_X1 #define LAND_X2 else #define LAND_X1 endif endif
if CENTRAL_ISLAND if LAND_X2 #define LAND_X3 elseif LAND_X1 #define LAND_X2 else #define LAND_X1 endif endif
if BETWEEN_IS_LAND_X if LAND_X3 #define LAND_X4 elseif LAND_X2 #define LAND_X3 elseif LAND_X1 #define LAND_X2 else #define LAND_X1 endif endif
if CENTER_IS_LAND_X
	if LARGE_CENTRAL_LAND if LAND_X4 #define LAND_X7 elseif LAND_X3 #define LAND_X6 elseif LAND_X2 #define LAND_X5 elseif LAND_X1 #define LAND_X4 else #define LAND_X3 endif
	elseif MEDIUM_CENTRAL_LAND if LAND_X4 #define LAND_X6 elseif LAND_X3 #define LAND_X5 elseif LAND_X2 #define LAND_X4 elseif LAND_X1 #define LAND_X3 else #define LAND_X2 endif
	else if LAND_X4 #define LAND_X5 elseif LAND_X3 #define LAND_X4 elseif LAND_X2 #define LAND_X3 elseif LAND_X1 #define LAND_X2 else #define LAND_X1 endif
	endif
endif

create_terrain FOREST_A {
base_terrain LAND_X
terrain_mask 2
spacing_to_other_terrain_types rnd(4,8)
start_random
	percent_chance 19	number_of_clumps 8
	percent_chance 20	number_of_clumps 10
	percent_chance 40	number_of_clumps 16
	percent_chance 20	number_of_clumps 20
end_random
set_scale_by_size
if 36x36 set_avoid_player_start_areas 6
else set_avoid_player_start_areas rnd(13,18) 
endif
if LAND_X1	land_percent 2
elseif LAND_X2	land_percent 3
elseif LAND_X3	land_percent 4
elseif LAND_X4	land_percent 5
elseif LAND_X5	land_percent 6
elseif LAND_X6	land_percent 7
elseif LAND_X7	land_percent 8
endif
}

/* =================================================================================================== */


/* forests - may still need further tweaks - I am not entirely happy with it yet */
create_terrain FOREST_A
{
	base_terrain LAND_A
	terrain_mask 2
	spacing_to_other_terrain_types 5
	if LAND_BASED_MAP
		if NO_CENTRAL_LAND
			start_random
				percent_chance 9	land_percent 8	#define 8%_FOREST
				percent_chance 10	land_percent 10	#define 10%_FOREST
				percent_chance 15	land_percent 12	#define 12%_FOREST
				percent_chance 15	land_percent 15	#define 15%_FOREST
				percent_chance 15	land_percent 18	#define 18%_FOREST
				percent_chance 15	land_percent 21	#define 21%_FOREST
				percent_chance 10	land_percent 25	#define 25%_FOREST
				percent_chance 10	land_percent 30	#define 30%_FOREST
			end_random
		elseif SMALL_CENTRAL_LAND
			start_random
				percent_chance 9	land_percent 8	#define 8%_FOREST
				percent_chance 15	land_percent 10	#define 10%_FOREST
				percent_chance 20	land_percent 12	#define 12%_FOREST
				percent_chance 20	land_percent 15	#define 15%_FOREST
				percent_chance 15	land_percent 18	#define 18%_FOREST
				percent_chance 10	land_percent 21	#define 21%_FOREST
				percent_chance 5	land_percent 25	#define 25%_FOREST
				percent_chance 5	land_percent 30	#define 30%_FOREST
			end_random
		elseif MEDIUM_CENTRAL_LAND
			start_random
				percent_chance 9	land_percent 8	#define 8%_FOREST
				percent_chance 15	land_percent 10	#define 10%_FOREST
				percent_chance 20	land_percent 12	#define 12%_FOREST
				percent_chance 25	land_percent 15	#define 15%_FOREST
				percent_chance 15	land_percent 18	#define 18%_FOREST
				percent_chance 10	land_percent 21	#define 21%_FOREST
				percent_chance 4	land_percent 25	#define 25%_FOREST
				percent_chance 1	land_percent 30	#define 30%_FOREST
			end_random
		elseif LARGE_CENTRAL_LAND
			start_random
				percent_chance 9	land_percent 8	#define 8%_FOREST
				percent_chance 25	land_percent 10	#define 10%_FOREST
				percent_chance 25	land_percent 12	#define 12%_FOREST
				percent_chance 15	land_percent 15	#define 15%_FOREST
				percent_chance 15	land_percent 18	#define 18%_FOREST
				percent_chance 8	land_percent 21	#define 21%_FOREST
				percent_chance 1	land_percent 25	#define 25%_FOREST
				percent_chance 1	land_percent 30	#define 30%_FOREST
			end_random
		endif
	elseif FOREST_BASED_MAP
		if 20%_PLAYER_LANDS			land_percent 5	#define 5%_FOREST
		elseif 30%_PLAYER_LANDS		land_percent 5	#define 5%_FOREST
		elseif 40%_PLAYER_LANDS		land_percent 6	#define 6%_FOREST
		elseif 50%_PLAYER_LANDS		land_percent 6	#define 6%_FOREST
		elseif 60%_PLAYER_LANDS		land_percent 7	#define 7%_FOREST
		elseif 70%_PLAYER_LANDS		land_percent 7	#define 7%_FOREST
		elseif 80%_PLAYER_LANDS		land_percent 8	#define 8%_FOREST
		elseif 90%_PLAYER_LANDS		land_percent 9	#define 9%_FOREST
		elseif 100%_PLAYER_LANDS	land_percent 10	#define 10%_FOREST
		endif
	elseif WATER_BASED_MAP
		if 20%_PLAYER_LANDS			land_percent 6	#define 6%_FOREST
		elseif 30%_PLAYER_LANDS		land_percent 6	#define 6%_FOREST
		elseif 40%_PLAYER_LANDS		land_percent 7	#define 7%_FOREST
		elseif 50%_PLAYER_LANDS		land_percent 7	#define 7%_FOREST
		elseif 60%_PLAYER_LANDS		land_percent 8	#define 8%_FOREST
		elseif 70%_PLAYER_LANDS		land_percent 8	#define 8%_FOREST
		elseif 80%_PLAYER_LANDS		land_percent 9	#define 9%_FOREST
		elseif 90%_PLAYER_LANDS		land_percent 10	#define 10%_FOREST
		elseif 100%_PLAYER_LANDS	land_percent 11	#define 11%_FOREST
		endif
	endif
	number_of_clumps 25
	if 36x36 set_avoid_player_start_areas 6
	elseif EW_FEUDAL set_avoid_player_start_areas 16
	else	set_avoid_player_start_areas rnd(13,18)
	endif
	set_scale_by_groups
}

create_terrain HILL_FOREST {
	base_terrain FOREST_A
	land_percent 100
	number_of_clumps 100
	set_scale_by_groups
	if PLAYERS_ELEVATION_0	height_limits 2 17
	elseif PLAYERS_ELEVATION_1	height_limits 3 17
	elseif PLAYERS_ELEVATION_2	height_limits 4 17
	elseif PLAYERS_ELEVATION_3	height_limits 5 17
	elseif PLAYERS_ELEVATION_4	height_limits 6 17
	endif
}

/* forest mixing */
create_terrain FOREST_B {
	base_terrain FOREST_A
	terrain_mask 2
	if FOREST_BASED_MAP
		if 5%_FOREST		land_percent 11
		elseif 6%_FOREST	land_percent 12
		elseif 7%_FOREST	land_percent 12
		elseif 8%_FOREST	land_percent 12
		elseif 9%_FOREST	land_percent 13
		elseif 10%_FOREST	land_percent 13
		elseif 11%_FOREST	land_percent 13
		elseif 12%_FOREST	land_percent 14
		elseif 15%_FOREST	land_percent 15
		elseif 18%_FOREST	land_percent 16
		elseif 21%_FOREST	land_percent 17
		elseif 25%_FOREST	land_percent 18
		elseif 30%_FOREST	land_percent 19
		endif
	elseif CENTER_IS_FOREST
		if 5%_FOREST		land_percent 3
		elseif 6%_FOREST	land_percent 4
		elseif 7%_FOREST	land_percent 5
		elseif 8%_FOREST	land_percent 6
		elseif 9%_FOREST	land_percent 7
		elseif 10%_FOREST	land_percent 8
		elseif 11%_FOREST	land_percent 9
		elseif 12%_FOREST	land_percent 10
		elseif 15%_FOREST	land_percent 11
		elseif 18%_FOREST	land_percent 12
		elseif 21%_FOREST	land_percent 13
		elseif 25%_FOREST	land_percent 14
		elseif 30%_FOREST	land_percent 15
		endif
	else
		if 5%_FOREST		land_percent 1
		elseif 6%_FOREST	land_percent 2
		elseif 7%_FOREST	land_percent 2
		elseif 8%_FOREST	land_percent 2
		elseif 9%_FOREST	land_percent 3
		elseif 10%_FOREST	land_percent 3
		elseif 11%_FOREST	land_percent 3
		elseif 12%_FOREST	land_percent 4
		elseif 15%_FOREST	land_percent 5
		elseif 18%_FOREST	land_percent 6
		elseif 21%_FOREST	land_percent 7
		elseif 25%_FOREST	land_percent 8
		elseif 30%_FOREST	land_percent 9
		endif
	endif
	number_of_clumps 9320 
	set_scale_by_groups
	if PLAYERS_ELEVATION_0	height_limits 0 2
	elseif PLAYERS_ELEVATION_1	height_limits 0 3
	elseif PLAYERS_ELEVATION_2	height_limits 0 5
	elseif PLAYERS_ELEVATION_3	height_limits 0 5
	elseif PLAYERS_ELEVATION_4	height_limits 0 6
	endif
}

create_terrain FOREST_C {
	base_terrain FOREST_A
	terrain_mask 2
	if FOREST_BASED_MAP
		if 5%_FOREST		land_percent 11
		elseif 6%_FOREST	land_percent 12
		elseif 7%_FOREST	land_percent 12
		elseif 8%_FOREST	land_percent 12
		elseif 9%_FOREST	land_percent 13
		elseif 10%_FOREST	land_percent 13
		elseif 11%_FOREST	land_percent 13
		elseif 12%_FOREST	land_percent 14
		elseif 15%_FOREST	land_percent 15
		elseif 18%_FOREST	land_percent 16
		elseif 21%_FOREST	land_percent 17
		elseif 25%_FOREST	land_percent 18
		elseif 30%_FOREST	land_percent 19
		endif
	elseif CENTER_IS_FOREST
		if 5%_FOREST		land_percent 3
		elseif 6%_FOREST	land_percent 4
		elseif 7%_FOREST	land_percent 5
		elseif 8%_FOREST	land_percent 6
		elseif 9%_FOREST	land_percent 7
		elseif 10%_FOREST	land_percent 8
		elseif 11%_FOREST	land_percent 9
		elseif 12%_FOREST	land_percent 10
		elseif 15%_FOREST	land_percent 11
		elseif 18%_FOREST	land_percent 12
		elseif 21%_FOREST	land_percent 13
		elseif 25%_FOREST	land_percent 14
		elseif 30%_FOREST	land_percent 15
		endif
	else
		if 5%_FOREST		land_percent 1
		elseif 6%_FOREST	land_percent 2
		elseif 7%_FOREST	land_percent 2
		elseif 8%_FOREST	land_percent 2
		elseif 9%_FOREST	land_percent 3
		elseif 10%_FOREST	land_percent 3
		elseif 11%_FOREST	land_percent 3
		elseif 12%_FOREST	land_percent 4
		elseif 15%_FOREST	land_percent 5
		elseif 18%_FOREST	land_percent 6
		elseif 21%_FOREST	land_percent 7
		elseif 25%_FOREST	land_percent 8
		elseif 30%_FOREST	land_percent 9
		endif
	endif
	number_of_clumps 9320 
	set_scale_by_groups
	if PLAYERS_ELEVATION_0	height_limits 0 2
	elseif PLAYERS_ELEVATION_1	height_limits 0 3
	elseif PLAYERS_ELEVATION_2	height_limits 0 5
	elseif PLAYERS_ELEVATION_3	height_limits 0 5
	elseif PLAYERS_ELEVATION_4	height_limits 0 6
	endif
}

/* =================================================================================================== */
/* decorate hills */

if CENTER_IS_LAND_A
	if CENTER_ELEVATION_0	#define COLOR_HILLS	endif
else #define COLOR_HILLS
endif

if COLOR_HILLS
	create_terrain HILL_A {
		base_terrain LAND_A
		land_percent 100
		number_of_clumps 9320
		set_scale_by_groups
		if PLAYERS_ELEVATION_0	height_limits 2 17
		elseif PLAYERS_ELEVATION_1	height_limits 3 17
		elseif PLAYERS_ELEVATION_2	height_limits 4 17
		elseif PLAYERS_ELEVATION_3	height_limits 5 17
		else	height_limits 6 17
		endif
		terrain_mask 2
	}
	create_terrain HILL_A {
		base_terrain HILL_A
		base_layer LAND_A
		spacing_to_other_terrain_types 0
		land_percent 100
		number_of_clumps 9320
		set_scale_by_groups
		if PLAYERS_ELEVATION_0	height_limits 3 17
		elseif PLAYERS_ELEVATION_1	height_limits 4 17
		elseif PLAYERS_ELEVATION_2	height_limits 5 17
		elseif PLAYERS_ELEVATION_3	height_limits 6 17
		else	height_limits 7 17
		endif
		terrain_mask 2
	}
	create_terrain HILL_B {
		base_terrain HILL_A
		base_layer HILL_A
		spacing_to_other_terrain_types 1
		land_percent 10
		number_of_clumps 5
		set_scale_by_groups
		terrain_mask 1
	}
endif

/* =================================================================================================== */
/* cosmetic terrain mixing */

/* land terrain mixing - could be expanded upon */
if MANGROVE_SWAMP_BIOME
create_terrain LAND_B {
	base_terrain LAND_A
	spacing_to_other_terrain_types 0
	if WATER_BASED_MAP		land_percent rnd(4,6)
	elseif FOREST_BASED_MAP	land_percent rnd(9,11)
	else					land_percent rnd(14,16)
	endif
	number_of_clumps rnd(6,10)
	set_scale_by_groups
	set_avoid_player_start_areas 40
}
create_terrain LAND_C {
	base_terrain	LAND_B
	spacing_to_other_terrain_types 1
	if WATER_BASED_MAP		land_percent rnd(2,4)
	elseif FOREST_BASED_MAP	land_percent rnd(7,9)
	else					land_percent rnd(11,13)
	endif
	number_of_clumps rnd(20,30)
	set_scale_by_groups
}
else /* not mangrove swamp */
create_terrain LAND_B {
	base_terrain LAND_A
	spacing_to_other_terrain_types 0
	if WATER_BASED_MAP		land_percent rnd(10,20)
	elseif FOREST_BASED_MAP	land_percent rnd(15,25)
	else					land_percent rnd(20,30)
	endif
	number_of_clumps rnd(10,14)
	set_scale_by_groups
	set_avoid_player_start_areas rnd(13,18)
	terrain_mask 2
}
create_terrain LAND_B {
	base_terrain LAND_B
	base_layer LAND_A
	spacing_to_other_terrain_types 1
	land_percent 100
	number_of_clumps 9320
	set_scale_by_groups
	terrain_mask 2
}
create_terrain LAND_C {
	base_terrain LAND_B
	base_layer LAND_B
	spacing_to_other_terrain_types 1
	if WATER_BASED_MAP		land_percent rnd(5,15)
	elseif FOREST_BASED_MAP	land_percent rnd(10,20)
	else					land_percent rnd(25,25)
	endif
	number_of_clumps rnd(20,30)
	set_scale_by_groups
	terrain_mask 2
}
create_terrain LAND_C {
	base_terrain LAND_C
	base_layer LAND_B
	spacing_to_other_terrain_types 1
	land_percent 100
	number_of_clumps 9320
	set_scale_by_groups
	terrain_mask 2
}
endif

if NO_SMALL_PONDS
elseif WATER_IS_DRY
elseif FREEZE_ALL_WATER
elseif FREEZE_PRIMARY_AND_SECONDARY_WATER
else
	start_random
		percent_chance 4 #define USE_SMALL_PONDS
	end_random
endif
if USE_SMALL_PONDS
	create_terrain WATER_A {
		base_terrain LAND_A
		set_avoid_player_start_areas rnd(18,25)
		set_flat_terrain_only
		spacing_to_other_terrain_types 3
		if WATER_BASED_MAP		land_percent 1
		elseif FOREST_BASED_MAP	land_percent 1
		else					land_percent 3
		endif
		number_of_clumps rnd(2,4)
		set_scale_by_groups
	}
else
	create_terrain LAND_D {
		base_terrain LAND_A
		if MANGROVE_SWAMP_BIOME set_avoid_player_start_areas 30 endif
		spacing_to_other_terrain_types 0
		if WATER_BASED_MAP		land_percent rnd(6,10)
		elseif FOREST_BASED_MAP	land_percent rnd(7,11)
		else					land_percent rnd(8,12)
		endif
		number_of_clumps rnd(8,12)
		set_scale_by_groups
		if MANGROVE_SWAMP_BIOME
		else terrain_mask 1
		endif
	}
endif

/* mix into center terrain as well */
create_terrain LAND_C {
	base_terrain LAND_X
	spacing_to_other_terrain_types 0
	land_percent rnd(3,6)
	number_of_clumps rnd(5,15)
	set_scale_by_groups
	terrain_mask 1
}
create_terrain LAND_D {
	base_terrain LAND_X
	spacing_to_other_terrain_types 0
	land_percent 1
	number_of_clumps rnd(3,9)
	set_scale_by_groups
	terrain_mask 1
}
create_terrain LAND_B {
	base_terrain LAND_X
	spacing_to_other_terrain_types 0
	land_percent 1
	number_of_clumps rnd(3,9)
	set_scale_by_groups
	terrain_mask 1
}
create_terrain LAND_A {
	base_terrain LAND_X
	spacing_to_other_terrain_types 0
	land_percent 1
	number_of_clumps rnd(3,9)
	set_scale_by_groups
	terrain_mask 1
}


/* decide whether or not to use water terrain masking */
if MANGROVE_SWAMP_BIOME						#define NO_WATER_MASKING
elseif SWAMP								#define NO_WATER_MASKING
elseif FREEZE_PRIMARY_WATER					#define NO_WATER_MASKING
elseif FREEZE_PRIMARY_AND_SECONDARY_WATER	#define NO_WATER_MASKING
elseif WATER_IS_DRY							#define NO_WATER_MASKING
else	/* usually use water masking */
	start_random
		percent_chance 9	#define NO_WATER_MASKING
	end_random
endif

if WASTELAND_BIOME
else
	start_random
		percent_chance 24	#define DE_PERFECT_WATER
	end_random
endif

/* water mixing */
if NO_WATER_MASKING	/* standard aoc water mixing */
	create_terrain WATER_B {
		base_terrain WATER_A
		number_of_clumps rnd(8,12)
		spacing_to_other_terrain_types 2
		land_percent rnd(35,45)
		set_scale_by_groups
	}
	create_terrain WATER_B {
		base_terrain WATER_A
		number_of_clumps rnd(25,35)
		spacing_to_other_terrain_types 1
		land_percent rnd(1,2)
		set_scale_by_groups
	}
	create_terrain WATER_C {
		base_terrain WATER_B
		number_of_clumps rnd(6,10)
		spacing_to_other_terrain_types 3
		land_percent rnd(18,22)
		set_scale_by_groups
	}
	create_terrain WATER_C {
		base_terrain WATER_B
		number_of_clumps rnd(25,35)
		spacing_to_other_terrain_types 1
		land_percent rnd(1,2)
		set_scale_by_groups
	}
	create_terrain WATER_B {
		base_terrain WATER_C
		number_of_clumps rnd(25,35)
		spacing_to_other_terrain_types 1
		land_percent rnd(1,2)
		set_scale_by_groups
	}
	create_terrain WATER_A {
		base_terrain WATER_B
		number_of_clumps rnd(25,35)
		spacing_to_other_terrain_types 1
		land_percent rnd(1,2)
		set_scale_by_groups
	}
elseif DE_PERFECT_WATER /* gradual transitions with masking; water only gets deeper, never shallower */
	create_terrain WATER {
		base_terrain DLC_WATER5
		land_percent 100
		number_of_clumps 9320
		terrain_mask 1
		spacing_to_other_terrain_types 1
	}
	create_terrain WATER {
		base_terrain DLC_WATER5
		land_percent 100
		number_of_clumps 9320
		spacing_to_other_terrain_types 2
	}
	create_terrain MED_WATER {
		base_terrain WATER
		land_percent 100
		number_of_clumps 9320
		terrain_mask 1
		spacing_to_other_terrain_types 1
	}
	create_terrain MED_WATER {
		base_terrain WATER
		land_percent 100
		number_of_clumps 9320
		spacing_to_other_terrain_types 2
	}
	create_terrain DEEP_WATER {
		base_terrain MED_WATER
		land_percent 100
		number_of_clumps 9320
		spacing_to_other_terrain_types 1
		terrain_mask 1
	}
	create_terrain DEEP_WATER {
		base_terrain MED_WATER
		land_percent 100
		number_of_clumps 9320
		spacing_to_other_terrain_types 2
	}
	create_terrain DLC_WATER4 {
		base_terrain DEEP_WATER
		land_percent 100
		number_of_clumps 9320
		spacing_to_other_terrain_types 1
		terrain_mask 1
	}
	create_terrain DLC_WATER4 {
		base_terrain DEEP_WATER
		land_percent 100
		number_of_clumps 9320
		spacing_to_other_terrain_types 2
	}	
else /* use the new DE mixing with masking */
	create_terrain WATER_B {
		base_terrain WATER_A
		number_of_clumps rnd(8,12)
		spacing_to_other_terrain_types 2
		land_percent rnd(35,45)
		set_scale_by_groups
	}
	create_terrain WATER_B {
		base_terrain WATER_A
		number_of_clumps rnd(25,35)
		spacing_to_other_terrain_types 1
		land_percent rnd(1,2)
		set_scale_by_groups
	}
	create_terrain WATER_C {
		base_terrain WATER_B
		number_of_clumps 1000
		spacing_to_other_terrain_types 3
		land_percent 100
	}
	create_terrain WATER_A {
		base_terrain WATER_B
		number_of_clumps 1000
		spacing_to_other_terrain_types 0
		land_percent 100
		terrain_mask 2
	}
	create_terrain WATER_B {
		base_terrain WATER_C
		number_of_clumps 1000
		spacing_to_other_terrain_types 0
		land_percent 100
	}
	create_terrain WATER_B {
		base_terrain WATER_C
		number_of_clumps 1000
		spacing_to_other_terrain_types 0
		land_percent 100
	}
	create_terrain WATER_C {
		base_terrain WATER_B
		number_of_clumps rnd(10,14)
		spacing_to_other_terrain_types 3
		land_percent rnd(18,22)
	}
	create_terrain WATER_C {
		base_terrain WATER_C
		number_of_clumps rnd(4,8)
		spacing_to_other_terrain_types 9
		land_percent rnd(1,3)
	}
	create_terrain WATER_B {
		base_terrain WATER_C
		number_of_clumps 1000
		spacing_to_other_terrain_types 0
		land_percent 100
		terrain_mask 2
	}
	create_terrain WATER_B {
		base_terrain WATER_C
		number_of_clumps 1000
		spacing_to_other_terrain_types 0
		land_percent 100
		terrain_mask 2
	}
endif

/* cosmetic addition of brown or green water */

if NO_WATER_MASKING
else
	start_random 
		percent_chance 49	#const WATER_MASK 95
		percent_chance 1	#const WATER_MASK 96
		percent_chance 49	#define NO_GREEN_BROWN_MASKING
	end_random
endif


if NO_GREEN_BROWN_MASKING
else
	create_terrain WATER_MASK {
		base_terrain WATER
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
	create_terrain WATER_MASK {
		base_terrain WATER
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
	create_terrain WATER_MASK {
		base_terrain WATER
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
	create_terrain WATER_MASK {
		base_terrain WATER
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
	create_terrain WATER_MASK {
		base_terrain DLC_WATER5
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
	create_terrain WATER_MASK {
		base_terrain DLC_WATER5
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
	create_terrain WATER_MASK {
		base_terrain DLC_WATER5
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
	create_terrain WATER_MASK {
		base_terrain DLC_WATER5
		land_percent 10
		number_of_clumps 9320
		set_scale_by_groups
		terrain_mask 1
	}
endif

/* cosmetic terrain masking to make large navigable ice more apparent as such */
create_terrain WATER {
	base_terrain ICE_SHALLOWS
	number_of_clumps 9320
	land_percent 100
	terrain_mask 1
}

/* same for muddy shallow */
create_terrain SHALLOW {
	base_terrain MUDDY_SHALLOW
	number_of_clumps 9320
	land_percent 100
	terrain_mask 1
}

/* purely cosmetic mixing of the mangrove shallows terrain */
create_terrain DLC_BOGLAND {
	base_terrain DLC_MANGROVESHALLOW
	land_percent rnd(8,10)
	number_of_clumps rnd(8,10)
	set_scale_by_groups
	terrain_mask 1
}
create_terrain MUDDY_SHALLOW {
	base_layer DLC_BOGLAND
	land_percent 100
	number_of_clumps 9320
	terrain_mask 1
	spacing_to_other_terrain_types 2
}
create_terrain WATER_BROWN {
	base_terrain DLC_MANGROVESHALLOW
	land_percent rnd(8,10)
	number_of_clumps rnd(8,10)
	set_scale_by_groups
	terrain_mask 1
}
create_terrain MUD {
	base_layer WATER_BROWN
	land_percent 100
	number_of_clumps 9320
	terrain_mask 1
	spacing_to_other_terrain_types 1
}
create_terrain WATER_GREEN {
	base_terrain DLC_MANGROVESHALLOW
	land_percent rnd(8,10)
	number_of_clumps rnd(8,10)
	set_scale_by_groups
	terrain_mask 1
}


/* =================================================================================================== */
<CONNECTION_GENERATION>

accumulate_connections

/* what to connect across water */
if SPECIAL_CENTER	#define CONNECT_EVERYTHING_ACROSS_WATER
elseif BATTLE_ROYALE	#define CONNECT_EVERYTHING_ACROSS_WATER
elseif 1_PLAYER_GAME	#define CONNECT_EVERYTHING_ACROSS_WATER
elseif CORNERS_USE_LAND_Z	#define CONNECT_EVERYTHING_ACROSS_WATER
elseif USE_ISLANDS_STYLE
	if BETWEEN_LANDS_x1	#define CONNECT_NOTHING_ACROSS_WATER	#define NO_CONNECTIONS
	elseif FIXED_POSITIONS
		if TEAM_ZONES	#define CONNECT_TEAMS_ACROSS_WATER	#define NO_CONNECTIONS
		elseif INDIVIDUAL_ZONES
			start_random
				percent_chance 19	#define CONNECT_TEAMS_ACROSS_WATER	#define NO_CONNECTIONS
				percent_chance 80	#define CONNECT_NOTHING_ACROSS_WATER	#define NO_CONNECTIONS
			end_random
		endif
	else
		if INDIVIDUAL_ZONES	#define CONNECT_NOTHING_ACROSS_WATER	#define NO_CONNECTIONS
		elseif TEAM_ZONES	#define	CONNECT_PLAYERS_ACROSS_WATER
		endif		
	endif
elseif WATER_BASED_MAP	/* but not islands style */
	if CENTER_IS_WATER	#define CONNECT_PLAYERS_ACROSS_WATER	
	elseif CORNERS_ARE_WATER	#define CONNECT_PLAYERS_ACROSS_WATER
	elseif SIDES_ARE_WATER	#define CONNECT_PLAYERS_ACROSS_WATER
	else
		start_random
			percent_chance 49	#define CONNECT_PLAYERS_ACROSS_WATER
			percent_chance 50	#define CONNECT_EVERYTHING_ACROSS_WATER
		end_random		
	endif
elseif FOREST_BASED_MAP
	if CENTER_IS_WATER	#define CONNECT_PLAYERS_ACROSS_WATER
	else	#define CONNECT_NOTHING_ACROSS_WATER
	endif
elseif LAND_BASED_MAP
	if CENTER_IS_WATER
		start_random
			percent_chance 0	#define CONNECT_EVERYTHING_ACROSS_WATER
			percent_chance 19	#define CONNECT_PLAYERS_ACROSS_WATER
			percent_chance 80	#define CONNECT_NOTHING_ACROSS_WATER
		end_random		
	else	#define CONNECT_NOTHING_ACROSS_WATER
	endif	
endif

/* what to connect across forest */
if SPECIAL_CENTER	#define CONNECT_EVERYTHING_ACROSS_FOREST
elseif BATTLE_ROYALE	#define CONNECT_EVERYTHING_ACROSS_FOREST
elseif 1_PLAYER_GAME	#define CONNECT_EVERYTHING_ACROSS_FOREST
elseif USE_MICHI_STYLE
	if USE_NOMAD_SETUP	#define CONNECT_EVERYTHING_ACROSS_FOREST	/* to prevent isolated villgers */
	elseif BETWEEN_LANDS_x1	#define CONNECT_NOTHING_ACROSS_FOREST	#define NO_CONNECTIONS
	elseif TEAM_ZONES
		if FIXED_POSITIONS	#define CONNECT_TEAMS_ACROSS_FOREST	#define NO_CONNECTIONS
		else	#define CONNECT_PLAYERS_ACROSS_FOREST	/* to make it fair */
		endif
	elseif INDIVIDUAL_ZONES	#define CONNECT_NOTHING_ACROSS_FOREST	#define NO_CONNECTIONS
	endif
elseif FOREST_BASED_MAP	/* but not michi */
	if USE_NOMAD_SETUP	#define CONNECT_EVERYTHING_ACROSS_FOREST	/* to prevent isolated villgers */
	elseif CENTER_IS_FOREST
		if KEEP_CENTER_OPEN	#define CONNECT_EVERYTHING_ACROSS_FOREST
		else	#define CONNECT_PLAYERS_ACROSS_FOREST
		endif
	elseif CORNERS_ARE_FOREST	#define CONNECT_PLAYERS_ACROSS_FOREST
	elseif SIDES_ARE_FOREST	#define CONNECT_PLAYERS_ACROSS_FOREST
	else
		start_random
			percent_chance 79	#define CONNECT_PLAYERS_ACROSS_FOREST
			percent_chance 20	#define CONNECT_EVERYTHING_ACROSS_FOREST
		end_random
	endif
elseif WATER_BASED_MAP
	if CENTER_IS_FOREST	#define CONNECT_EVERYTHING_ACROSS_FOREST
	elseif CORNERS_ARE_FOREST	#define CONNECT_EVERYTHING_ACROSS_FOREST
	elseif SIDES_ARE_FOREST	#define CONNECT_EVERYTHING_ACROSS_FOREST
	else
		start_random
			percent_chance 79	#define CONNECT_PLAYERS_ACROSS_FOREST
			percent_chance 20	#define CONNECT_EVERYTHING_ACROSS_FOREST
		end_random
	endif
elseif LAND_BASED_MAP
	if CENTER_IS_FOREST
		if KEEP_CENTER_OPEN	#define CONNECT_EVERYTHING_ACROSS_FOREST
		else	#define CONNECT_PLAYERS_ACROSS_FOREST
		endif
	elseif CORNERS_ARE_FOREST	#define CONNECT_PLAYERS_ACROSS_FOREST
	elseif SIDES_ARE_FOREST	#define CONNECT_PLAYERS_ACROSS_FOREST
	else
		start_random
			percent_chance 79	#define CONNECT_PLAYERS_ACROSS_FOREST
			percent_chance 20	#define CONNECT_EVERYTHING_ACROSS_FOREST
		end_random
	endif
endif

if 36x36 if CONNECT_EVERYTHING_ACROSS_FOREST	#define CONNECT_PLAYERS_ACROSS_FOREST endif endif

/* roads when teamates are next to eachother and already connected */
if USE_NOMAD_SETUP
elseif BATTLE_ROYALE
elseif BETWEEN_LANDS_x1
elseif BETWEEN_LANDS_x8
elseif FIXED_POSITIONS
	if WATER_BASED_MAP
		if CONNECT_TEAMS_ACROSS_WATER	#define CREATE_ROADS
		elseif CONNECT_PLAYERS_ACROSS_WATER	#define CREATE_ROADS
		elseif CONNECT_EVERYTHING_ACROSS_WATER	#define CREATE_ROADS
		endif
	elseif FOREST_BASED_MAP
		if CONNECT_TEAMS_ACROSS_FOREST	#define CREATE_ROADS
		elseif CONNECT_PLAYERS_ACROSS_FOREST	#define CREATE_ROADS
		elseif CONNECT_EVERYTHING_ACROSS_FOREST	#define CREATE_ROADS
		endif
	elseif LAND_BASED_MAP	#define CREATE_ROADS
	endif
endif

/*
water
standard 3
wide 6
very wide 12
ultra wide 24

forest
standard 5
wide 10
very wide 15
ultra wide 20
other terrains 
standard 2
wide 8
very wide 10
ultra wide 12

*/


if 36x36
	#define STANDARD_W_CONNECTIONS
	#define STANDARD_F_CONNECTIONS
elseif PREFER_WIDER_CONNECTIONS
/* focus on reducing chokepoints and removing excess forests */
	if WATER_BASED_MAP
		if CONNECT_TEAMS_ACROSS_WATER	/* narrow */
			start_random
				percent_chance 49	#define WIDE_W_CONNECTIONS
				percent_chance 50	#define VERY_WIDE_W_CONNECTIONS
			end_random
		elseif CONNECT_PLAYERS_ACROSS_WATER	/* wide */
			if 2_PLAYER_GAME
				start_random
					percent_chance 49	#define VERY_WIDE_W_CONNECTIONS
					percent_chance 50	#define ULTRA_WIDE_W_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 44	#define WIDE_W_CONNECTIONS
					percent_chance 45	#define VERY_WIDE_W_CONNECTIONS
					percent_chance 10	#define ULTRA_WIDE_W_CONNECTIONS
				end_random
			elseif 5+PLAYERS
				start_random
					percent_chance 49	#define WIDE_W_CONNECTIONS
					percent_chance 50	#define VERY_WIDE_W_CONNECTIONS
				end_random
			endif
		elseif CONNECT_EVERYTHING_ACROSS_WATER	/* narrower */
			if 2_PLAYER_GAME
				start_random
					percent_chance 49	#define VERY_WIDE_W_CONNECTIONS
					percent_chance 50	#define ULTRA_WIDE_W_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 49	#define WIDE_W_CONNECTIONS
					percent_chance 50	#define VERY_WIDE_W_CONNECTIONS
				end_random
			elseif 5+PLAYERS	#define WIDE_W_CONNECTIONS
			endif
		endif
		
		/* narrow */
		if 2_PLAYER_GAME	#define WIDE_F_CONNECTIONS
		elseif 4-PLAYERS
			start_random
				percent_chance 49	#define STANDARD_F_CONNECTIONS
				percent_chance 50	#define WIDE_F_CONNECTIONS
			end_random
		elseif 5+PLAYERS	#define STANDARD_F_CONNECTIONS
		endif

	elseif FOREST_BASED_MAP
		/* narrow */
		if 2_PLAYER_GAME	#define WIDE_W_CONNECTIONS
		elseif 4-PLAYERS
			start_random
				percent_chance 49	#define STANDARD_W_CONNECTIONS
				percent_chance 50	#define WIDE_W_CONNECTIONS
			end_random
		elseif 5+PLAYERS	#define STANDARD_W_CONNECTIONS
		endif
		
		if CONNECT_TEAMS_ACROSS_FOREST	/* med */
			start_random
				percent_chance 49	#define WIDE_F_CONNECTIONS
				percent_chance 50	#define VERY_WIDE_F_CONNECTIONS
			end_random
		elseif CONNECT_PLAYERS_ACROSS_FOREST	/* wide */
			if 2_PLAYER_GAME	#define ULTRA_WIDE_F_CONNECTIONS
			elseif 4-PLAYERS
				start_random
					percent_chance 49	#define VERY_WIDE_F_CONNECTIONS
					percent_chance 50	#define ULTRA_WIDE_F_CONNECTIONS
				end_random		
			elseif 5+PLAYERS
				start_random
					percent_chance 49	#define WIDE_F_CONNECTIONS
					percent_chance 50	#define VERY_WIDE_F_CONNECTIONS
				end_random			
			endif
		elseif CONNECT_EVERYTHING_ACROSS_FOREST	/* med to narrow */
			if 2_PLAYER_GAME
				start_random
					percent_chance 49	#define VERY_WIDE_F_CONNECTIONS
					percent_chance 50	#define ULTRA_WIDE_F_CONNECTIONS
				end_random	
			elseif 4-PLAYERS
				start_random
					percent_chance 49	#define WIDE_F_CONNECTIONS
					percent_chance 50	#define VERY_WIDE_F_CONNECTIONS
				end_random
			elseif 5+PLAYERS	#define WIDE_F_CONNECTIONS
			endif
		endif
	
	elseif LAND_BASED_MAP
		/* narrow */
		if 2_PLAYER_GAME
			start_random
				percent_chance 49	#define WIDE_W_CONNECTIONS
				percent_chance 50	#define VERY_WIDE_W_CONNECTIONS
			end_random
		else
			start_random
				percent_chance 49	#define STANDARD_W_CONNECTIONS
				percent_chance 50	#define WIDE_W_CONNECTIONS
			end_random
		endif
	
		if CONNECT_TEAMS_ACROSS_FOREST	/* med */
			start_random
				percent_chance 49	#define WIDE_F_CONNECTIONS
				percent_chance 50	#define VERY_WIDE_F_CONNECTIONS
			end_random
		elseif CONNECT_PLAYERS_ACROSS_FOREST	/* med */
			if 2_PLAYER_GAME
				start_random
					percent_chance 49	#define VERY_WIDE_F_CONNECTIONS
					percent_chance 50	#define ULTRA_WIDE_F_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 49	#define WIDE_F_CONNECTIONS
					percent_chance 50	#define VERY_WIDE_F_CONNECTIONS
				end_random
			elseif 5+PLAYERS	#define WIDE_F_CONNECTIONS
			endif
		elseif CONNECT_EVERYTHING_ACROSS_FOREST	/* varied */
			if 2_PLAYER_GAME
				start_random
					percent_chance 49	#define WIDE_F_CONNECTIONS
					percent_chance 50	#define VERY_WIDE_F_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 49	#define STANDARD_F_CONNECTIONS
					percent_chance 50	#define WIDE_F_CONNECTIONS
				end_random
			elseif 5+PLAYERS	#define STANDARD_F_CONNECTIONS
			endif
		endif
	endif

else
	if WATER_BASED_MAP
		if CONNECT_TEAMS_ACROSS_WATER	/* narrow */
			start_random
				percent_chance 44	#define STANDARD_W_CONNECTIONS
				percent_chance 45	#define WIDE_W_CONNECTIONS
				percent_chance 50	#define VERY_WIDE_W_CONNECTIONS 
			end_random
		elseif CONNECT_PLAYERS_ACROSS_WATER	/* wide */
			if 2_PLAYER_GAME
				start_random
					percent_chance 19	#define STANDARD_W_CONNECTIONS
					percent_chance 40	#define WIDE_W_CONNECTIONS
					percent_chance 30	#define VERY_WIDE_W_CONNECTIONS
					percent_chance 10	#define ULTRA_WIDE_W_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 39	#define STANDARD_W_CONNECTIONS
					percent_chance 40	#define WIDE_W_CONNECTIONS
					percent_chance 15	#define VERY_WIDE_W_CONNECTIONS
					percent_chance 5	#define ULTRA_WIDE_W_CONNECTIONS
				end_random
			elseif 5+PLAYERS
				start_random
					percent_chance 44	#define STANDARD_W_CONNECTIONS
					percent_chance 45	#define WIDE_W_CONNECTIONS
					percent_chance 10	#define VERY_WIDE_W_CONNECTIONS
				end_random
			endif
		elseif CONNECT_EVERYTHING_ACROSS_WATER	/* narrower */
			start_random
				percent_chance 44	#define STANDARD_W_CONNECTIONS
				percent_chance 45	#define WIDE_W_CONNECTIONS
				percent_chance 9	#define VERY_WIDE_W_CONNECTIONS
				percent_chance 1	#define ULTRA_WIDE_W_CONNECTIONS
			end_random
		endif
		
		/* narrow */
		if 5+PLAYERS	#define STANDARD_F_CONNECTIONS
		else
			start_random
				percent_chance 49	#define STANDARD_F_CONNECTIONS
				percent_chance 50	#define WIDE_F_CONNECTIONS
			end_random
		endif

	elseif FOREST_BASED_MAP
		/* narrow */
		if 5+PLAYERS	#define STANDARD_W_CONNECTIONS
		else
			start_random
				percent_chance 49	#define STANDARD_W_CONNECTIONS
				percent_chance 50	#define WIDE_W_CONNECTIONS
			end_random
		endif
		
		if CONNECT_TEAMS_ACROSS_FOREST	/* med */
			start_random
				percent_chance 44	#define STANDARD_F_CONNECTIONS
				percent_chance 45	#define WIDE_F_CONNECTIONS
				percent_chance 10	#define VERY_WIDE_F_CONNECTIONS
			end_random
		elseif CONNECT_PLAYERS_ACROSS_FOREST	/* wide */
			if 2_PLAYER_GAME
				start_random
					percent_chance 19	#define STANDARD_F_CONNECTIONS
					percent_chance 40	#define WIDE_F_CONNECTIONS
					percent_chance 30	#define VERY_WIDE_F_CONNECTIONS
					percent_chance 10	#define ULTRA_WIDE_F_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 29	#define STANDARD_F_CONNECTIONS
					percent_chance 40	#define WIDE_F_CONNECTIONS
					percent_chance 25	#define VERY_WIDE_F_CONNECTIONS
					percent_chance 5	#define ULTRA_WIDE_F_CONNECTIONS
				end_random		
			elseif 5+PLAYERS
				start_random
					percent_chance 44	#define STANDARD_F_CONNECTIONS
					percent_chance 45	#define WIDE_F_CONNECTIONS
					percent_chance 10	#define VERY_WIDE_F_CONNECTIONS
				end_random			
			endif
		elseif CONNECT_EVERYTHING_ACROSS_FOREST	/* med to narrow */
			start_random
				percent_chance 49	#define STANDARD_F_CONNECTIONS
				percent_chance 50	#define WIDE_F_CONNECTIONS
			end_random
		endif
	
	elseif LAND_BASED_MAP
		/* narrow */
		start_random
			percent_chance 49	#define STANDARD_W_CONNECTIONS
			percent_chance 50	#define WIDE_W_CONNECTIONS
		end_random
	
		if CONNECT_TEAMS_ACROSS_FOREST	/* med */
			start_random
				percent_chance 49	#define STANDARD_F_CONNECTIONS
				percent_chance 50	#define WIDE_F_CONNECTIONS
			end_random
		elseif CONNECT_PLAYERS_ACROSS_FOREST	/* med */
			if 2_PLAYER_GAME
				start_random
					percent_chance 19	#define STANDARD_F_CONNECTIONS
					percent_chance 40	#define WIDE_F_CONNECTIONS
					percent_chance 30	#define VERY_WIDE_F_CONNECTIONS
					percent_chance 10	#define ULTRA_WIDE_F_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 49	#define STANDARD_F_CONNECTIONS
					percent_chance 40	#define WIDE_F_CONNECTIONS
					percent_chance 10	#define VERY_WIDE_F_CONNECTIONS
				end_random
			elseif 5+PLAYERS
				start_random
					percent_chance 44	#define STANDARD_F_CONNECTIONS
					percent_chance 45	#define WIDE_F_CONNECTIONS
					percent_chance 10	#define VERY_WIDE_F_CONNECTIONS
				end_random
			endif
		elseif CONNECT_EVERYTHING_ACROSS_FOREST	/* varied */
			if 2_PLAYER_GAME
				start_random
					percent_chance 29	#define STANDARD_F_CONNECTIONS
					percent_chance 40	#define WIDE_F_CONNECTIONS
					percent_chance 30	#define VERY_WIDE_F_CONNECTIONS
				end_random
			elseif 4-PLAYERS
				start_random
					percent_chance 59	#define STANDARD_F_CONNECTIONS
					percent_chance 40	#define WIDE_F_CONNECTIONS
				end_random
			elseif 5+PLAYERS	#define STANDARD_F_CONNECTIONS
			endif
		endif
	endif
endif

if CORNER_LANDS	if CONNECT_EVERYTHING_ACROSS_FOREST	#define DONT_WIDEN_F_CONNECTIONS	endif	endif
if SIDE_LANDS	if CONNECT_EVERYTHING_ACROSS_FOREST	#define DONT_WIDEN_F_CONNECTIONS	endif	endif
if 36x36	#define DONT_WIDEN_F_CONNECTIONS	endif
if 5+PLAYERS if PREFER_WIDER_CONNECTIONS else #define DONT_WIDEN_F_CONNECTIONS endif endif
if 5+PLAYERS if KEEP_CENTER_OPEN else #define DONT_WIDEN_F_CONNECTIONS endif endif
if BETWEEN_LANDS_x8	#define DONT_WIDEN_F_CONNECTIONS endif

if DONT_WIDEN_F_CONNECTIONS
else
	#define	WIDEN_F_CONNECTIONS
endif

if WATER_BASED_MAP
	#define WIDEN_W_CONNECTIONS
endif


/* water connections */
if CONNECT_NOTHING_ACROSS_WATER
else
if CONNECT_TEAMS_ACROSS_WATER	create_connect_teams_lands
elseif CONNECT_PLAYERS_ACROSS_WATER	create_connect_all_players_land
elseif CONNECT_EVERYTHING_ACROSS_WATER	create_connect_all_lands
endif
{
replace_terrain WATER SHALLOWS_A
replace_terrain WATER_NOBEACH SHALLOWS_A
replace_terrain MED_WATER SHALLOWS_A
replace_terrain DEEP_WATER SHALLOWS_A
replace_terrain DLC_WATER5 SHALLOWS_A
replace_terrain DLC_WATER4 SHALLOWS_A
replace_terrain WATER_GREEN SHALLOWS_A
replace_terrain WATER_BROWN SHALLOWS_A

if SPECIAL_CENTER	/* straight connections to center */
else
	terrain_cost WATER 3
	terrain_cost WATER_NOBEACH 3
	terrain_cost MED_WATER 4
	terrain_cost DEEP_WATER 5
	terrain_cost CLIFF_GRASS 999
	terrain_cost DLC_WATER5 3
	terrain_cost DLC_WATER4 5
	terrain_cost WATER_GREEN 3
	terrain_cost WATER_BROWN 3
endif

if STANDARD_W_CONNECTIONS
	terrain_size WATER 3 0  
	terrain_size WATER_NOBEACH 3 0
	terrain_size MED_WATER 3 0
	terrain_size DEEP_WATER 3 0
	terrain_size DLC_WATER5 3 0
	terrain_size DLC_WATER4 3 0
	terrain_size WATER_GREEN 3 0
	terrain_size WATER_BROWN 3 0
elseif WIDE_W_CONNECTIONS
	terrain_size WATER 6 0  
	terrain_size WATER_NOBEACH 6 0
	terrain_size MED_WATER 6 0
	terrain_size DEEP_WATER 6 0
	terrain_size DLC_WATER5 6 0
	terrain_size DLC_WATER4 6 0
	terrain_size WATER_GREEN 6 0
	terrain_size WATER_BROWN 6 0
elseif VERY_WIDE_W_CONNECTIONS
	terrain_size WATER 12 0  
	terrain_size WATER_NOBEACH 12 0
	terrain_size MED_WATER 12 0
	terrain_size DEEP_WATER 12 0
	terrain_size DLC_WATER5 12 0
	terrain_size DLC_WATER4 12 0
	terrain_size WATER_GREEN 12 0
	terrain_size WATER_BROWN 12 0
elseif ULTRA_WIDE_W_CONNECTIONS
	terrain_size WATER 24 0
	terrain_size WATER_NOBEACH 24 0
	terrain_size MED_WATER 24 0
	terrain_size DEEP_WATER 24 0
	terrain_size DLC_WATER5 24 0
	terrain_size DLC_WATER4 24 0
	terrain_size WATER_GREEN 24 0
	terrain_size WATER_BROWN 24 0
endif

if WIDEN_W_CONNECTIONS
if WIDE_W_CONNECTIONS
	terrain_size BAMBOO 8 0    
	terrain_size FOREST 8 0
	terrain_size OAK_FOREST 8 0
	terrain_size JUNGLE 8 0
	terrain_size PALM_DESERT 8 0
	terrain_size PINE_FOREST 8 0
	terrain_size SNOW_FOREST 8 0
	terrain_size DLC_DRAGONFOREST 8 0
	terrain_size DLC_BAOBABFOREST 8 0
	terrain_size DLC_ACACIAFOREST 8 0
	terrain_size DLC_MANGROVEFOREST 8 0
	terrain_size DLC_RAINFOREST 8 0
	terrain_size MEDITERRANEAN_FOREST 8 0
	terrain_size BUSH_FOREST 8 0
	terrain_size REED_FOREST_SHALLOWS 8 0
	terrain_size DLC_REEDSBEACH 8 0
	terrain_size REED_FOREST 8 0
	terrain_size DLC_FORESTAUTUMN 8 0
	terrain_size DLC_FORESTSNOWAUTUMN 8 0
	terrain_size DLC_FORESTDEAD 8 0
	terrain_size BIRCH_FOREST 8 0
	terrain_size PALM_FOREST 8 0

	terrain_size BEACH 8 0
	terrain_size ICYSHORE 8 0
	terrain_size DIRT 8 0
	terrain_size DIRT2 8 0
	terrain_size DIRT_GRASS_FOUNDATION 8 0
	terrain_size DIRT3 8 0
	terrain_size DIRT_SNOW 8 0
	terrain_size DIRT_SNOW_FOUNDATION 8 0
	terrain_size DESERT 8 0
	terrain_size FARM1 8 0
	terrain_size FARM2 8 0
	terrain_size FARM3 8 0
	terrain_size FARM_PLANTED 8 0
	terrain_size FARM_DEAD 8 0
	terrain_size LEAVES 8 0
	terrain_size GRASS 8 0
	terrain_size CLIFF_GRASS 8 0
	terrain_size GRASS2 8 0
	terrain_size GRASS3 8 0
	terrain_size GRASS_SNOW 8 0
	terrain_size ICE 8 0
	terrain_size ICE_SHALLOWS 8 0
	terrain_size ROAD 8 0
	terrain_size DLC_ROCK 8 0
	terrain_size ROAD2 8 0
	terrain_size ROAD_SNOW 8 0
	terrain_size ROAD_FUNGUS 8 0
	terrain_size SHALLOW 8 0
	terrain_size SNOW 8 0
	terrain_size WATER_WALKABLE 8 0
	terrain_size DLC_SAVANNAH 8 0
	terrain_size DLC_DIRT4 8 0
	terrain_size DLC_DRYROAD 8 0
	terrain_size DLC_MOORLAND 8 0
	terrain_size DLC_CRACKED 8 0
	terrain_size DLC_QUICKSAND 8 0
	terrain_size DLC_BLACK 8 0
	terrain_size DLC_BEACH2 8 0
	terrain_size DLC_BEACH3 8 0
	terrain_size DLC_BEACH4 8 0
	terrain_size DLC_MANGROVESHALLOW 8 0
	terrain_size DLC_NEWSHALLOW 8 0
	terrain_size DLC_JUNGLEGRASS 8 0
	terrain_size DLC_JUNGLEROAD 8 0
	terrain_size DLC_JUNGLELEAVES 8 0
	terrain_size RICE_FARM1 8 0
	terrain_size RICE_FARM2 8 0
	terrain_size RICE_FARM3 8 0
	terrain_size RICE_FARM_PLANTED 8 0
	terrain_size RICE_FARM_DEAD 8 0
	terrain_size GRAVEL 8 0
	terrain_size UNDERBRUSH_LEAVES 8 0
	terrain_size SNOW_UNDERBRUSH 8 0
	terrain_size SNOW_LIGHT 8 0
	terrain_size SNOW_HEAVY 8 0
	terrain_size ROAD_FUNGUS_NEW 8 0
	terrain_size MUD 8 0
	terrain_size UNDERBRUSH_JUNGLE 8 0
	terrain_size ROAD_GRAVEL_NEW 8 0
	terrain_size BEACH_BUILDABLE 8 0
	terrain_size WET_BEACH_BUILDABLE 8 0
	terrain_size WET_GRAVEL_BUILDABLE 8 0
	terrain_size WET_ROCK_BUILDABLE 8 0
	terrain_size JUNGLE_GRASS_NEW 8 0
	terrain_size DLC_DRYGRASS 8 0
	terrain_size DLC_BOGLAND 8 0
	terrain_size DLC_DESERTGRAVEL 8 0
	terrain_size DLC_ROADGRAVEL 8 0
	terrain_size DLC_WETBEACH 8 0
	terrain_size DLC_GRAVELBEACH 8 0
	terrain_size DLC_WETROCKBEACH 8 0
	terrain_size MUDDY_SHALLOW 8 0
elseif VERY_WIDE_W_CONNECTIONS
	terrain_size BAMBOO 10 0    
	terrain_size FOREST 10 0
	terrain_size OAK_FOREST 10 0
	terrain_size JUNGLE 10 0
	terrain_size PALM_DESERT 10 0
	terrain_size PINE_FOREST 10 0
	terrain_size SNOW_FOREST 10 0
	terrain_size DLC_DRAGONFOREST 10 0
	terrain_size DLC_BAOBABFOREST 10 0
	terrain_size DLC_ACACIAFOREST 10 0
	terrain_size DLC_MANGROVEFOREST 10 0
	terrain_size DLC_RAINFOREST 10 0
	terrain_size MEDITERRANEAN_FOREST 10 0
	terrain_size BUSH_FOREST 10 0
	terrain_size REED_FOREST_SHALLOWS 10 0
	terrain_size DLC_REEDSBEACH 10 0
	terrain_size REED_FOREST 10 0
	terrain_size DLC_FORESTAUTUMN 10 0
	terrain_size DLC_FORESTSNOWAUTUMN 10 0
	terrain_size DLC_FORESTDEAD 10 0
	terrain_size BIRCH_FOREST 10 0
	terrain_size PALM_FOREST 10 0

	terrain_size BEACH 10 0
	terrain_size ICYSHORE 10 0
	terrain_size DIRT 10 0
	terrain_size DIRT2 10 0
	terrain_size DIRT_GRASS_FOUNDATION 10 0
	terrain_size DIRT3 10 0
	terrain_size DIRT_SNOW 10 0
	terrain_size DIRT_SNOW_FOUNDATION 10 0
	terrain_size DESERT 10 0
	terrain_size FARM1 10 0
	terrain_size FARM2 10 0
	terrain_size FARM3 10 0
	terrain_size FARM_PLANTED 10 0
	terrain_size FARM_DEAD 10 0
	terrain_size LEAVES 10 0
	terrain_size GRASS 10 0
	terrain_size CLIFF_GRASS 10 0
	terrain_size GRASS2 10 0
	terrain_size GRASS3 10 0
	terrain_size GRASS_SNOW 10 0
	terrain_size ICE 10 0
	terrain_size ICE_SHALLOWS 10 0
	terrain_size ROAD 10 0
	terrain_size DLC_ROCK 10 0
	terrain_size ROAD2 10 0
	terrain_size ROAD_SNOW 10 0
	terrain_size ROAD_FUNGUS 10 0
	terrain_size SHALLOW 10 0
	terrain_size SNOW 10 0
	terrain_size WATER_WALKABLE 10 0
	terrain_size DLC_SAVANNAH 10 0
	terrain_size DLC_DIRT4 10 0
	terrain_size DLC_DRYROAD 10 0
	terrain_size DLC_MOORLAND 10 0
	terrain_size DLC_CRACKED 10 0
	terrain_size DLC_QUICKSAND 10 0
	terrain_size DLC_BLACK 10 0
	terrain_size DLC_BEACH2 10 0
	terrain_size DLC_BEACH3 10 0
	terrain_size DLC_BEACH4 10 0
	terrain_size DLC_MANGROVESHALLOW 10 0
	terrain_size DLC_NEWSHALLOW 10 0
	terrain_size DLC_JUNGLEGRASS 10 0
	terrain_size DLC_JUNGLEROAD 10 0
	terrain_size DLC_JUNGLELEAVES 10 0
	terrain_size RICE_FARM1 10 0
	terrain_size RICE_FARM2 10 0
	terrain_size RICE_FARM3 10 0
	terrain_size RICE_FARM_PLANTED 10 0
	terrain_size RICE_FARM_DEAD 10 0
	terrain_size GRAVEL 10 0
	terrain_size UNDERBRUSH_LEAVES 10 0
	terrain_size SNOW_UNDERBRUSH 10 0
	terrain_size SNOW_LIGHT 10 0
	terrain_size SNOW_HEAVY 10 0
	terrain_size ROAD_FUNGUS_NEW 10 0
	terrain_size MUD 10 0
	terrain_size UNDERBRUSH_JUNGLE 10 0
	terrain_size ROAD_GRAVEL_NEW 10 0
	terrain_size BEACH_BUILDABLE 10 0
	terrain_size WET_BEACH_BUILDABLE 10 0
	terrain_size WET_GRAVEL_BUILDABLE 10 0
	terrain_size WET_ROCK_BUILDABLE 10 0
	terrain_size JUNGLE_GRASS_NEW 10 0
	terrain_size DLC_DRYGRASS 10 0
	terrain_size DLC_BOGLAND 10 0
	terrain_size DLC_DESERTGRAVEL 10 0
	terrain_size DLC_ROADGRAVEL 10 0
	terrain_size DLC_WETBEACH 10 0
	terrain_size DLC_GRAVELBEACH 10 0
	terrain_size DLC_WETROCKBEACH 10 0
	terrain_size MUDDY_SHALLOW 10 0
elseif ULTRA_WIDE_W_CONNECTIONS
	terrain_size BAMBOO 12 0    
	terrain_size FOREST 12 0
	terrain_size OAK_FOREST 12 0
	terrain_size JUNGLE 12 0
	terrain_size PALM_DESERT 12 0
	terrain_size PINE_FOREST 12 0
	terrain_size SNOW_FOREST 12 0
	terrain_size DLC_DRAGONFOREST 12 0
	terrain_size DLC_BAOBABFOREST 12 0
	terrain_size DLC_ACACIAFOREST 12 0
	terrain_size DLC_MANGROVEFOREST 12 0
	terrain_size DLC_RAINFOREST 12 0
	terrain_size MEDITERRANEAN_FOREST 12 0
	terrain_size BUSH_FOREST 12 0
	terrain_size REED_FOREST_SHALLOWS 12 0
	terrain_size DLC_REEDSBEACH 12 0
	terrain_size REED_FOREST 12 0
	terrain_size DLC_FORESTAUTUMN 12 0
	terrain_size DLC_FORESTSNOWAUTUMN 12 0
	terrain_size DLC_FORESTDEAD 12 0
	terrain_size BIRCH_FOREST 12 0
	terrain_size PALM_FOREST 12 0

	terrain_size BEACH 12 0
	terrain_size ICYSHORE 12 0
	terrain_size DIRT 12 0
	terrain_size DIRT2 12 0
	terrain_size DIRT_GRASS_FOUNDATION 12 0
	terrain_size DIRT3 12 0
	terrain_size DIRT_SNOW 12 0
	terrain_size DIRT_SNOW_FOUNDATION 12 0
	terrain_size DESERT 12 0
	terrain_size FARM1 12 0
	terrain_size FARM2 12 0
	terrain_size FARM3 12 0
	terrain_size FARM_PLANTED 12 0
	terrain_size FARM_DEAD 12 0
	terrain_size LEAVES 12 0
	terrain_size GRASS 12 0
	terrain_size CLIFF_GRASS 12 0
	terrain_size GRASS2 12 0
	terrain_size GRASS3 12 0
	terrain_size GRASS_SNOW 12 0
	terrain_size ICE 12 0
	terrain_size ICE_SHALLOWS 12 0
	terrain_size ROAD 12 0
	terrain_size DLC_ROCK 12 0
	terrain_size ROAD2 12 0
	terrain_size ROAD_SNOW 12 0
	terrain_size ROAD_FUNGUS 12 0
	terrain_size SHALLOW 12 0
	terrain_size SNOW 12 0
	terrain_size WATER_WALKABLE 12 0
	terrain_size DLC_SAVANNAH 12 0
	terrain_size DLC_DIRT4 12 0
	terrain_size DLC_DRYROAD 12 0
	terrain_size DLC_MOORLAND 12 0
	terrain_size DLC_CRACKED 12 0
	terrain_size DLC_QUICKSAND 12 0
	terrain_size DLC_BLACK 12 0
	terrain_size DLC_BEACH2 12 0
	terrain_size DLC_BEACH3 12 0
	terrain_size DLC_BEACH4 12 0
	terrain_size DLC_MANGROVESHALLOW 12 0
	terrain_size DLC_NEWSHALLOW 12 0
	terrain_size DLC_JUNGLEGRASS 12 0
	terrain_size DLC_JUNGLEROAD 12 0
	terrain_size DLC_JUNGLELEAVES 12 0
	terrain_size RICE_FARM1 12 0
	terrain_size RICE_FARM2 12 0
	terrain_size RICE_FARM3 12 0
	terrain_size RICE_FARM_PLANTED 12 0
	terrain_size RICE_FARM_DEAD 12 0
	terrain_size GRAVEL 12 0
	terrain_size UNDERBRUSH_LEAVES 12 0
	terrain_size SNOW_UNDERBRUSH 12 0
	terrain_size SNOW_LIGHT 12 0
	terrain_size SNOW_HEAVY 12 0
	terrain_size ROAD_FUNGUS_NEW 12 0
	terrain_size MUD 12 0
	terrain_size UNDERBRUSH_JUNGLE 12 0
	terrain_size ROAD_GRAVEL_NEW 12 0
	terrain_size BEACH_BUILDABLE 12 0
	terrain_size WET_BEACH_BUILDABLE 12 0
	terrain_size WET_GRAVEL_BUILDABLE 12 0
	terrain_size WET_ROCK_BUILDABLE 12 0
	terrain_size JUNGLE_GRASS_NEW 12 0
	terrain_size DLC_DRYGRASS 12 0
	terrain_size DLC_BOGLAND 12 0
	terrain_size DLC_DESERTGRAVEL 12 0
	terrain_size DLC_ROADGRAVEL 12 0
	terrain_size DLC_WETBEACH 12 0
	terrain_size DLC_GRAVELBEACH 12 0
	terrain_size DLC_WETROCKBEACH 12 0
	terrain_size MUDDY_SHALLOW 12 0
else
	terrain_size BAMBOO 2 0    
	terrain_size FOREST 2 0
	terrain_size OAK_FOREST 2 0
	terrain_size JUNGLE 2 0
	terrain_size PALM_DESERT 2 0
	terrain_size PINE_FOREST 2 0
	terrain_size SNOW_FOREST 2 0
	terrain_size DLC_DRAGONFOREST 2 0
	terrain_size DLC_BAOBABFOREST 2 0
	terrain_size DLC_ACACIAFOREST 2 0
	terrain_size DLC_MANGROVEFOREST 2 0
	terrain_size DLC_RAINFOREST 2 0
	terrain_size MEDITERRANEAN_FOREST 2 0
	terrain_size BUSH_FOREST 2 0
	terrain_size REED_FOREST_SHALLOWS 2 0
	terrain_size DLC_REEDSBEACH 2 0
	terrain_size REED_FOREST 2 0
	terrain_size DLC_FORESTAUTUMN 2 0
	terrain_size DLC_FORESTSNOWAUTUMN 2 0
	terrain_size DLC_FORESTDEAD 2 0
	terrain_size BIRCH_FOREST 2 0
	terrain_size PALM_FOREST 2 0

	terrain_size BEACH 2 0
	terrain_size ICYSHORE 2 0
	terrain_size DIRT 2 0
	terrain_size DIRT2 2 0
	terrain_size DIRT_GRASS_FOUNDATION 2 0
	terrain_size DIRT3 2 0
	terrain_size DIRT_SNOW 2 0
	terrain_size DIRT_SNOW_FOUNDATION 2 0
	terrain_size DESERT 2 0
	terrain_size FARM1 2 0
	terrain_size FARM2 2 0
	terrain_size FARM3 2 0
	terrain_size FARM_PLANTED 2 0
	terrain_size FARM_DEAD 2 0
	terrain_size LEAVES 2 0
	terrain_size GRASS 2 0
	terrain_size CLIFF_GRASS 2 0
	terrain_size GRASS2 2 0
	terrain_size GRASS3 2 0
	terrain_size GRASS_SNOW 2 0
	terrain_size ICE 2 0
	terrain_size ICE_SHALLOWS 2 0
	terrain_size ROAD 2 0
	terrain_size DLC_ROCK 2 0
	terrain_size ROAD2 2 0
	terrain_size ROAD_SNOW 2 0
	terrain_size ROAD_FUNGUS 2 0
	terrain_size SHALLOW 2 0
	terrain_size SNOW 2 0
	terrain_size WATER_WALKABLE 2 0
	terrain_size DLC_SAVANNAH 2 0
	terrain_size DLC_DIRT4 2 0
	terrain_size DLC_DRYROAD 2 0
	terrain_size DLC_MOORLAND 2 0
	terrain_size DLC_CRACKED 2 0
	terrain_size DLC_QUICKSAND 2 0
	terrain_size DLC_BLACK 2 0
	terrain_size DLC_BEACH2 2 0
	terrain_size DLC_BEACH3 2 0
	terrain_size DLC_BEACH4 2 0
	terrain_size DLC_MANGROVESHALLOW 2 0
	terrain_size DLC_NEWSHALLOW 2 0
	terrain_size DLC_JUNGLEGRASS 2 0
	terrain_size DLC_JUNGLEROAD 2 0
	terrain_size DLC_JUNGLELEAVES 2 0
	terrain_size RICE_FARM1 2 0
	terrain_size RICE_FARM2 2 0
	terrain_size RICE_FARM3 2 0
	terrain_size RICE_FARM_PLANTED 2 0
	terrain_size RICE_FARM_DEAD 2 0
	terrain_size GRAVEL 2 0
	terrain_size UNDERBRUSH_LEAVES 2 0
	terrain_size SNOW_UNDERBRUSH 2 0
	terrain_size SNOW_LIGHT 2 0
	terrain_size SNOW_HEAVY 2 0
	terrain_size ROAD_FUNGUS_NEW 2 0
	terrain_size MUD 2 0
	terrain_size UNDERBRUSH_JUNGLE 2 0
	terrain_size ROAD_GRAVEL_NEW 2 0
	terrain_size BEACH_BUILDABLE 2 0
	terrain_size WET_BEACH_BUILDABLE 2 0
	terrain_size WET_GRAVEL_BUILDABLE 2 0
	terrain_size WET_ROCK_BUILDABLE 2 0
	terrain_size JUNGLE_GRASS_NEW 2 0
	terrain_size DLC_DRYGRASS 2 0
	terrain_size DLC_BOGLAND 2 0
	terrain_size DLC_DESERTGRAVEL 2 0
	terrain_size DLC_ROADGRAVEL 2 0
	terrain_size DLC_WETBEACH 2 0
	terrain_size DLC_GRAVELBEACH 2 0
	terrain_size DLC_WETROCKBEACH 2 0
	terrain_size MUDDY_SHALLOW 2 0
endif
endif

}
endif

/* forest connections */
if CONNECT_NOTHING_ACROSS_FOREST
else
if CONNECT_TEAMS_ACROSS_FOREST	create_connect_teams_lands
elseif CONNECT_PLAYERS_ACROSS_FOREST	create_connect_all_players_land
elseif CONNECT_EVERYTHING_ACROSS_FOREST	create_connect_all_lands
endif
{
replace_terrain BAMBOO LEAVES
replace_terrain FOREST LEAVES
replace_terrain OAK_FOREST LEAVES
replace_terrain JUNGLE LEAVES
replace_terrain PALM_DESERT DESERT
replace_terrain PINE_FOREST LEAVES
replace_terrain SNOW_FOREST SNOW_UNDERBRUSH
replace_terrain DLC_DRAGONFOREST DIRT
replace_terrain DLC_BAOBABFOREST DLC_DIRT4
replace_terrain DLC_ACACIAFOREST DLC_SAVANNAH
replace_terrain DLC_MANGROVEFOREST DLC_MANGROVESHALLOW
replace_terrain DLC_RAINFOREST DLC_JUNGLELEAVES
replace_terrain MEDITERRANEAN_FOREST UNDERBRUSH_LEAVES
replace_terrain BUSH_FOREST UNDERBRUSH_LEAVES
replace_terrain REED_FOREST_SHALLOWS SHALLOW
replace_terrain DLC_REEDSBEACH DLC_WETBEACH
replace_terrain REED_FOREST UNDERBRUSH_LEAVES
replace_terrain DLC_FORESTAUTUMN UNDERBRUSH_LEAVES
replace_terrain DLC_FORESTSNOWAUTUMN SNOW_UNDERBRUSH
replace_terrain DLC_FORESTDEAD SNOW_UNDERBRUSH
replace_terrain BIRCH_FOREST UNDERBRUSH_LEAVES
replace_terrain PALM_FOREST GRASS

terrain_cost BAMBOO 3
terrain_cost FOREST 3
terrain_cost OAK_FOREST 3
terrain_cost JUNGLE 3
terrain_cost PALM_DESERT 3
terrain_cost PINE_FOREST 3
terrain_cost SNOW_FOREST 3
terrain_cost CLIFF_GRASS 999
terrain_cost DLC_DRAGONFOREST 3
terrain_cost DLC_BAOBABFOREST 3
terrain_cost DLC_ACACIAFOREST 3
terrain_cost DLC_MANGROVEFOREST 3
terrain_cost DLC_RAINFOREST 3
terrain_cost MEDITERRANEAN_FOREST 3
terrain_cost BUSH_FOREST 3
terrain_cost REED_FOREST_SHALLOWS 3
terrain_cost DLC_REEDSBEACH 3
terrain_cost REED_FOREST 3
terrain_cost DLC_FORESTAUTUMN 3
terrain_cost DLC_FORESTSNOWAUTUMN 3
terrain_cost DLC_FORESTDEAD 3
terrain_cost BIRCH_FOREST 3
terrain_cost PALM_FOREST 3

if STANDARD_F_CONNECTIONS
	terrain_size BAMBOO 5 0    
	terrain_size FOREST 5 0
	terrain_size OAK_FOREST 5 0
	terrain_size JUNGLE 5 0
	terrain_size PALM_DESERT 5 0
	terrain_size PINE_FOREST 5 0
	terrain_size SNOW_FOREST 5 0
	terrain_size DLC_DRAGONFOREST 5 0
	terrain_size DLC_BAOBABFOREST 5 0
	terrain_size DLC_ACACIAFOREST 5 0
	terrain_size DLC_MANGROVEFOREST 5 0
	terrain_size DLC_RAINFOREST 5 0
	terrain_size MEDITERRANEAN_FOREST 5 0
	terrain_size BUSH_FOREST 5 0
	terrain_size REED_FOREST_SHALLOWS 5 0
	terrain_size DLC_REEDSBEACH 5 0
	terrain_size REED_FOREST 5 0
	terrain_size DLC_FORESTAUTUMN 5 0
	terrain_size DLC_FORESTSNOWAUTUMN 5 0
	terrain_size DLC_FORESTDEAD 5 0
	terrain_size BIRCH_FOREST 5 0
	terrain_size PALM_FOREST 5 0
elseif WIDE_F_CONNECTIONS
	terrain_size BAMBOO 10 0    
	terrain_size FOREST 10 0
	terrain_size OAK_FOREST 10 0
	terrain_size JUNGLE 10 0
	terrain_size PALM_DESERT 10 0
	terrain_size PINE_FOREST 10 0
	terrain_size SNOW_FOREST 10 0
	terrain_size DLC_DRAGONFOREST 10 0
	terrain_size DLC_BAOBABFOREST 10 0
	terrain_size DLC_ACACIAFOREST 10 0
	terrain_size DLC_MANGROVEFOREST 10 0
	terrain_size DLC_RAINFOREST 10 0
	terrain_size MEDITERRANEAN_FOREST 10 0
	terrain_size BUSH_FOREST 10 0
	terrain_size REED_FOREST_SHALLOWS 10 0
	terrain_size DLC_REEDSBEACH 10 0
	terrain_size REED_FOREST 10 0
	terrain_size DLC_FORESTAUTUMN 10 0
	terrain_size DLC_FORESTSNOWAUTUMN 10 0
	terrain_size DLC_FORESTDEAD 10 0
	terrain_size BIRCH_FOREST 10 0
	terrain_size PALM_FOREST 10 0
elseif VERY_WIDE_F_CONNECTIONS
	terrain_size BAMBOO 15 0    
	terrain_size FOREST 15 0
	terrain_size OAK_FOREST 15 0
	terrain_size JUNGLE 15 0
	terrain_size PALM_DESERT 15 0
	terrain_size PINE_FOREST 15 0
	terrain_size SNOW_FOREST 15 0
	terrain_size DLC_DRAGONFOREST 15 0
	terrain_size DLC_BAOBABFOREST 15 0
	terrain_size DLC_ACACIAFOREST 15 0
	terrain_size DLC_MANGROVEFOREST 15 0
	terrain_size DLC_RAINFOREST 15 0
	terrain_size MEDITERRANEAN_FOREST 15 0
	terrain_size BUSH_FOREST 15 0
	terrain_size REED_FOREST_SHALLOWS 15 0
	terrain_size DLC_REEDSBEACH 15 0
	terrain_size REED_FOREST 15 0
	terrain_size DLC_FORESTAUTUMN 15 0
	terrain_size DLC_FORESTSNOWAUTUMN 15 0
	terrain_size DLC_FORESTDEAD 15 0
	terrain_size BIRCH_FOREST 15 0
	terrain_size PALM_FOREST 15 0
elseif ULTRA_WIDE_F_CONNECTIONS
	terrain_size BAMBOO 20 0
	terrain_size FOREST 20 0
	terrain_size OAK_FOREST 20 0
	terrain_size JUNGLE 20 0
	terrain_size PALM_DESERT 20 0
	terrain_size PINE_FOREST 20 0
	terrain_size SNOW_FOREST 20 0
	terrain_size DLC_DRAGONFOREST 20 0
	terrain_size DLC_BAOBABFOREST 20 0
	terrain_size DLC_ACACIAFOREST 20 0
	terrain_size DLC_MANGROVEFOREST 20 0
	terrain_size DLC_RAINFOREST 20 0
	terrain_size MEDITERRANEAN_FOREST 20 0
	terrain_size BUSH_FOREST 20 0
	terrain_size REED_FOREST_SHALLOWS 20 0
	terrain_size DLC_REEDSBEACH 20 0
	terrain_size REED_FOREST 20 0
	terrain_size DLC_FORESTAUTUMN 20 0
	terrain_size DLC_FORESTSNOWAUTUMN 20 0
	terrain_size DLC_FORESTDEAD 20 0
	terrain_size BIRCH_FOREST 20 0
	terrain_size PALM_FOREST 20 0
endif

if WIDEN_F_CONNECTIONS
if WIDE_F_CONNECTIONS
	terrain_size BEACH 8 0
	terrain_size ICYSHORE 8 0
	terrain_size DIRT 8 0
	terrain_size DIRT2 8 0
	terrain_size DIRT_GRASS_FOUNDATION 8 0
	terrain_size DIRT3 8 0
	terrain_size DIRT_SNOW 8 0
	terrain_size DIRT_SNOW_FOUNDATION 8 0
	terrain_size DESERT 8 0
	terrain_size FARM1 8 0
	terrain_size FARM2 8 0
	terrain_size FARM3 8 0
	terrain_size FARM_PLANTED 8 0
	terrain_size FARM_DEAD 8 0
	terrain_size LEAVES 8 0
	terrain_size GRASS 8 0
	terrain_size CLIFF_GRASS 8 0
	terrain_size GRASS2 8 0
	terrain_size GRASS3 8 0
	terrain_size GRASS_SNOW 8 0
	terrain_size ICE 8 0
	terrain_size ICE_SHALLOWS 8 0
	terrain_size ROAD 8 0
	terrain_size DLC_ROCK 8 0
	terrain_size ROAD2 8 0
	terrain_size ROAD_SNOW 8 0
	terrain_size ROAD_FUNGUS 8 0
	terrain_size SHALLOW 8 0
	terrain_size SNOW 8 0
	terrain_size WATER_WALKABLE 8 0
	terrain_size DLC_SAVANNAH 8 0
	terrain_size DLC_DIRT4 8 0
	terrain_size DLC_DRYROAD 8 0
	terrain_size DLC_MOORLAND 8 0
	terrain_size DLC_CRACKED 8 0
	terrain_size DLC_QUICKSAND 8 0
	terrain_size DLC_BLACK 8 0
	terrain_size DLC_BEACH2 8 0
	terrain_size DLC_BEACH3 8 0
	terrain_size DLC_BEACH4 8 0
	terrain_size DLC_MANGROVESHALLOW 8 0
	terrain_size DLC_NEWSHALLOW 8 0
	terrain_size DLC_JUNGLEGRASS 8 0
	terrain_size DLC_JUNGLEROAD 8 0
	terrain_size DLC_JUNGLELEAVES 8 0
	terrain_size RICE_FARM1 8 0
	terrain_size RICE_FARM2 8 0
	terrain_size RICE_FARM3 8 0
	terrain_size RICE_FARM_PLANTED 8 0
	terrain_size RICE_FARM_DEAD 8 0
	terrain_size GRAVEL 8 0
	terrain_size UNDERBRUSH_LEAVES 8 0
	terrain_size SNOW_UNDERBRUSH 8 0
	terrain_size SNOW_LIGHT 8 0
	terrain_size SNOW_HEAVY 8 0
	terrain_size ROAD_FUNGUS_NEW 8 0
	terrain_size MUD 8 0
	terrain_size UNDERBRUSH_JUNGLE 8 0
	terrain_size ROAD_GRAVEL_NEW 8 0
	terrain_size BEACH_BUILDABLE 8 0
	terrain_size WET_BEACH_BUILDABLE 8 0
	terrain_size WET_GRAVEL_BUILDABLE 8 0
	terrain_size WET_ROCK_BUILDABLE 8 0
	terrain_size JUNGLE_GRASS_NEW 8 0
	terrain_size DLC_DRYGRASS 8 0
	terrain_size DLC_BOGLAND 8 0
	terrain_size DLC_DESERTGRAVEL 8 0
	terrain_size DLC_ROADGRAVEL 8 0
	terrain_size DLC_WETBEACH 8 0
	terrain_size DLC_GRAVELBEACH 8 0
	terrain_size DLC_WETROCKBEACH 8 0
	terrain_size MUDDY_SHALLOW 8 0
elseif VERY_WIDE_F_CONNECTIONS
	terrain_size BEACH 10 0
	terrain_size ICYSHORE 10 0
	terrain_size DIRT 10 0
	terrain_size DIRT2 10 0
	terrain_size DIRT_GRASS_FOUNDATION 10 0
	terrain_size DIRT3 10 0
	terrain_size DIRT_SNOW 10 0
	terrain_size DIRT_SNOW_FOUNDATION 10 0
	terrain_size DESERT 10 0
	terrain_size FARM1 10 0
	terrain_size FARM2 10 0
	terrain_size FARM3 10 0
	terrain_size FARM_PLANTED 10 0
	terrain_size FARM_DEAD 10 0
	terrain_size LEAVES 10 0
	terrain_size GRASS 10 0
	terrain_size CLIFF_GRASS 10 0
	terrain_size GRASS2 10 0
	terrain_size GRASS3 10 0
	terrain_size GRASS_SNOW 10 0
	terrain_size ICE 10 0
	terrain_size ICE_SHALLOWS 10 0
	terrain_size ROAD 10 0
	terrain_size DLC_ROCK 10 0
	terrain_size ROAD2 10 0
	terrain_size ROAD_SNOW 10 0
	terrain_size ROAD_FUNGUS 10 0
	terrain_size SHALLOW 10 0
	terrain_size SNOW 10 0
	terrain_size WATER_WALKABLE 10 0
	terrain_size DLC_SAVANNAH 10 0
	terrain_size DLC_DIRT4 10 0
	terrain_size DLC_DRYROAD 10 0
	terrain_size DLC_MOORLAND 10 0
	terrain_size DLC_CRACKED 10 0
	terrain_size DLC_QUICKSAND 10 0
	terrain_size DLC_BLACK 10 0
	terrain_size DLC_BEACH2 10 0
	terrain_size DLC_BEACH3 10 0
	terrain_size DLC_BEACH4 10 0
	terrain_size DLC_MANGROVESHALLOW 10 0
	terrain_size DLC_NEWSHALLOW 10 0
	terrain_size DLC_JUNGLEGRASS 10 0
	terrain_size DLC_JUNGLEROAD 10 0
	terrain_size DLC_JUNGLELEAVES 10 0
	terrain_size RICE_FARM1 10 0
	terrain_size RICE_FARM2 10 0
	terrain_size RICE_FARM3 10 0
	terrain_size RICE_FARM_PLANTED 10 0
	terrain_size RICE_FARM_DEAD 10 0
	terrain_size GRAVEL 10 0
	terrain_size UNDERBRUSH_LEAVES 10 0
	terrain_size SNOW_UNDERBRUSH 10 0
	terrain_size SNOW_LIGHT 10 0
	terrain_size SNOW_HEAVY 10 0
	terrain_size ROAD_FUNGUS_NEW 10 0
	terrain_size MUD 10 0
	terrain_size UNDERBRUSH_JUNGLE 10 0
	terrain_size ROAD_GRAVEL_NEW 10 0
	terrain_size BEACH_BUILDABLE 10 0
	terrain_size WET_BEACH_BUILDABLE 10 0
	terrain_size WET_GRAVEL_BUILDABLE 10 0
	terrain_size WET_ROCK_BUILDABLE 10 0
	terrain_size JUNGLE_GRASS_NEW 10 0
	terrain_size DLC_DRYGRASS 10 0
	terrain_size DLC_BOGLAND 10 0
	terrain_size DLC_DESERTGRAVEL 10 0
	terrain_size DLC_ROADGRAVEL 10 0
	terrain_size DLC_WETBEACH 10 0
	terrain_size DLC_GRAVELBEACH 10 0
	terrain_size DLC_WETROCKBEACH 10 0
	terrain_size MUDDY_SHALLOW 10 0
elseif ULTRA_WIDE_F_CONNECTIONS
	terrain_size BEACH 12 0
	terrain_size ICYSHORE 12 0
	terrain_size DIRT 12 0
	terrain_size DIRT2 12 0
	terrain_size DIRT_GRASS_FOUNDATION 12 0
	terrain_size DIRT3 12 0
	terrain_size DIRT_SNOW 12 0
	terrain_size DIRT_SNOW_FOUNDATION 12 0
	terrain_size DESERT 12 0
	terrain_size FARM1 12 0
	terrain_size FARM2 12 0
	terrain_size FARM3 12 0
	terrain_size FARM_PLANTED 12 0
	terrain_size FARM_DEAD 12 0
	terrain_size LEAVES 12 0
	terrain_size GRASS 12 0
	terrain_size CLIFF_GRASS 12 0
	terrain_size GRASS2 12 0
	terrain_size GRASS3 12 0
	terrain_size GRASS_SNOW 12 0
	terrain_size ICE 12 0
	terrain_size ICE_SHALLOWS 12 0
	terrain_size ROAD 12 0
	terrain_size DLC_ROCK 12 0
	terrain_size ROAD2 12 0
	terrain_size ROAD_SNOW 12 0
	terrain_size ROAD_FUNGUS 12 0
	terrain_size SHALLOW 12 0
	terrain_size SNOW 12 0
	terrain_size WATER_WALKABLE 12 0
	terrain_size DLC_SAVANNAH 12 0
	terrain_size DLC_DIRT4 12 0
	terrain_size DLC_DRYROAD 12 0
	terrain_size DLC_MOORLAND 12 0
	terrain_size DLC_CRACKED 12 0
	terrain_size DLC_QUICKSAND 12 0
	terrain_size DLC_BLACK 12 0
	terrain_size DLC_BEACH2 12 0
	terrain_size DLC_BEACH3 12 0
	terrain_size DLC_BEACH4 12 0
	terrain_size DLC_MANGROVESHALLOW 12 0
	terrain_size DLC_NEWSHALLOW 12 0
	terrain_size DLC_JUNGLEGRASS 12 0
	terrain_size DLC_JUNGLEROAD 12 0
	terrain_size DLC_JUNGLELEAVES 12 0
	terrain_size RICE_FARM1 12 0
	terrain_size RICE_FARM2 12 0
	terrain_size RICE_FARM3 12 0
	terrain_size RICE_FARM_PLANTED 12 0
	terrain_size RICE_FARM_DEAD 12 0
	terrain_size GRAVEL 12 0
	terrain_size UNDERBRUSH_LEAVES 12 0
	terrain_size SNOW_UNDERBRUSH 12 0
	terrain_size SNOW_LIGHT 12 0
	terrain_size SNOW_HEAVY 12 0
	terrain_size ROAD_FUNGUS_NEW 12 0
	terrain_size MUD 12 0
	terrain_size UNDERBRUSH_JUNGLE 12 0
	terrain_size ROAD_GRAVEL_NEW 12 0
	terrain_size BEACH_BUILDABLE 12 0
	terrain_size WET_BEACH_BUILDABLE 12 0
	terrain_size WET_GRAVEL_BUILDABLE 12 0
	terrain_size WET_ROCK_BUILDABLE 12 0
	terrain_size JUNGLE_GRASS_NEW 12 0
	terrain_size DLC_DRYGRASS 12 0
	terrain_size DLC_BOGLAND 12 0
	terrain_size DLC_DESERTGRAVEL 12 0
	terrain_size DLC_ROADGRAVEL 12 0
	terrain_size DLC_WETBEACH 12 0
	terrain_size DLC_GRAVELBEACH 12 0
	terrain_size DLC_WETROCKBEACH 12 0
	terrain_size MUDDY_SHALLOW 12 0
else
	terrain_size BEACH 2 0
	terrain_size ICYSHORE 2 0
	terrain_size DIRT 2 0
	terrain_size DIRT2 2 0
	terrain_size DIRT_GRASS_FOUNDATION 2 0
	terrain_size DIRT3 2 0
	terrain_size DIRT_SNOW 2 0
	terrain_size DIRT_SNOW_FOUNDATION 2 0
	terrain_size DESERT 2 0
	terrain_size FARM1 2 0
	terrain_size FARM2 2 0
	terrain_size FARM3 2 0
	terrain_size FARM_PLANTED 2 0
	terrain_size FARM_DEAD 2 0
	terrain_size LEAVES 2 0
	terrain_size GRASS 2 0
	terrain_size CLIFF_GRASS 2 0
	terrain_size GRASS2 2 0
	terrain_size GRASS3 2 0
	terrain_size GRASS_SNOW 2 0
	terrain_size ICE 2 0
	terrain_size ICE_SHALLOWS 2 0
	terrain_size ROAD 2 0
	terrain_size DLC_ROCK 2 0
	terrain_size ROAD2 2 0
	terrain_size ROAD_SNOW 2 0
	terrain_size ROAD_FUNGUS 2 0
	terrain_size SHALLOW 2 0
	terrain_size SNOW 2 0
	terrain_size WATER_WALKABLE 2 0
	terrain_size DLC_SAVANNAH 2 0
	terrain_size DLC_DIRT4 2 0
	terrain_size DLC_DRYROAD 2 0
	terrain_size DLC_MOORLAND 2 0
	terrain_size DLC_CRACKED 2 0
	terrain_size DLC_QUICKSAND 2 0
	terrain_size DLC_BLACK 2 0
	terrain_size DLC_BEACH2 2 0
	terrain_size DLC_BEACH3 2 0
	terrain_size DLC_BEACH4 2 0
	terrain_size DLC_MANGROVESHALLOW 2 0
	terrain_size DLC_NEWSHALLOW 2 0
	terrain_size DLC_JUNGLEGRASS 2 0
	terrain_size DLC_JUNGLEROAD 2 0
	terrain_size DLC_JUNGLELEAVES 2 0
	terrain_size RICE_FARM1 2 0
	terrain_size RICE_FARM2 2 0
	terrain_size RICE_FARM3 2 0
	terrain_size RICE_FARM_PLANTED 2 0
	terrain_size RICE_FARM_DEAD 2 0
	terrain_size GRAVEL 2 0
	terrain_size UNDERBRUSH_LEAVES 2 0
	terrain_size SNOW_UNDERBRUSH 2 0
	terrain_size SNOW_LIGHT 2 0
	terrain_size SNOW_HEAVY 2 0
	terrain_size ROAD_FUNGUS_NEW 2 0
	terrain_size MUD 2 0
	terrain_size UNDERBRUSH_JUNGLE 2 0
	terrain_size ROAD_GRAVEL_NEW 2 0
	terrain_size BEACH_BUILDABLE 2 0
	terrain_size WET_BEACH_BUILDABLE 2 0
	terrain_size WET_GRAVEL_BUILDABLE 2 0
	terrain_size WET_ROCK_BUILDABLE 2 0
	terrain_size JUNGLE_GRASS_NEW 2 0
	terrain_size DLC_DRYGRASS 2 0
	terrain_size DLC_BOGLAND 2 0
	terrain_size DLC_DESERTGRAVEL 2 0
	terrain_size DLC_ROADGRAVEL 2 0
	terrain_size DLC_WETBEACH 2 0
	terrain_size DLC_GRAVELBEACH 2 0
	terrain_size DLC_WETROCKBEACH 2 0
	terrain_size MUDDY_SHALLOW 2 0
endif
endif

}
endif

/* road connections */
if CREATE_ROADS
create_connect_teams_lands {
default_terrain_replacement ROAD_A 

replace_terrain BEACH BEACH
replace_terrain ICYSHORE ICYSHORE
replace_terrain ICE ICE
replace_terrain ICE_SHALLOWS ICE_SHALLOWS
replace_terrain DLC_ROCK DLC_ROCK
replace_terrain SHALLOW SHALLOW
replace_terrain ROAD ROAD
replace_terrain ROAD2 ROAD2
replace_terrain ROAD_FUNGUS ROAD_FUNGUS
replace_terrain ROAD_SNOW ROAD_SNOW
replace_terrain WATER SHALLOWS_A
replace_terrain WATER_NOBEACH SHALLOWS_A
replace_terrain MED_WATER SHALLOWS_A
replace_terrain DEEP_WATER SHALLOWS_A
replace_terrain DLC_CRACKED DLC_DRYROAD
replace_terrain DLC_DRYROAD DLC_DRYROAD
replace_terrain DLC_QUICKSAND DLC_QUICKSAND
replace_terrain DLC_BLACK DLC_BLACK
replace_terrain DLC_BEACH2 DLC_BEACH2
replace_terrain DLC_BEACH3 DLC_BEACH3
replace_terrain DLC_BEACH4 DLC_BEACH4
replace_terrain DLC_MANGROVEFOREST DLC_MANGROVESHALLOW
replace_terrain DLC_MANGROVESHALLOW DLC_MANGROVESHALLOW
replace_terrain DLC_NEWSHALLOW DLC_NEWSHALLOW
replace_terrain DLC_JUNGLEROAD DLC_JUNGLEROAD
replace_terrain DLC_WATER5 SHALLOWS_A
replace_terrain DLC_WATER4 SHALLOWS_A
replace_terrain RICE_FARM1 DLC_MANGROVESHALLOW
replace_terrain RICE_FARM2 DLC_MANGROVESHALLOW
replace_terrain RICE_FARM3 DLC_MANGROVESHALLOW
replace_terrain RICE_FARM_PLANTED DLC_MANGROVESHALLOW
replace_terrain RICE_FARM_DEAD DLC_MANGROVESHALLOW
replace_terrain ROAD_FUNGUS_NEW ROAD_FUNGUS_NEW
replace_terrain ROAD_GRAVEL_NEW ROAD_GRAVEL_NEW
replace_terrain BEACH_BUILDABLE DLC_DRYROAD
replace_terrain WET_BEACH_BUILDABLE DLC_DRYROAD
replace_terrain WET_GRAVEL_BUILDABLE DLC_ROADGRAVEL
replace_terrain WET_ROCK_BUILDABLE WET_ROCK_BUILDABLE
replace_terrain REED_FOREST_SHALLOWS SHALLOWS_A
replace_terrain DLC_REEDSBEACH DLC_GRAVELBEACH
replace_terrain DLC_BOGLAND DLC_BOGLAND
replace_terrain DLC_ROADGRAVEL DLC_ROADGRAVEL
replace_terrain WATER_GREEN SHALLOWS_A
replace_terrain WATER_BROWN SHALLOWS_A
replace_terrain DLC_WETBEACH DLC_WETBEACH
replace_terrain DLC_GRAVELBEACH DLC_GRAVELBEACH
replace_terrain DLC_WETROCKBEACH DLC_WETROCKBEACH
replace_terrain MUDDY_SHALLOW MUDDY_SHALLOW

terrain_cost ICYSHORE 10
terrain_cost DIRT_GRASS_FOUNDATION 3
terrain_cost DIRT_SNOW_FOUNDATION 3
terrain_cost FARM1 3
terrain_cost FARM2 3
terrain_cost FARM3 3
terrain_cost FARM_PLANTED 3
terrain_cost FARM_DEAD 3
terrain_cost ICE_SHALLOWS 1
terrain_cost DLC_ROCK 1
terrain_cost ROAD_FUNGUS 1
terrain_cost ROAD_SNOW 1
terrain_cost BEACH 10
terrain_cost DESERT 3
terrain_cost DIRT 3
terrain_cost DIRT2 3
terrain_cost DIRT3 3
terrain_cost GRASS 3
terrain_cost GRASS2 3
terrain_cost GRASS3 3
terrain_cost ICE 1
terrain_cost SNOW 3
terrain_cost GRASS_SNOW 3
terrain_cost DIRT_SNOW 3
terrain_cost LEAVES 3
terrain_cost SHALLOW 1
terrain_cost ROAD 1
terrain_cost ROAD2 1
terrain_cost BAMBOO 6
terrain_cost FOREST 6
terrain_cost OAK_FOREST 6
terrain_cost JUNGLE 6
terrain_cost PALM_DESERT 6
terrain_cost PINE_FOREST 6
terrain_cost SNOW_FOREST 6
terrain_cost WATER 10
terrain_cost WATER_NOBEACH 10
terrain_cost MED_WATER 13
terrain_cost DEEP_WATER 15
terrain_cost CLIFF_GRASS 999
terrain_cost DLC_SAVANNAH 3
terrain_cost DLC_DIRT4 3
terrain_cost DLC_DRYROAD 1
terrain_cost DLC_MOORLAND 3
terrain_cost DLC_CRACKED 3
terrain_cost DLC_QUICKSAND 1
terrain_cost DLC_BLACK 1
terrain_cost DLC_BEACH2 10
terrain_cost DLC_BEACH3 10
terrain_cost DLC_BEACH4 10
terrain_cost DLC_MANGROVESHALLOW 1
terrain_cost DLC_NEWSHALLOW 1
terrain_cost DLC_JUNGLEGRASS 3
terrain_cost DLC_JUNGLEROAD 1
terrain_cost DLC_JUNGLELEAVES 3
terrain_cost DLC_DRAGONFOREST 6
terrain_cost DLC_BAOBABFOREST 6
terrain_cost DLC_ACACIAFOREST 6
terrain_cost DLC_MANGROVEFOREST 6
terrain_cost DLC_RAINFOREST 6
terrain_cost DLC_WATER5 10
terrain_cost DLC_WATER4 15
terrain_cost RICE_FARM1 3
terrain_cost RICE_FARM2 3
terrain_cost RICE_FARM3 3
terrain_cost RICE_FARM_PLANTED 3
terrain_cost RICE_FARM_DEAD 3
terrain_cost GRAVEL 3
terrain_cost UNDERBRUSH_LEAVES 3
terrain_cost SNOW_UNDERBRUSH 3
terrain_cost SNOW_LIGHT 3
terrain_cost SNOW_HEAVY 3
terrain_cost ROAD_FUNGUS_NEW 1
terrain_cost MUD 3
terrain_cost UNDERBRUSH_JUNGLE 3
terrain_cost ROAD_GRAVEL_NEW 1
terrain_cost BEACH_BUILDABLE 3
terrain_cost WET_BEACH_BUILDABLE 3
terrain_cost WET_GRAVEL_BUILDABLE 3
terrain_cost WET_ROCK_BUILDABLE 3
terrain_cost JUNGLE_GRASS_NEW 3
terrain_cost DLC_DRYGRASS 3
terrain_cost DLC_BOGLAND 1
terrain_cost DLC_DESERTGRAVEL 3
terrain_cost DLC_ROADGRAVEL 1
terrain_cost MEDITERRANEAN_FOREST 6
terrain_cost BUSH_FOREST 6
terrain_cost REED_FOREST_SHALLOWS 6
terrain_cost DLC_REEDSBEACH 6
terrain_cost REED_FOREST 6
terrain_cost DLC_FORESTAUTUMN 6
terrain_cost DLC_FORESTSNOWAUTUMN 6
terrain_cost DLC_FORESTDEAD 6
terrain_cost WATER_GREEN 10
terrain_cost WATER_BROWN 10
terrain_cost DLC_WETBEACH 10
terrain_cost DLC_GRAVELBEACH 10
terrain_cost DLC_WETROCKBEACH 10
terrain_cost BIRCH_FOREST 6
terrain_cost MUDDY_SHALLOW 1
terrain_cost PALM_FOREST 6

terrain_size BEACH 1 1
terrain_size ICYSHORE 1 1
terrain_size DIRT 1 1
terrain_size DIRT2 1 1
terrain_size DIRT_GRASS_FOUNDATION 1 1
terrain_size DIRT3 1 1
terrain_size DIRT_SNOW 1 1
terrain_size DIRT_SNOW_FOUNDATION 1 1
terrain_size DESERT 1 1
terrain_size FARM1 1 1
terrain_size FARM2 1 1
terrain_size FARM3 1 1
terrain_size FARM_PLANTED 1 1
terrain_size FARM_DEAD 1 1
terrain_size BAMBOO 1 1
terrain_size FOREST 1 1
terrain_size OAK_FOREST 1 1
terrain_size JUNGLE 1 1
terrain_size LEAVES 1 1
terrain_size PALM_DESERT 1 1
terrain_size PINE_FOREST 1 1
terrain_size SNOW_FOREST 1 1
terrain_size GRASS 1 1
terrain_size CLIFF_GRASS 1 1
terrain_size GRASS2 1 1
terrain_size GRASS3 1 1
terrain_size GRASS_SNOW 1 1
terrain_size ICE 1 1
terrain_size ICE_SHALLOWS 1 1
terrain_size ROAD 0 0
terrain_size DLC_ROCK 0 0
terrain_size ROAD2 0 0
terrain_size ROAD_SNOW 0 0
terrain_size ROAD_FUNGUS 0 0
terrain_size SHALLOW 1 1
terrain_size SNOW 1 1
terrain_size WATER 1 0
terrain_size WATER_NOBEACH 1 0
terrain_size MED_WATER 1 0
terrain_size DEEP_WATER 1 0
terrain_size WATER_WALKABLE 1 1
terrain_size DLC_SAVANNAH 1 1
terrain_size DLC_DIRT4 1 1
terrain_size DLC_DRYROAD 0 0
terrain_size DLC_MOORLAND 1 1
terrain_size DLC_CRACKED 1 1
terrain_size DLC_QUICKSAND 1 1
terrain_size DLC_BLACK 1 1
terrain_size DLC_DRAGONFOREST 1 1
terrain_size DLC_BAOBABFOREST 1 1
terrain_size DLC_ACACIAFOREST 1 1
terrain_size DLC_BEACH2 1 1
terrain_size DLC_BEACH3 1 1
terrain_size DLC_BEACH4 1 1
terrain_size DLC_MANGROVESHALLOW 1 1
terrain_size DLC_MANGROVEFOREST 1 1
terrain_size DLC_RAINFOREST 1 1
terrain_size DLC_NEWSHALLOW 1 1
terrain_size DLC_JUNGLEGRASS 1 1
terrain_size DLC_JUNGLEROAD 0 0
terrain_size DLC_JUNGLELEAVES 1 1
terrain_size DLC_WATER5 1 0
terrain_size DLC_WATER4 1 0
terrain_size RICE_FARM1 1 1
terrain_size RICE_FARM2 1 1
terrain_size RICE_FARM3 1 1
terrain_size RICE_FARM_PLANTED 1 1
terrain_size RICE_FARM_DEAD 1 1
terrain_size GRAVEL 1 1
terrain_size UNDERBRUSH_LEAVES 1 1
terrain_size SNOW_UNDERBRUSH 1 1
terrain_size SNOW_LIGHT 1 1
terrain_size SNOW_HEAVY 1 1
terrain_size ROAD_FUNGUS_NEW 0 0
terrain_size MUD 1 1
terrain_size UNDERBRUSH_JUNGLE 1 1
terrain_size ROAD_GRAVEL_NEW 0 0
terrain_size BEACH_BUILDABLE 1 1
terrain_size WET_BEACH_BUILDABLE 1 1
terrain_size WET_GRAVEL_BUILDABLE 1 1
terrain_size WET_ROCK_BUILDABLE 1 1
terrain_size JUNGLE_GRASS_NEW 1 1
terrain_size MEDITERRANEAN_FOREST 1 1
terrain_size BUSH_FOREST 1 1
terrain_size REED_FOREST_SHALLOWS 1 1
terrain_size DLC_REEDSBEACH 1 1
terrain_size REED_FOREST 1 1
terrain_size DLC_DRYGRASS 1 1
terrain_size DLC_BOGLAND 1 1
terrain_size DLC_DESERTGRAVEL 1 1
terrain_size DLC_ROADGRAVEL 0 0
terrain_size DLC_FORESTAUTUMN 1 1
terrain_size DLC_FORESTSNOWAUTUMN 1 1
terrain_size DLC_FORESTDEAD 1 1
terrain_size WATER_GREEN 1 0
terrain_size WATER_BROWN 1 0
terrain_size DLC_WETBEACH 1 1
terrain_size DLC_GRAVELBEACH 1 1
terrain_size DLC_WETROCKBEACH 1 1
terrain_size BIRCH_FOREST 1 1
terrain_size MUDDY_SHALLOW 1 1
terrain_size PALM_FOREST 1 1
}
endif


/* finally create custom beaches */
create_connect_all_lands {
replace_terrain BEACH BEACH_A
replace_terrain ICYSHORE BEACH_A
terrain_size BEACH 999 0
terrain_size ICYSHORE 999 0
}


/* determine how to scatter neutral resources */
if HUGE_OR_LARGER	/* fill giant+ maps with neutral res */
elseif ONE_ZONE	/* no chokepoints */
elseif LAND_BASED_MAP	/* no chokepoints */
elseif NO_CONNECTIONS	#define CHOKEPOINTS
elseif WATER_BASED_MAP
	if WATER_IS_DRY	/* no chokepoints */
	elseif FREEZE_ALL_WATER	/* no chokepoints */
	elseif FREEZE_PRIMARY_AND_SECONDARY_WATER	/* no chokepoints */
	elseif SWAMP	/* no chokepoints */
	elseif USE_ISLANDS_STYLE	#define CHOKEPOINTS
	else
		if USE_NOMAD_SETUP
			if ULTRA_WIDE_W_CONNECTIONS	/* no chokepoints */
			elseif VERY_WIDE_W_CONNECTIONS	/* no chokepoints */
			elseif 2_PLAYER_GAME #define CHOKEPOINTS
			else	/* no chokepoints */
			endif
		else
			if 2_PLAYER_GAME	#define CHOKEPOINTS
			elseif USE_TEAM_GROUPING	#define CHOKEPOINTS
			elseif ULTRA_WIDE_W_CONNECTIONS	/* no chokepoints */
			elseif VERY_WIDE_W_CONNECTIONS	/* no chokepoints */
			else	#define CHOKEPOINTS
			endif	/* no chokepoints */
		endif
	endif
elseif FOREST_BASED_MAP
	if USE_MICHI_STYLE	#define CHOKEPOINTS
	elseif USE_NOMAD_SETUP
		if ULTRA_WIDE_F_CONNECTIONS	/* no chokepoint */
		elseif VERY_WIDE_F_CONNECTIONS	/* no chokepoint */
		elseif 2_PLAYER_GAME		#define CHOKEPOINTS
		else
		endif
	else
		if 2_PLAYER_GAME	#define CHOKEPOINTS
		elseif USE_TEAM_GROUPING	#define CHOKEPOINTS
		elseif ULTRA_WIDE_F_CONNECTIONS	/* no chokepoints */
		elseif VERY_WIDE_F_CONNECTIONS	/* no chokepoints */
		else	#define CHOKEPOINTS
		endif
	endif
endif

/* when to use nomad-style scattered resources */
if USE_NOMAD_SETUP
	if CHOKEPOINTS	/* non-scattered nomad */
	else	#define USE_LAND_NOMAD_RESOURCES
	endif
endif

/* used to assign neutral resources by player when the map has chokepoints */
if CHOKEPOINTS
	#define PERSONAL_RESOURCES
endif


/* =================================================================================================== */
<OBJECTS_GENERATION>


/* remove animals on these game modes */
if INFINITE_RESOURCES	#define DEATH_MATCH
elseif DEFEND_WONDER	#define DEATH_MATCH
elseif BATTLE_ROYALE	#define DEATH_MATCH
endif

/* define things so they are not undefined in a potentially dead branch */
#const TEMPORARY_OBJECT_GRID 278	/* dead fish trap */
#const PACKED_TOWN_CENTER 444	/* currently buggy in battle royale */
#const FORTRESS_CASTLE 33	/* massive garrison capacity */
#const FIRE_TOWER 190
#const STORMY_DOG 862
#const OUTLAW 158
#const REEDTREE 1350
#const BLANKOBJECT 647 /* used as a placeholder */
#const MASKING_UNIT 127	/* old explorer */
#const TERRAIN_BLOCKER 1613 /* terrain blocker */
#const BR_TRADE_WORKSHOP 1647
#const DONJON 1665
#const FLAME1 1333
#const FLAME2 1334
#const FLAME3 1335
#const FLAME4 1336
#const MERCHANT 1572
#const NEUTRAL_MARKET 1646
#const MULE_CART 1808

/* =================================================================================================== */
/* determine resources on neutral lands */

if BETWEEN_LANDS_EXIST
	if BETWEEN_ZONE_5
		if WATER_BASED_MAP
			if BETWEEN_IS_LAND
				if NO_CONNECTIONS
					#define ISOLATED_BETWEEN
				endif
			endif
		endif
	endif
	if BETWEEN_IS_LAND	#define BETWEEN_CLUSTER
		if ISOLATED_BETWEEN
			if ALLOW_BETWEEN_RUSH_RESOURCES
				start_random
					percent_chance 80	#define BETWEEN_RUSH
				end_random
			endif
		else
			if ALLOW_BETWEEN_RUSH_RESOURCES
				start_random
					percent_chance 20	#define BETWEEN_RUSH
				end_random
			endif
		endif
	elseif BETWEEN_IS_FOREST
		if CONNECT_EVERYTHING_ACROSS_FOREST
			#define BETWEEN_CLUSTER
		endif	
	elseif BETWEEN_IS_SHALLOWS
		if ALLOW_BETWEEN_RUSH_RESOURCES
			start_random
				percent_chance 30	#define BETWEEN_HUNT
				percent_chance 30	#define BETWEEN_OYSTERS
				percent_chance 30	#define BETWEEN_FISH
			end_random
		else
			start_random
				percent_chance 45	#define BETWEEN_OYSTERS
				percent_chance 45	#define BETWEEN_FISH
			end_random
		endif
	elseif BETWEEN_IS_WATER
		start_random
			percent_chance 45	#define BETWEEN_OYSTERS
			percent_chance 45	#define BETWEEN_FISH
		end_random
	endif
endif

if CENTER_LAND_EXISTS
	if WATER_BASED_MAP
		if CENTER_IS_LAND
			if NO_CONNECTIONS
				#define ISOLATED_CENTER
			endif
		endif
	endif
	if CENTER_IS_LAND	#define CENTER_CLUSTER
		if ISOLATED_CENTER
			if ALLOW_CENTER_RUSH_RESOURCES
				start_random
					percent_chance 80	#define CENTER_RUSH
				end_random
			endif
		else
			if ALLOW_CENTER_RUSH_RESOURCES
				start_random
					percent_chance 20	#define CENTER_RUSH
				end_random
			endif
		endif
	elseif CENTER_IS_FOREST
		if FOREST_LAKE
			start_random
				percent_chance 45	#define CENTER_OYSTERS
				percent_chance 45	#define CENTER_FISH
			end_random		
		elseif CONNECT_EVERYTHING_ACROSS_FOREST
			#define CENTER_CLUSTER
		endif	
	elseif CENTER_IS_SHALLOWS
		if ALLOW_CENTER_RUSH_RESOURCES
			start_random
				percent_chance 30	#define CENTER_HUNT
				percent_chance 30	#define CENTER_OYSTERS
				percent_chance 30	#define CENTER_FISH
			end_random
		else
			start_random
				percent_chance 45	#define CENTER_OYSTERS
				percent_chance 45	#define CENTER_FISH
			end_random
		endif
	elseif CENTER_IS_WATER
		if CENTRAL_ISLAND	#define CENTER_CLUSTER
			if ISOLATED_CENTER
				if ALLOW_CENTER_RUSH_RESOURCES
					start_random
						percent_chance 80	#define CENTER_RUSH
					end_random
				endif
			else
				if ALLOW_CENTER_RUSH_RESOURCES
					start_random
						percent_chance 20	#define CENTER_RUSH
					end_random
				endif
			endif
		else
			start_random
				percent_chance 45	#define CENTER_OYSTERS
				percent_chance 45	#define CENTER_FISH
			end_random
		endif
	endif
endif

if CORNER_LANDS
	if WATER_BASED_MAP
		if CORNERS_ARE_LAND
			if NO_CONNECTIONS
				#define ISOLATED_CORNERS
			endif
		endif
	endif
	if CORNERS_ARE_LAND	#define CORNER_CLUSTER
		if ISOLATED_CORNERS
			if ALLOW_CORNER_RUSH_RESOURCES
				start_random
					percent_chance 80	#define CORNER_RUSH
				end_random
			endif
		else
			if ALLOW_CORNER_RUSH_RESOURCES
				start_random
					percent_chance 20	#define CORNER_RUSH
				end_random
			endif
		endif
	elseif CORNERS_ARE_FOREST
		if CONNECT_EVERYTHING_ACROSS_FOREST
			#define CORNER_CLUSTER
		endif	
	elseif CORNERS_ARE_SHALLOWS
		if ALLOW_CORNER_RUSH_RESOURCES
			start_random
				percent_chance 30	#define CORNER_HUNT
				percent_chance 30	#define CORNER_OYSTERS
				percent_chance 30	#define CORNER_FISH
			end_random
		else
			start_random
				percent_chance 45	#define CORNER_OYSTERS
				percent_chance 45	#define CORNER_FISH
			end_random
		endif
	elseif CORNERS_ARE_WATER
		start_random
			percent_chance 45	#define CORNER_OYSTERS
			percent_chance 45	#define CORNER_FISH
		end_random
	endif
endif

if SIDE_LANDS
	if WATER_BASED_MAP
		if SIDES_ARE_LAND
			if NO_CONNECTIONS
				#define ISOLATED_SIDES
			endif
		endif
	endif
	if SIDES_ARE_LAND	#define SIDE_CLUSTER
		if ISOLATED_SIDES
			if ALLOW_SIDE_RUSH_RESOURCES
				start_random
					percent_chance 80	#define SIDE_RUSH
				end_random
			endif
		else
			if ALLOW_SIDE_RUSH_RESOURCES
				start_random
					percent_chance 20	#define SIDE_RUSH
				end_random
			endif
		endif
	elseif SIDES_ARE_FOREST
		if CONNECT_EVERYTHING_ACROSS_FOREST
			#define SIDE_CLUSTER
		endif	
	elseif SIDES_ARE_SHALLOWS
		if ALLOW_SIDE_RUSH_RESOURCES
			start_random
				percent_chance 30	#define SIDE_HUNT
				percent_chance 30	#define SIDE_OYSTERS
				percent_chance 30	#define SIDE_FISH
			end_random
		else
			start_random
				percent_chance 45	#define SIDE_OYSTERS
				percent_chance 45	#define SIDE_FISH
			end_random
		endif
	elseif SIDES_ARE_WATER
		start_random
			percent_chance 45	#define SIDE_OYSTERS
			percent_chance 45	#define SIDE_FISH
		end_random
	endif
endif

/* actor areas to prevent villagers on the edges */
/* replaced with min_distance_to_map_edge */
/*
if 36x36
elseif 60x60
elseif 80x80
elseif 100x100
elseif	120x120				
	create_actor_area 	-61	60	1001	72
	create_actor_area 	180	60	1001	72
	create_actor_area 	60	180	1001	72
	create_actor_area 	60	-61	1001	72
elseif	144x144				
	create_actor_area 	-73	72	1001	86
	create_actor_area 	216	72	1001	86
	create_actor_area 	72	216	1001	86
	create_actor_area 	72	-73	1001	86
elseif	168x168				
	create_actor_area 	-85	84	1001	101
	create_actor_area 	252	84	1001	101
	create_actor_area 	84	252	1001	101
	create_actor_area 	84	-85	1001	101
elseif	200x200				
	create_actor_area 	-101	100	1001	120
	create_actor_area 	300	100	1001	120
	create_actor_area 	100	300	1001	120
	create_actor_area 	100	-101	1001	120
elseif	220x220				
	create_actor_area 	-111	110	1001	132
	create_actor_area 	330	110	1001	132
	create_actor_area 	110	330	1001	132
	create_actor_area 	110	-111	1001	132
elseif	240x240				
	create_actor_area 	-121	120	1001	144
	create_actor_area 	360	120	1001	144
	create_actor_area 	120	360	1001	144
	create_actor_area 	120	-121	1001	144
	elseif 252x252
	elseif 276x276
	elseif 300x300
	elseif 320x320
	elseif 360x360
	elseif 400x400	
elseif	480x480				
	create_actor_area 	-241	240	1001	288
	create_actor_area 	720	240	1001	288
	create_actor_area 	240	720	1001	288
	create_actor_area 	240	-241	1001	288
endif
*/

/* actor areas for corner docks and markets */
create_actor_area 1 1 1999 0
if 36x36
	create_actor_area 34 1 2999 0
	create_actor_area 1 34 3999 0
	create_actor_area 34 34 4999 0
elseif 60x60
	create_actor_area 58 1 2999 0
	create_actor_area 1 58 3999 0
	create_actor_area 58 58 4999 0
elseif 80x80
	create_actor_area 78 1 2999 0
	create_actor_area 1 78 3999 0
	create_actor_area 78 78 4999 0
elseif 100x100
	create_actor_area 98 1 2999 0
	create_actor_area 1 98 3999 0
	create_actor_area 98 98 4999 0
elseif 120x120
	create_actor_area 118 1 2999 0
	create_actor_area 1 118 3999 0
	create_actor_area 118 118 4999 0
elseif 144x144
	create_actor_area 142 1 2999 0
	create_actor_area 1 142 3999 0
	create_actor_area 142 142 4999 0
elseif 168x168
	create_actor_area 166 1 2999 0
	create_actor_area 1 166 3999 0
	create_actor_area 166 166 4999 0
elseif 200x200
	create_actor_area 198 1 2999 0
	create_actor_area 1 198 3999 0
	create_actor_area 198 198 4999 0
elseif 220x220
	create_actor_area 218 1 2999 0
	create_actor_area 1 218 3999 0
	create_actor_area 218 218 4999 0
elseif 240x240
	create_actor_area 238 1 2999 0
	create_actor_area 1 238 3999 0
	create_actor_area 238 238 4999 0
elseif 252x252
	create_actor_area 250 1 2999 0
	create_actor_area 1 250 3999 0
	create_actor_area 250 250 4999 0
elseif 276x276
	create_actor_area 274 1 2999 0
	create_actor_area 1 274 3999 0
	create_actor_area 274 274 4999 0
elseif 300x300
	create_actor_area 298 1 2999 0
	create_actor_area 1 298 3999 0
	create_actor_area 298 298 4999 0
elseif 320x320
	create_actor_area 318 1 2999 0
	create_actor_area 1 318 3999 0
	create_actor_area 318 318 4999 0
elseif 360x360
	create_actor_area 358 1 2999 0
	create_actor_area 1 358 3999 0
	create_actor_area 358 358 4999 0
elseif 400x400
	create_actor_area 398 1 2999 0
	create_actor_area 1 398 3999 0
	create_actor_area 398 398 4999 0
elseif 480x480
	create_actor_area 478 1 2999 0
	create_actor_area 1 478 3999 0
	create_actor_area 478 478 4999 0
endif

/* fire for the wasteland biome */
create_object FLAME4 {
	number_of_objects 9320
	set_scaling_to_map_size
	terrain_to_place_on DLC_BLACK
	temp_min_distance_group_placement 2
}
create_object FLAME3 {
	number_of_objects 9320
	set_scaling_to_map_size
	terrain_to_place_on DLC_BLACK
	temp_min_distance_group_placement 2
}
create_object FLAME2 {
	number_of_objects 9320
	set_scaling_to_map_size
	terrain_to_place_on DLC_BLACK
	temp_min_distance_group_placement 2
}
create_object FLAME1 {
	number_of_objects 9320
	set_scaling_to_map_size
	terrain_to_place_on DLC_BLACK
	temp_min_distance_group_placement 2
}

/* plants on shallows */
create_object PLANT {
	number_of_objects 9320
	set_scaling_to_map_size
	terrain_to_place_on SHALLOWS_A
	temp_min_distance_group_placement 2
}
#const GRASS_PATCH 1358
create_object GRASS_PATCH {
	number_of_groups 9320
	number_of_objects 5
	group_variance 5
	set_scaling_to_map_size
	terrain_to_place_on SHALLOWS_A
	temp_min_distance_group_placement 5
}

/* prevent docks in puddles */
create_object PH_WATER_OFF {
	set_gaia_object_only
	number_of_objects 9320
	temp_min_distance_group_placement 2
	max_distance_to_other_zones 5
	actor_area 7654
	actor_area_radius 6
}
create_object BLANKOBJECT {
	number_of_objects 9320
	temp_min_distance_group_placement 1
	avoid_actor_area 7654
	actor_area 7655
	actor_area_radius 1
}

/* fill forests */
start_random
	percent_chance 49	#define FILL_FORESTS
end_random

if FILL_FORESTS
	create_object DLC_RAINTREE {
		terrain_to_place_on DLC_MANGROVEFOREST
		number_of_objects 9320
		set_scaling_to_map_size
	}
	create_object FOREST_FILLER {
		terrain_to_place_on FOREST_A
		number_of_objects 9320
		set_scaling_to_map_size
	}
	create_object FOREST_FILLER {
		terrain_to_place_on FOREST_B
		number_of_objects 9320
		set_scaling_to_map_size
	}
	create_object FOREST_FILLER {
		terrain_to_place_on FOREST_C
		number_of_objects 9320
		set_scaling_to_map_size
	}
endif

/* place objects on the center so it can be avoided with actor areas */
/* and so a central wall can be placed */
if SPECIAL_CENTER 
	create_object BLANKOBJECT {
		set_gaia_object_only
		number_of_objects 800
		terrain_to_place_on LAND_Z
		actor_area 999
		actor_area_radius 18
	}
	create_object TEMPORARY_OBJECT_GRID {
		set_gaia_object_only
		place_on_specific_land_id 22
		max_distance_to_players 0
		actor_area 998
		if 480x480 actor_area_radius 26
		elseif 400x400 actor_area_radius 22
		elseif 360x360 actor_area_radius 22
		elseif 320x320 actor_area_radius 20
		elseif 300x300 actor_area_radius 20
		elseif 276x276 actor_area_radius 20
		elseif 252x252 actor_area_radius 17
		elseif 240x240 actor_area_radius 17
		elseif 220x220 actor_area_radius 15
		elseif 200x200 actor_area_radius 13
		else actor_area_radius 11
		endif
	}
	create_object TEMPORARY_OBJECT_GRID {
		set_gaia_object_only
		place_on_specific_land_id 22
		max_distance_to_players 0
		actor_area 997
		if 480x480 actor_area_radius 28
		elseif 400x400 actor_area_radius 23
		elseif 360x360 actor_area_radius 23
		elseif 320x320 actor_area_radius 21
		elseif 300x300 actor_area_radius 21
		elseif 276x276 actor_area_radius 21
		elseif 252x252 actor_area_radius 18
		elseif 240x240 actor_area_radius 18
		elseif 220x220 actor_area_radius 16
		elseif 200x200 actor_area_radius 14
		else actor_area_radius 12
		endif
	}
endif

/* units for battle royale and also to defend the monument in koth */

/* 
#const GAIA_GUARDIAN_A	frontline unit - most common
#const GAIA_GUARDIAN_B	middle unit
#const GAIA_GUARDIAN_C	backline unit - often monk or siege, or very powerful
*/

start_random
	percent_chance 0	/* gaia animals */
		#const GAIA_GUARDIAN_A 810	/* iron boar */
		#const GAIA_GUARDIAN_B 639	/* penguin */
		#const GAIA_GUARDIAN_C 707	/* ornulu the wolf */	
	percent_chance 1	/* bandits */
		#const GAIA_GUARDIAN_A 1145	/* ninja */
		#const GAIA_GUARDIAN_B 299	/* bandit */
		#const GAIA_GUARDIAN_C 138	/* spy */
	percent_chance 1	/* amazonians */
		#const GAIA_GUARDIAN_A 825	/* amazon warrior */
		#const GAIA_GUARDIAN_B 850	/* amazon archer */
		#const GAIA_GUARDIAN_C 752	/* elite eagle warrior */
	percent_chance 1	/* regional hidden units */
		#const GAIA_GUARDIAN_A 894	/* eastern swordsman */
		#const GAIA_GUARDIAN_B 361	/* norse warrior */
		#const GAIA_GUARDIAN_C 1568	/* mounted samurai */
	percent_chance 1	/* classic heroes */
		#const GAIA_GUARDIAN_A 432	/* william wallace */
		#const GAIA_GUARDIAN_B 731	/* genghis khan */
		#const GAIA_GUARDIAN_C 824	/* el cid campeador */
	percent_chance 1	/* camelry */
		#define CAMEL_ARMY
		#const GAIA_GUARDIAN_A 207	/* imperial camel */
		#const GAIA_GUARDIAN_B 1009	/* elite camel archer */
		#const GAIA_GUARDIAN_C 556	/* elite mameluke */	
	percent_chance 1	/* monk siege */
		#const GAIA_GUARDIAN_A 359	/* halberdier */
		#const GAIA_GUARDIAN_B 125	/* monk */
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* full monk */
		#define MONK_ARMY
		#const GAIA_GUARDIAN_A 125	/* monk */
		#const GAIA_GUARDIAN_B 775	/* missionary */
		#const GAIA_GUARDIAN_C 177	/* archbishop */
	percent_chance 1	/* elephant spam */
		#define ELEPHANT_ARMY
		#const GAIA_GUARDIAN_A 875	/* elite elephant archer */
		#const GAIA_GUARDIAN_B 558	/* elite war elephant */
		#const GAIA_GUARDIAN_C 1122	/* elite ballista elephant */
	percent_chance 1	/* counter units  */
		set_gaia_civilization 39	/* bohemians */
		#const GAIA_GUARDIAN_A 359	/* halberdier */
		#const GAIA_GUARDIAN_B 1155	/* imperial skirmisher */
		#const GAIA_GUARDIAN_C 1709	/* houfnice */
	percent_chance 1	/* classic cheats  */
		#const GAIA_GUARDIAN_A 706	/* sabateur */
		#const GAIA_GUARDIAN_B 860	/* furious the monkey boy */
		#const GAIA_GUARDIAN_C 748	/* cobra car */
	percent_chance 1	/* new cheats  */
		#const GAIA_GUARDIAN_A 639	/* penguin */
		#const GAIA_GUARDIAN_B 1300	/* alfred the alpaca */
		#const GAIA_GUARDIAN_C 1222	/* sharkatzor */
	percent_chance 1	/* cheats v3 */
		#const GAIA_GUARDIAN_A 206	/* vmdl */
		#const GAIA_GUARDIAN_B 1023	/* aoe1 priest */
		#const GAIA_GUARDIAN_C 1577	/* photonman */
	percent_chance 1	/* flaming camels */
		#const GAIA_GUARDIAN_A 1263	/* flaming camel */
		#const GAIA_GUARDIAN_B 1263	/* flaming camel */
		#const GAIA_GUARDIAN_C 1263	/* flaming camel */
	percent_chance 1	/* projectile fun */
		#const GAIA_GUARDIAN_A 531	/* elite throwing axeman */
		#const GAIA_GUARDIAN_B 1013	/* elite gbeto */
		#const GAIA_GUARDIAN_C 530	/* elite longbowman */
	percent_chance 1	/* overpowered */
		#const GAIA_GUARDIAN_A 829	/* elite war wagon */
		#const GAIA_GUARDIAN_B 558	/* elite war elephant */
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* hidden siege units */
		#const GAIA_GUARDIAN_A 885	/* agressive siege tower */
		#const GAIA_GUARDIAN_B 188	/* flamethrower */
		#const GAIA_GUARDIAN_C 644	/* Jean de Lorrain */
	percent_chance 1	/* full siege  */
		#define SIEGE_ARMY
		#const GAIA_GUARDIAN_A 542	/* heavy scorpion */
		#const GAIA_GUARDIAN_B 588	/* siege onager */
		#const GAIA_GUARDIAN_C 1709	/* houfnice */
	percent_chance 1	/* magyar malay mixup */
		#define MAGYAR_MALAY_ARMY
		#const GAIA_GUARDIAN_A 871	/* elite magyar huszar */
		#const GAIA_GUARDIAN_B 1134	/* elite battle elephant */	
		#const GAIA_GUARDIAN_C 542	/* heavy scorpion */
	percent_chance 1	/* full xolotl */
		#const GAIA_GUARDIAN_A 1570	/* xolotl warrior */
		#const GAIA_GUARDIAN_B 1570	/* xolotl warrior */
		#const GAIA_GUARDIAN_C 1570	/* xolotl warrior */
	percent_chance 1	/* mercenaries */
		#const GAIA_GUARDIAN_A 882	/* condottiero */
		#const GAIA_GUARDIAN_B 1012	/* elite genitour */
		#const GAIA_GUARDIAN_C 1233	/* elite kipchak */
	percent_chance 1	/* teutonic transport */
		set_gaia_civilization 4	/* teutons */
		#const GAIA_GUARDIAN_A 554	/* elite teutonic knight */
		#const GAIA_GUARDIAN_B 1105	/* normal siege tower */	
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* full gunpowder */
		#define GUNPOWDER_ARMY
		#const GAIA_GUARDIAN_A 1003	/* elite organ gun */
		#const GAIA_GUARDIAN_B 52	/* royal janissary */	
		#const GAIA_GUARDIAN_C 1709	/* houfnice */
	percent_chance 1	/* full trash */
		#const GAIA_GUARDIAN_A 359	/* halberdier */
		#const GAIA_GUARDIAN_B 1155	/* imperial skirmisher */
		#const GAIA_GUARDIAN_C 1707	/* winged hussar */
	percent_chance 1	/* full gold */
		#const GAIA_GUARDIAN_A 567	/* champion */
		#const GAIA_GUARDIAN_B 492	/* arbalest */
		#const GAIA_GUARDIAN_C 569	/* paladin */
	percent_chance 1	/* full infantry */
		#define INFANTRY_ARMY
		#const GAIA_GUARDIAN_A 567	/* champion */
		#const GAIA_GUARDIAN_B 752	/* elite eagle warrior */
		#const GAIA_GUARDIAN_C 882	/* condottiero */
	percent_chance 1	/* full archer */
		set_gaia_civilization 1	/* british */
		#const GAIA_GUARDIAN_A 868	/* elite genoese crossbowman */
		#const GAIA_GUARDIAN_B 1131	/* elite rattan archer */
		#const GAIA_GUARDIAN_C 530	/* elite longbowman */
	percent_chance 1	/* super heavy cav */
		#define CAVALRY_ARMY
		#const GAIA_GUARDIAN_A 207	/* imperial camel */
		#const GAIA_GUARDIAN_B 569	/* paladin */
		#const GAIA_GUARDIAN_C 1134	/* elite battle elephant */
	percent_chance 1	/* anti-siege */
		#const GAIA_GUARDIAN_A 871	/* elite magyar huszar */
		#const GAIA_GUARDIAN_B 561	/* elite mangudai */
		#const GAIA_GUARDIAN_C 1709	/* houfnice */

/* that was 29% so far */

	percent_chance 1	/* achaemenids */
		set_gaia_civilization 46	/* achaemenids */
		#const GAIA_GUARDIAN_A 2102	/* elite immortal */
		#const GAIA_GUARDIAN_B 2175 /* elite immortal ranged */
		#const GAIA_GUARDIAN_C 2151	/* elite war chariot */
	percent_chance 1	/* armenians */
		set_gaia_civilization 44	/* armenians */
		#const GAIA_GUARDIAN_A 567	/* champion */
		#const GAIA_GUARDIAN_B 1802	/* composite bowman */
		#const GAIA_GUARDIAN_C 1811	/* warrior priest */
	percent_chance 1	/* athenians */
		set_gaia_civilization 47	/* athenians */
		#const GAIA_GUARDIAN_A 2111	/* elite hoplite */
		#const GAIA_GUARDIAN_B 2228 /* elite strategos with taxiarchs */
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* aztecs */
		set_gaia_civilization 15	/* aztecs */
		#const GAIA_GUARDIAN_A 726	/* elite jaguar warrior */
		#const GAIA_GUARDIAN_B 6	/* elite skirmisher */
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* bengalis */
		set_gaia_civilization 41	/* bengalis */
		#const GAIA_GUARDIAN_A 1761	/* elite ratha ranged */
		#const GAIA_GUARDIAN_B 1134	/* elite battle elephant */
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* berbers */ 
		set_gaia_civilization 27	/* berbers */
		#const GAIA_GUARDIAN_A 330	/* heavy camel */
		#const GAIA_GUARDIAN_B 1009	/* elite camel archer */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */
	percent_chance 1	/* bohemians */
		set_gaia_civilization 39	/* bohemians */
		#const GAIA_GUARDIAN_A 359	/* halberdier */
		#const GAIA_GUARDIAN_B 1706	/* elite hussite wagon */
		#const GAIA_GUARDIAN_C 1709	/* houfnice */
	percent_chance 1	/* british */
		set_gaia_civilization 1	/* british */
		#const GAIA_GUARDIAN_A 359	/* halberdier */
		#const GAIA_GUARDIAN_B 530	/* elite longbowman */
		#const GAIA_GUARDIAN_C 42	/* trebuchet */
	percent_chance 1	/* bulgarians */
		set_gaia_civilization 32	/* bulgarians */
		#const GAIA_GUARDIAN_A 1227	/* elite konnik */
		#const GAIA_GUARDIAN_B 542	/* heavy scorpion */
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* burgandians */
		set_gaia_civilization 36	/* burgandians */
		#const GAIA_GUARDIAN_A 1699	/* flemish militia */
		#const GAIA_GUARDIAN_B 1657	/* elite coustillier */
		#const GAIA_GUARDIAN_C 125	/* monk */	
	percent_chance 1	/* burmese  */
		set_gaia_civilization 30	/*  burmese */
		#const GAIA_GUARDIAN_A 1134	/* elite battle elephant */
		#const GAIA_GUARDIAN_B 1128	/* elite arambai */
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* byzantines  */
		set_gaia_civilization 7	/*  byzantine */
		#const GAIA_GUARDIAN_A 6	/* elite skirmisher */
		#const GAIA_GUARDIAN_B 553	/* elite cataphract */
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* celt siege  */
		set_gaia_civilization 13	/*  celts */
		#const GAIA_GUARDIAN_A 542	/* heavy scorpion */
		#const GAIA_GUARDIAN_B 588	/* siege onager */
		#const GAIA_GUARDIAN_C 534	/* elite woad raider */
	percent_chance 1	/* chinese  */
		set_gaia_civilization 6	/* chinese */
		#const GAIA_GUARDIAN_A 567	/* champion */
		#const GAIA_GUARDIAN_B 559	/* elite chu ku nu */
		#const GAIA_GUARDIAN_C 542	/* heavy scorpion */
	percent_chance 1	/* cumans */
		set_gaia_civilization 34	/* cumans */
		#const GAIA_GUARDIAN_A 1372	/* elite steppe lancer */
		#const GAIA_GUARDIAN_B 1233	/* elite kipchak */
		#const GAIA_GUARDIAN_C 569	/* paladin */	
	percent_chance 1	/* dravidians */
		set_gaia_civilization 40	/* dravidians */
		#const GAIA_GUARDIAN_A 1737	/* elite urumi sworsman */
		#const GAIA_GUARDIAN_B 875	/* elite elephant archer */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */		
	percent_chance 1	/* ethiopians */
		set_gaia_civilization 25	/* ethiopians */
		#const GAIA_GUARDIAN_A 1018	/* elite shotel warrior */
		#const GAIA_GUARDIAN_B 542	/* heavy scorpion */
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* franks */
		set_gaia_civilization 2	/* french */
		#const GAIA_GUARDIAN_A 531	/* elite throwing axeman */
		#const GAIA_GUARDIAN_B 569	/* paladin */
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* georgians */
		set_gaia_civilization 45	/* georgians */
		#const GAIA_GUARDIAN_A 283	/* cavalier */
		#const GAIA_GUARDIAN_B 1805	/* elite monaspa */
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* goths */
		set_gaia_civilization 3	/* goths */
		#const GAIA_GUARDIAN_A 567	/* champion */
		#const GAIA_GUARDIAN_B 555	/* elite huskarl */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */
	percent_chance 1	/* gurjaras */
		set_gaia_civilization 42	/* gurjaras */
		#const GAIA_GUARDIAN_A 1753	/* elite shrivamsha rider */
		#const GAIA_GUARDIAN_B 1743	/* elite chakram thrower */
		#const GAIA_GUARDIAN_C 875	/* elite elephant archer */
	percent_chance 1	/* hindustanis */
		set_gaia_civilization 20	/* indians */
		#const GAIA_GUARDIAN_A 207	/* imperial camel */
		#const GAIA_GUARDIAN_B 1749	/* elite ghulam */
		#const GAIA_GUARDIAN_C 5	/* hand cannoneer */
	percent_chance 1	/* huns */
		set_gaia_civilization 17 /* huns */
		#const GAIA_GUARDIAN_A 757	/* elite tarkan */
		#const GAIA_GUARDIAN_B 474	/* heavy cavalry archer */
		#const GAIA_GUARDIAN_C 569	/* paladin */	
	percent_chance 1	/* incas  */
		set_gaia_civilization 21	/* incas */
		#const GAIA_GUARDIAN_A 752	/* elite eagle warrior */
		#const GAIA_GUARDIAN_B 881	/* elite kamayuk */
		#const GAIA_GUARDIAN_C 185	/* slinger */
	percent_chance 1	/* italians */
		set_gaia_civilization 19	/* italians */
		#const GAIA_GUARDIAN_A 868	/* elite genoese crossbowman */
		#const GAIA_GUARDIAN_B 5	/* hand cannoneer */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */			
	percent_chance 1	/* japan */
		set_gaia_civilization 5	/* japanese */
		#const GAIA_GUARDIAN_A 359	/* halberdier */
		#const GAIA_GUARDIAN_B 560	/* elite samurai */
		#const GAIA_GUARDIAN_C 492	/* arbalest */
	percent_chance 1	/* khmer */
		set_gaia_civilization 28	/* khmer */
		#const GAIA_GUARDIAN_A 1134	/* elite battle elephant */
		#const GAIA_GUARDIAN_B 1122	/* elite ballista elephant */
		#const GAIA_GUARDIAN_C 542	/* heavy scorpion */
	percent_chance 1	/* koreans */
		set_gaia_civilization 18	/* koreans */
		#const GAIA_GUARDIAN_A 359	/* halberdier */
		#const GAIA_GUARDIAN_B 829	/* elite war wagon */
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* lithuanians */
		set_gaia_civilization 35	/* lithuanians */
		#const GAIA_GUARDIAN_A 1236	/* elite leitis */
		#const GAIA_GUARDIAN_B 569	/* paladin */	
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* magyars */
		set_gaia_civilization 22	/* magyars */
		#const GAIA_GUARDIAN_A 871	/* elite magyar huszar */
		#const GAIA_GUARDIAN_B 474	/* heavy cavalry archer */	
		#const GAIA_GUARDIAN_C 569	/* paladin */	
	percent_chance 1	/* malay */
		set_gaia_civilization 29	/* malay */
		#const GAIA_GUARDIAN_A 1125	/* elite karambit */
		#const GAIA_GUARDIAN_B 492	/* arbalest */
		#const GAIA_GUARDIAN_C 1134	/* elite battle elephant */
	percent_chance 1	/* malians */
		set_gaia_civilization 26	/* malians */
		#const GAIA_GUARDIAN_A 567	/* champion */
		#const GAIA_GUARDIAN_B 1013	/* elite gbeto */
		#const GAIA_GUARDIAN_C 330	/* heavy camel */
	percent_chance 1	/* mayans */
		set_gaia_civilization 16	/*  mayans */
		#const GAIA_GUARDIAN_A 752	/* elite eagle warrior */
		#const GAIA_GUARDIAN_B 763	/* elite plumed archer */
		#const GAIA_GUARDIAN_C 1570	/* xolotl warrior */
	percent_chance 1	/* mongols */
		set_gaia_civilization 12	/* mongols */
		#const GAIA_GUARDIAN_A 1372	/* elite steppe lancer */
		#const GAIA_GUARDIAN_B 561	/* elite mangudai */
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* persians */
		set_gaia_civilization 8	/* persians */
		#const GAIA_GUARDIAN_A 1813	/* savar */	
		#const GAIA_GUARDIAN_B 558	/* elite war elephant */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */
	percent_chance 1	/* poles */
		set_gaia_civilization 38	/* poles */
		#const GAIA_GUARDIAN_A 1703	/* elite obuch */
		#const GAIA_GUARDIAN_B 1707	/* winged hussar */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */
	percent_chance 1	/* portuguese */
		set_gaia_civilization 24	/* portuguese */
		#const GAIA_GUARDIAN_A 5	/* hand cannoneer */	
		#const GAIA_GUARDIAN_B 1003	/* elite organ gun */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */
	percent_chance 1	/* romans */
		set_gaia_civilization 43	/* romans */
		#const GAIA_GUARDIAN_A 1793	/* legionary */	
		#const GAIA_GUARDIAN_B 542	/* heavy scorpion */
		#const GAIA_GUARDIAN_C 1792	/* elite centurion */
	percent_chance 1	/* saraceans */
		set_gaia_civilization 9	/* saraceans */
		#const GAIA_GUARDIAN_A 330	/* heavy camel */
		#const GAIA_GUARDIAN_B 556	/* elite mameluke */
		#const GAIA_GUARDIAN_C 474	/* heavy cavalry archer */
	percent_chance 1	/* sicillians */
		set_gaia_civilization 37	/* sicillians */
		#const GAIA_GUARDIAN_A 1661	/* elite serjeant */
		#const GAIA_GUARDIAN_B 492	/* arbalest */
		#const GAIA_GUARDIAN_C 542	/* heavy scorpion */
	percent_chance 1	/* slavs */
		set_gaia_civilization 23	/* slavs */
		#const GAIA_GUARDIAN_A 567	/* champion */
		#const GAIA_GUARDIAN_B 878	/* elite boyar */
		#const GAIA_GUARDIAN_C 125	/* monk */
	percent_chance 1	/* spanish */
		set_gaia_civilization 14	/* spanish */
		#const GAIA_GUARDIAN_A 773	/* elite conquistador */
		#const GAIA_GUARDIAN_B 775	/* missionary */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */
	percent_chance 1	/* spartans */
		set_gaia_civilization 48	/* spartans */
		#const GAIA_GUARDIAN_A 2188	/* elite hoplite with xyphos */
		#const GAIA_GUARDIAN_B 2108 /* elite hippeus */
		#const GAIA_GUARDIAN_C 2270	/* polemarch age4 with ephorate */
	percent_chance 1	/* tatars */
		set_gaia_civilization 33	/* tatars */
		#const GAIA_GUARDIAN_A 1230	/* elite keshik */
		#const GAIA_GUARDIAN_B 474	/* heavy cavalry archer */
		#const GAIA_GUARDIAN_C 42	/* trebuchet */
	percent_chance 1	/* teutons */
		set_gaia_civilization 4	/* teutons */
		#const GAIA_GUARDIAN_A 554	/* elite teuonic knight */
		#const GAIA_GUARDIAN_B 569	/* paladin */	
		#const GAIA_GUARDIAN_C 588	/* siege onager */
	percent_chance 1	/* turks */
		set_gaia_civilization 10	/* turks */
		#const GAIA_GUARDIAN_A 441	/* hussar */
		#const GAIA_GUARDIAN_B 557	/* elite janissary */	
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */	
	percent_chance 1	/* vietnamese */
		set_gaia_civilization 31	/* vietnamese */
		#const GAIA_GUARDIAN_A 1131	/* elite rattan archer */
		#const GAIA_GUARDIAN_B 1134	/* elite battle elephant */
		#const GAIA_GUARDIAN_C 36	/* bombard cannon */
	percent_chance 1	/* vikings */
		set_gaia_civilization 11	/* vikings */
		#const GAIA_GUARDIAN_A 694	/* elite berserk */
		#const GAIA_GUARDIAN_B 492	/* arbalest */
		#const GAIA_GUARDIAN_C 542	/* heavy scorpion */	
		
		
			
	percent_chance 100	/* imperial roman - used as the fallback */
		#const GAIA_GUARDIAN_A 1	/* imperial legionary */
		#const GAIA_GUARDIAN_B 275	/* imperial centurion */
		#const GAIA_GUARDIAN_C 542	/* heavy scorpion */		
end_random


if CAMEL_ARMY
	start_random
		percent_chance 24	set_gaia_civilization 9	/* saraceans */
		percent_chance 25	set_gaia_civilization 20	/* hindustanis */
		percent_chance 25	set_gaia_civilization 27	/* berbers */
		percent_chance 25	set_gaia_civilization 42	/* gurjaras */
	end_random
endif
if MONK_ARMY
	start_random
		percent_chance 33	set_gaia_civilization 14	/* spanish */
		percent_chance 33	set_gaia_civilization 15	/* aztecs */
		percent_chance 33	set_gaia_civilization 41	/* bengalis */
	end_random
endif
if ELEPHANT_ARMY
	start_random
		percent_chance 33	set_gaia_civilization 28	/* khmer */
		percent_chance 33	set_gaia_civilization 40	/* dravidians */
		percent_chance 33	set_gaia_civilization 41	/* bengalis */
	end_random
endif
if SIEGE_ARMY
	start_random
		percent_chance 24	set_gaia_civilization 13	/*  celts */
		percent_chance 25	set_gaia_civilization 25	/* ethiopians */
		percent_chance 25	set_gaia_civilization 4	/* teutons */
		percent_chance 25	set_gaia_civilization 43	/* romans */
	end_random
endif
if MAGYAR_MALAY_ARMY
	start_random
		percent_chance 49	set_gaia_civilization 22	/* magyars */
		percent_chance 50	set_gaia_civilization 29	/* malay */
	end_random
endif
if GUNPOWDER_ARMY
	start_random
		percent_chance 24	set_gaia_civilization 10	/* turks */
		percent_chance 25	set_gaia_civilization 14	/* spanish */
		percent_chance 25	set_gaia_civilization 20	/* hindustanis */
		percent_chance 25	set_gaia_civilization 24	/* portuguese */
	end_random
endif
if INFANTRY_ARMY
	start_random
		percent_chance 49	set_gaia_civilization 11	/* vikings */
		percent_chance 50	set_gaia_civilization 5	/* japanese */
	end_random	
endif
if CAVALRY_ARMY
	start_random
		percent_chance 49	set_gaia_civilization 2	/* french */
		percent_chance 50	set_gaia_civilization 34	/* cumans */
	end_random
endif

/* =================================================================================================== */
/* starting units and buildings */

if BATTLE_ROYALE
#define INFINITE_RESOURCES

/* starting units */
if REGICIDE
	create_object KING {
		set_place_for_every_player
		find_closest
	}
endif
create_object SCYTHIAN_SCOUT {
	number_of_objects 1
	set_place_for_every_player
	max_distance_to_players 3
	set_circular_placement
}
create_object GENGHIS_KHAN {
	number_of_objects 1
	set_place_for_every_player
	max_distance_to_players 3
	set_circular_placement
}
create_object EL_CID_CAMPEADOR {
	number_of_objects 1
	set_place_for_every_player
	max_distance_to_players 3
	set_circular_placement
}

create_object CASTLE {
	number_of_objects 1
	set_gaia_object_only
	place_on_specific_land_id 22
	max_distance_to_players 0
	actor_area 8889
	actor_area_radius 23
}

/* battle royale camps */

/* large castle camps */
create_object BLANKOBJECT {
	number_of_objects rnd(600,700)
	set_gaia_object_only
	place_on_specific_land_id 22
	find_closest
	min_distance_to_players 23
	set_circular_placement
	actor_area 7023
	actor_area_radius 0
}
create_object BLANKOBJECT {
	number_of_objects 1
	set_scaling_to_player_number
	place_on_specific_land_id 22
	min_distance_to_players 23
	set_circular_placement
	avoid_actor_area 7023
	find_closest
	temp_min_distance_group_placement 12
	actor_area 9000
	actor_area_radius 12
}
create_object CASTLE {
	number_of_objects 1
	set_gaia_object_only
	set_place_for_every_player
	find_closest
	actor_area_to_place_in 9000
	actor_area 9001
	actor_area_radius 6
}

create_object BR_TRADE_WORKSHOP {
	number_of_objects 1
	set_gaia_object_only
	set_place_for_every_player
	actor_area_to_place_in 9001
	find_closest
	actor_area 9020
	actor_area_radius 12
}
create_object SIEGE_WORKSHOP {
	number_of_objects 1
	set_gaia_object_only
	set_place_for_every_player
	actor_area_to_place_in 9001
	find_closest
}
create_object MONASTERY {
	number_of_objects 1
	set_gaia_object_only
	set_place_for_every_player
	actor_area_to_place_in 9001
	find_closest
}
create_object GAIA_GUARDIAN_C {
	number_of_objects 3
	set_gaia_object_only
	set_gaia_unconvertible
	set_place_for_every_player
	actor_area_to_place_in 9001
}
create_object GAIA_GUARDIAN_B {
	number_of_objects 15
	set_gaia_object_only
	set_gaia_unconvertible
	set_place_for_every_player
	actor_area_to_place_in 9001
}
create_object GAIA_GUARDIAN_A {
	number_of_objects 25
	set_gaia_object_only
	set_gaia_unconvertible
	set_place_for_every_player
	actor_area_to_place_in 9001
}
/* castle camps done */

/* docks */
create_object DOCK {
	number_of_objects 100
	set_gaia_object_only
	temp_min_distance_group_placement 14
	actor_area 9002
	actor_area_radius 4
	min_distance_to_players 10
	set_circular_placement
	avoid_actor_area 7655
}
create_object GAIA_GUARDIAN_A {
	number_of_objects 100
	set_gaia_object_only
	set_gaia_unconvertible
	actor_area_to_place_in 9002
	find_closest
	temp_min_distance_group_placement 12
}

/* production camps */
create_object BARRACKS {
	number_of_objects 9320
	set_gaia_object_only
	actor_area 9008
	actor_area_radius 4
	temp_min_distance_group_placement 32
	avoid_actor_area 8889
	avoid_actor_area 9000
	avoid_actor_area 9001
	avoid_actor_area 9002
	avoid_actor_area 9020
	min_distance_to_players 10
	set_circular_placement
}
create_object ARCHERY_RANGE {
	number_of_objects 9320
	set_gaia_object_only
	temp_min_distance_group_placement 20
	actor_area_to_place_in 9008
	actor_area 9020
	actor_area_radius 12
}
create_object STABLE {
	number_of_objects 9320
	set_gaia_object_only
	temp_min_distance_group_placement 20
	actor_area_to_place_in 9008
}
create_object GAIA_GUARDIAN_A {
	number_of_objects 9320
	set_gaia_object_only
	set_gaia_unconvertible
	temp_min_distance_group_placement 20
	actor_area_to_place_in 9008
}

/* trade workshop camps */
create_object BR_TRADE_WORKSHOP {
	number_of_objects 9320
	set_gaia_object_only
	actor_area 9009
	actor_area_radius 3
	temp_min_distance_group_placement 30
	avoid_actor_area 8889
	avoid_actor_area 9000
	avoid_actor_area 9001
	avoid_actor_area 9002
	avoid_actor_area 9008
	avoid_actor_area 9020
	min_distance_to_players 10
	set_circular_placement
}
create_object KEEP {
	number_of_objects 9320
	set_gaia_object_only
	temp_min_distance_group_placement 20
	actor_area_to_place_in 9009
}
create_object GAIA_GUARDIAN_A {
	number_of_objects 9320
	set_gaia_object_only
	set_gaia_unconvertible
	temp_min_distance_group_placement 20
	actor_area_to_place_in 9009
}

/* end battle royale */

/* =================================================================================================== */
/* support empire wars game mode */
elseif EW_DARK

create_object TOWN_CENTER {
	set_place_for_every_player
	max_distance_to_players 0
	second_object SHEEP_A
}

if SUDDEN_DEATH
	if USE_NOMAD_SETUP
	else
		create_object FLAG_C {
		set_place_for_every_player
		number_of_objects 4
		min_distance_to_players 3
		find_closest
		}
	endif
endif

create_object BERRY_TYPE {
	number_of_objects 6
	group_placement_radius 3
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	if MINI_OR_SMALLER min_distance_to_players 8
	else min_distance_to_players 10
	endif
	set_circular_placement
	find_closest
	actor_area 14
	actor_area_radius 2
	avoid_forest_zone 4
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}
create_object MILL {
	set_place_for_every_player
	actor_area_to_place_in 14	/* berries */
	find_closest
	actor_area 40
	actor_area_radius 6
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 6
	actor_area_to_place_in 14	/* berries */
	actor_area 94
	actor_area_radius 6
	force_placement
	find_closest
}

create_object STRAGGLER_A {
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 4
	set_circular_placement
	find_closest
	actor_area 23
	actor_area_radius 1
	avoid_actor_area 40
	avoid_actor_area 94
}
create_object STRAGGLER_B {
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 4
	find_closest
	actor_area 24
	actor_area_radius 1
	avoid_forest_zone 3
	avoid_actor_area 40
	avoid_actor_area 94
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 2
	actor_area_to_place_in 23	/* straggler */
	force_placement
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 2
	actor_area_to_place_in 24	/* straggler */
	force_placement
}	

create_object LUMBER_CAMP {
	set_place_for_every_player
	place_on_forest_zone
	min_distance_to_players 7
	find_closest
	actor_area 8
	actor_area_radius 4
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 40	/* mill */
	avoid_actor_area 171	/* gold villagers */
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 4
	actor_area_to_place_in 8
	place_on_forest_zone
	actor_area 71
	actor_area_radius 4
	find_closest
	force_placement
}

create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_forest_zone 2
}

/* regicide for empire wars */
if REGICIDE
	create_object CASTLE {
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 12
		find_closest_to_map_center
		actor_area 661
		actor_area_radius 6
		avoid_actor_area 94	/* berry villagers */
		avoid_actor_area 40	/* mill */
		avoid_actor_area 8	/* lumbercamp */
	}
	create_object KING {
		set_place_for_every_player
		actor_area_to_place_in 661
		find_closest
	}
endif

create_object SCOUT {
	set_place_for_every_player
	min_distance_to_players 12
	set_circular_placement
	find_closest
	avoid_forest_zone 1
	avoid_cliff_zone 3
	min_distance_group_placement 1
}

create_object STRAGGLER_A {
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 5
	set_circular_placement
	find_closest
	avoid_forest_zone 3
	avoid_actor_area 14
	avoid_actor_area 40
	avoid_actor_area 94
	avoid_actor_area 23
	avoid_actor_area 24
	avoid_actor_area 8
	avoid_actor_area 71
	avoid_actor_area 661
}
create_object STRAGGLER_B {
	number_of_objects 2
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 4
	find_closest
	avoid_forest_zone 3
	avoid_actor_area 14
	avoid_actor_area 40
	avoid_actor_area 94
	avoid_actor_area 23
	avoid_actor_area 24
	avoid_actor_area 8
	avoid_actor_area 71
	avoid_actor_area 661
}

/* walls */
if NO_CONNECTIONS
elseif USE_WALLS	#define PLACE_WALLS
endif

/* ew walls */
if PLACE_WALLS 
	#const WALL_TYPE 72		/* palisade */

	create_object WALL_TYPE {
	set_place_for_every_player
	min_distance_to_players 16
	max_distance_to_players 20
	set_circular_placement
	min_distance_group_placement 2
	}	
endif

elseif EW_FEUDAL	/* =================================================================================================== */

create_object TOWN_CENTER {
	set_place_for_every_player
	max_distance_to_players 0
	second_object SHEEP_A
}

if USE_SMALL_PONDS
elseif WATER_IS_DRY
elseif WATER_BASED_MAP	#define EW_WATER
elseif CENTER_IS_WATER	#define EW_WATER
elseif CENTER_IS_SHALLOWS	#define EW_WATER
elseif CORNERS_ARE_WATER	#define EW_WATER
elseif CORNERS_ARE_SHALLOWS	#define EW_WATER
elseif SIDES_ARE_WATER	#define EW_WATER
elseif SIDES_ARE_SHALLOWS	#define EW_WATER
endif

if SUDDEN_DEATH
	if USE_NOMAD_SETUP
	else
		create_object FLAG_C {
		set_place_for_every_player
		number_of_objects 4
		min_distance_to_players 3
		find_closest
		}
	endif
endif

create_object BERRY_TYPE {
	number_of_objects 6
	group_placement_radius 3
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	if MINI_OR_SMALLER min_distance_to_players 8
	else min_distance_to_players 10
	endif
	set_circular_placement
	find_closest
	actor_area 14
	actor_area_radius 2
	avoid_forest_zone 4
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}

if EW_WATER /* try to place a dock and finishing ships */
	create_object TEMPORARY_OBJECT_GRID {
		second_object DOCK
		ignore_terrain_restrictions
		terrain_to_place_on BEACH_A
		set_place_for_every_player
		avoid_actor_area 7655
		find_closest
		actor_area 225
		actor_area_radius 6
	}
	create_object FISHING_SHIP {
		ignore_terrain_restrictions
		terrain_to_place_on BEACH_A
		set_place_for_every_player
		number_of_objects 4
		avoid_actor_area 7655
		find_closest
		temp_min_distance_group_placement 0
		actor_area 226
		actor_area_radius 1000
	}
endif

/* empire wars farms reduced to 2 */
create_object FARM {
	set_place_for_every_player
	min_distance_to_players 3
	find_closest
	actor_area 21
	actor_area_radius 0
	second_object VILLAGER
}
create_object FARM {
	set_place_for_every_player
	min_distance_to_players 3
	find_closest
	actor_area 22
	actor_area_radius 0
	second_object VILLAGER
}
create_object STRAGGLER_A {
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 4
	set_circular_placement
	find_closest
	actor_area 23
	actor_area_radius 1
	avoid_actor_area 21	/* farm */
	avoid_actor_area 22	/* farm */
	avoid_actor_area 226	/* fishing ships succesfully placed */
}
create_object STRAGGLER_B {
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 4
	find_closest
	actor_area 24
	actor_area_radius 1
	avoid_actor_area 21	/* farm */
	avoid_actor_area 22	/* farm */
	avoid_actor_area 23	/* straggler */
	avoid_forest_zone 3
	avoid_actor_area 226	/* fishing ships succesfully placed */
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 2
	actor_area_to_place_in 23	/* straggler */
	force_placement
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 2
	actor_area_to_place_in 24	/* straggler */
	force_placement
}	

create_object MILL {
	set_place_for_every_player
	actor_area_to_place_in 14	/* berries */
	find_closest
	actor_area 40
	actor_area_radius 6
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 5
	actor_area_to_place_in 14	/* berries */
	actor_area 94
	actor_area_radius 6
	force_placement
	find_closest
}

create_object GOLD {
	number_of_objects 7
	group_placement_radius 3
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	if MINI_OR_SMALLER min_distance_to_players 8
	else min_distance_to_players 11
	endif
	set_circular_placement
	find_closest
	max_distance_to_other_zones 3
	avoid_forest_zone 3
	avoid_cliff_zone 3
	actor_area 12
	actor_area_radius 1
	avoid_actor_area 40	/* mill */
	avoid_actor_area 94	/* berry villagers */
}
create_object MINING_CAMP {
	set_place_for_every_player
	find_closest
	actor_area_to_place_in 12	/* primary gold */
	actor_area 10
	actor_area_radius 2
	avoid_forest_zone 1
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 5
	actor_area_to_place_in 12	/* primary gold */
	actor_area 171
	actor_area_radius 5
	find_closest
	force_placement
}

create_object LUMBER_CAMP {
	set_place_for_every_player
	place_on_forest_zone
	min_distance_to_players 7
	find_closest
	actor_area 8
	actor_area_radius 4
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 40	/* mill */
	avoid_actor_area 171	/* gold villagers */
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 4
	actor_area_to_place_in 8
	place_on_forest_zone
	actor_area 71
	actor_area_radius 4
	find_closest
	force_placement
}
create_object LUMBER_CAMP {
	set_place_for_every_player
	place_on_forest_zone
	min_distance_to_players 7
	find_closest 
	actor_area 9
	actor_area_radius 4
	avoid_actor_area 71	/* wood villagers */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 40	/* mill */
	avoid_actor_area 171	/* gold villagers */
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 4
	actor_area_to_place_in 9
	place_on_forest_zone
	actor_area 72
	actor_area_radius 4
	find_closest
	force_placement
}
create_object LUMBER_CAMP {
	set_place_for_every_player
	place_on_forest_zone
	min_distance_to_players 7
	find_closest 
	actor_area 99
	actor_area_radius 4
	avoid_actor_area 71	/* wood villagers */
	avoid_actor_area 72	/* wood villagers */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 40	/* mill */
	avoid_actor_area 171	/* gold villagers */
}
create_object VILLAGER {
	set_place_for_every_player
	number_of_objects 4
	actor_area_to_place_in 99
	place_on_forest_zone
	actor_area 73
	actor_area_radius 5
	find_closest
	force_placement
}
create_object BLACKSMITH {
	set_place_for_every_player
	min_distance_to_players 8
	find_closest
	actor_area 80
	actor_area_radius 4
	avoid_actor_area 94 /* berry villagers */
	avoid_actor_area 40 /* mill */
	avoid_actor_area 8 /* lumbercamp */
	avoid_actor_area 9 /* lumbercamp */
	avoid_actor_area 99 /* lumbercamp */
	avoid_actor_area 171 /* gold villagers */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_actor_area 9	/* lumbercamp */
	avoid_actor_area 99	/* lumbercamp */
	avoid_actor_area 171	/* gold villagers */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_actor_area 9	/* lumbercamp */
	avoid_actor_area 99	/* lumbercamp */
	avoid_actor_area 171	/* gold villagers */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_actor_area 9	/* lumbercamp */
	avoid_actor_area 99	/* lumbercamp */
	avoid_actor_area 171	/* gold villagers */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_actor_area 9	/* lumbercamp */
	avoid_actor_area 99	/* lumbercamp */
	avoid_actor_area 171	/* gold villagers */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_actor_area 9	/* lumbercamp */
	avoid_actor_area 99	/* lumbercamp */
	avoid_actor_area 171	/* gold villagers */
	avoid_forest_zone 2
}
create_object HOUSE {
	set_place_for_every_player
	min_distance_to_players 7
	find_closest
	avoid_actor_area 40	/* mill */
	avoid_actor_area 10	/* mining camp */
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 8	/* lumbercamp */
	avoid_actor_area 9	/* lumbercamp */
	avoid_actor_area 99	/* lumbercamp */
	avoid_actor_area 171	/* gold villagers */
	avoid_forest_zone 2
}
create_object BARRACKS {
	set_place_for_every_player
	min_distance_to_players 8
	find_closest
	actor_area 51
	actor_area_radius 5
	avoid_actor_area 94	/* berry villagers */
	avoid_actor_area 40	/* mill */
	avoid_actor_area 8	/* lumbercamp */
	avoid_actor_area 9	/* lumbercamp */
	avoid_actor_area 99	/* lumbercamp */
	avoid_actor_area 171	/* gold villagers */
	avoid_forest_zone 2
}

/* regicide for empire wars */
if REGICIDE
	create_object CASTLE {
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 12
		find_closest_to_map_center
		actor_area 661
		actor_area_radius 6
		avoid_actor_area 94	/* berry villagers */
		avoid_actor_area 40	/* mill */
		avoid_actor_area 8	/* lumbercamp */
		avoid_actor_area 9	/* lumbercamp */
		avoid_actor_area 99	/* lumbercamp */
		avoid_actor_area 171	/* gold villagers */
		avoid_actor_area 51	/* barracks */
	}
	create_object KING {
		set_place_for_every_player
		actor_area_to_place_in 661
		find_closest
	}
endif

create_object SCOUT {
	set_place_for_every_player
	min_distance_to_players 12
	set_circular_placement
	find_closest
	avoid_forest_zone 1
	avoid_cliff_zone 3
	min_distance_group_placement 1
}

/* walls */
if NO_CONNECTIONS
elseif USE_WALLS	#define PLACE_WALLS
endif

/* ew walls */
if PLACE_WALLS 
	start_random
		percent_chance 49	#const WALL_TYPE 72		/* palisade */
		percent_chance 50	#const WALL_TYPE 119	/* fortified palisade */
	end_random

	create_object WALL_TYPE {
	set_place_for_every_player
	min_distance_to_players 17
	max_distance_to_players 23
	set_circular_placement
	min_distance_group_placement 2
	}	
endif


/* end empire wars */

elseif USE_STANDARD_STARTING_UNITS	/* =================================================================================================== */

create_object TOWN_CENTER {
	set_place_for_every_player
	if USE_NOMAD_SETUP	number_of_objects 0
	else				number_of_objects 1
	endif
	max_distance_to_players 0
}

if SUDDEN_DEATH
	if USE_NOMAD_SETUP
	else
		create_object FLAG_C {
		set_place_for_every_player
		number_of_objects 4
		min_distance_to_players 3
		find_closest
		}
	endif
endif

/* walls */
if NO_CONNECTIONS
elseif USE_WALLS	#define PLACE_WALLS
endif

/* in the standard start, we limit to versions without excessive HP */
if PLACE_WALLS 
	start_random
		percent_chance 33	#const WALL_TYPE 72		/* palisade */
		percent_chance 33	#const WALL_TYPE 117	/* stone */
		percent_chance 33	#const WALL_TYPE 119	/* fortified palisade */
	end_random

	create_object WALL_TYPE {
	set_place_for_every_player
	if INCREDIBLE_OR_LARGER
		min_distance_to_players 36
		max_distance_to_players 36
	elseif 36x36
		min_distance_to_players 6
		max_distance_to_players 6
	elseif MINI_OR_SMALLER
		min_distance_to_players 9
		max_distance_to_players 9		
	else
		min_distance_to_players 17
		max_distance_to_players 17
	endif
	min_distance_group_placement 2
	}	
endif

create_object VILLAGER {
	set_place_for_every_player
	if USE_NOMAD_SETUP
		if PERSONAL_RESOURCES
			min_distance_group_placement 1
			min_distance_to_players 5
			temp_min_distance_group_placement 13
			find_closest
			set_circular_placement			
		else
			avoid_forest_zone 3
			avoid_cliff_zone 3
			min_distance_group_placement 2
			actor_area 888
			actor_area_radius 8
			avoid_actor_area 8
			if 36x36	min_distance_to_map_edge 4	temp_min_distance_group_placement 5	
			elseif TINY_OR_SMALLER	min_distance_to_map_edge 10	temp_min_distance_group_placement 18 avoid_actor_area 999
			elseif HUGE_OR_LARGER	min_distance_to_map_edge 25 temp_min_distance_group_placement 40 avoid_actor_area 999
			else	min_distance_to_map_edge 15	temp_min_distance_group_placement 22 avoid_actor_area 999
			endif
		endif
	else
		min_distance_group_placement 1
		min_distance_to_players 5
		max_distance_to_players 7
		set_circular_placement
	endif
}

if REGICIDE
	create_object KING {
	set_place_for_every_player
	min_distance_group_placement 2
	if USE_NOMAD_SETUP
		if PERSONAL_RESOURCES
			min_distance_to_players 6
			set_circular_placement
			find_closest	
		else
			min_distance_to_players 25
			set_circular_placement
			avoid_forest_zone 3
			avoid_cliff_zone 3
			avoid_actor_area 999
			actor_area 888
			actor_area_radius 8
			avoid_actor_area 8
			if 36x36	min_distance_to_map_edge 4
			elseif TINY_OR_SMALLER	min_distance_to_map_edge 10
			elseif HUGE_OR_LARGER	min_distance_to_map_edge 25
			else	min_distance_to_map_edge 15
			endif

		endif
	else
		min_distance_to_players 6
		set_circular_placement
		find_closest
	endif
	}
endif

if USE_NOMAD_SETUP
/* no scout */
else
	create_object SCOUT {
	set_place_for_every_player
	min_distance_group_placement 2
	min_distance_to_players 6
	max_distance_to_players 8
	set_circular_placement
	}
endif

if REGICIDE
if REGICIDE_ONLY_KING
else
	if USE_NOMAD_SETUP
	elseif 36x36
	else
	create_object VILLAGER {
	number_of_objects 7
	set_place_for_every_player
	min_distance_to_players 5
	max_distance_to_players 8
	set_circular_placement
	}
	create_object CASTLE {
	set_place_for_every_player
	min_distance_to_players 6
	max_distance_to_players 12
	find_closest_to_map_center
	set_circular_placement
	min_distance_group_placement 2
	}
	endif
endif
endif



else /* random starting units */ /* =================================================================================================== */


if ONLY_STANDARD_WALL_TYPES
	start_random
		percent_chance 49	#const WALL_TYPE 72		/* palisade */	#define WEAK_WALL
		percent_chance 50	#const WALL_TYPE 117	/* stone */	#define STRONG_WALL
	end_random
elseif NO_STONG_WALLS
	start_random
		percent_chance 21	#const WALL_TYPE 72		/* palisade */	#define WEAK_WALL
		percent_chance 22	#const WALL_TYPE 117	/* stone */	#define STRONG_WALL
		percent_chance 22	#const WALL_TYPE 119	/* fortified palisade */	#define WEAK_WALL
		percent_chance 12	#const WALL_TYPE 1062	/* fence */	
		percent_chance 22	#const WALL_TYPE 788	/* sea wall */	#define WEAK_WALL
	end_random
else
	start_random
		percent_chance 13	#const WALL_TYPE 72		/* palisade */	#define WEAK_WALL
		percent_chance 14	#const WALL_TYPE 117	/* stone */	#define STRONG_WALL
		percent_chance 14	#const WALL_TYPE 155	/* fortified */	#define STRONG_WALL
		percent_chance 14	#const WALL_TYPE 370	/* twal */	#define STRONG_WALL
		percent_chance 14	#const WALL_TYPE 119	/* fortified palisade */	#define WEAK_WALL
		percent_chance 8	#const WALL_TYPE 231	/* Aqueduct */	#define STRONG_WALL
		percent_chance 8	#const WALL_TYPE 1062	/* fence */	
		percent_chance 14	#const WALL_TYPE 788	/* sea wall */	#define WEAK_WALL
	end_random
endif

/* for a second_ring */
if ONLY_STANDARD_WALL_TYPES
	#const SECOND_WALL_TYPE 72		/* palisade */
else
	start_random
		percent_chance 24	#const SECOND_WALL_TYPE 72		/* palisade */
		percent_chance 25	#const SECOND_WALL_TYPE 119		/* fortified palisade */
		percent_chance 25	#const SECOND_WALL_TYPE 1062	/* fence */
		percent_chance 25	#const SECOND_WALL_TYPE 788	/* sea wall */
	end_random
endif


/* walled center when using capture the relic or king of the the hill */
if SPECIAL_CENTER
	if USE_NOMAD_SETUP
	elseif MINI_OR_SMALLER
	elseif USE_NEUTRAL_MARKET
		start_random
			percent_chance 1	#define WALLED_CENTER
		end_random
	else
		start_random
			percent_chance 24	#define WALLED_CENTER
		end_random
	endif
endif
if WALLED_CENTER	#define NO_GAIA_ARMIES
	create_object BLANKOBJECT {
		second_object WALL_TYPE
		set_place_for_every_player
		number_of_objects 1000
		actor_area_to_place_in 997
		avoid_actor_area 998
	}
endif


/* small chance of happening during nomad */
if GIVE_PACKED_TC
	create_object PACKED_TOWN_CENTER {
		set_place_for_every_player
		if USE_NOMAD_SETUP
			avoid_forest_zone 4
			avoid_cliff_zone 4
			avoid_actor_area 999
			min_distance_group_placement 3
		else
			min_distance_to_players 5
			max_distance_to_players 7
			set_circular_placement
			min_distance_group_placement 1
		endif
	}
endif
/* chance of happening during nomad */
if GIVE_MULE_CART
	create_object MULE_CART {
		set_place_for_every_player
		if USE_NOMAD_SETUP
			avoid_forest_zone 4
			avoid_cliff_zone 4
			avoid_actor_area 999
			min_distance_group_placement 3
		else
			min_distance_to_players 5
			max_distance_to_players 7
			set_circular_placement
			min_distance_group_placement 1
		endif
	}
endif

/* 0 to 3 town centers possible */	
create_object TOWN_CENTER {
set_place_for_every_player
if USE_NOMAD_SETUP	number_of_objects 0
else
	if EXTREME_BUILDINGS
		start_random
			percent_chance 84
				number_of_objects 1
				max_distance_to_players 0
			percent_chance 10
				number_of_objects 2	#define USE_2_TCS
				min_distance_to_players 4
				find_closest
				set_circular_placement
				if 36x36
				else
					avoid_forest_zone 5
					avoid_cliff_zone 3
				endif
			percent_chance 5
				number_of_objects 3	#define USE_3_TCS
				min_distance_to_players 5
				find_closest
				set_circular_placement
				if 36x36
				else
					avoid_forest_zone 5
					avoid_cliff_zone 3
				endif
		end_random
	else
		start_random
			percent_chance 96
				number_of_objects 1
				max_distance_to_players 0
			percent_chance 2
				number_of_objects 2	#define USE_2_TCS
				min_distance_to_players 4
				find_closest
				set_circular_placement
				if 36x36
				else
					avoid_forest_zone 5
					avoid_cliff_zone 3
				endif
			percent_chance 1
				number_of_objects 3	#define USE_3_TCS
				min_distance_to_players 5
				find_closest
				set_circular_placement
				if 36x36
				else
					avoid_forest_zone 5
					avoid_cliff_zone 3
				endif
		end_random
	endif
	min_distance_group_placement 2
	if 36x36	temp_min_distance_group_placement 4
	else	temp_min_distance_group_placement 7
	endif
	if DEATH_MATCH
	else
		if EXTREME_BUILDINGS
			start_random 
				percent_chance 10	second_object TC_TOWER
				percent_chance 5	second_object OP_BUILDINGS_TYPE
				percent_chance 10	second_object SHEEP_A
				percent_chance 10	second_object SHEEP_B
				percent_chance 10	second_object BOAR_A
				percent_chance 10	second_object DEER_A
			end_random
		else
			start_random 
				percent_chance 0	second_object TC_TOWER
				percent_chance 1	second_object SHEEP_A
				percent_chance 1	second_object SHEEP_B
				percent_chance 2	second_object BOAR_A
				percent_chance 2	second_object DEER_A
			end_random
		endif
	endif
endif
}

if SUDDEN_DEATH
	if USE_NOMAD_SETUP
	else
		create_object FLAG_C {
		set_place_for_every_player
		number_of_objects 4
		min_distance_to_players 3
		find_closest
		}
	endif
endif

/* walls */
if NO_CONNECTIONS
elseif USE_WALLS	#define PLACE_WALLS
endif

if PLACE_WALLS
	create_object WALL_TYPE {
		set_place_for_every_player
		if INCREDIBLE_OR_LARGER
			start_random
			percent_chance 49	#define SQUARE_WALLS
				min_distance_to_players 36
				max_distance_to_players 36
			percent_chance 50	/* here we allow non-square walls, by allowing a variable radius */
				min_distance_to_players 30
				max_distance_to_players 40
				set_circular_placement
			end_random
		elseif 36x36
			#define SQUARE_WALLS
			min_distance_to_players 6
			max_distance_to_players 6
		elseif MINI_OR_SMALLER
			#define SQUARE_WALLS
			min_distance_to_players 9
			max_distance_to_players 9		
		else	
			start_random
				percent_chance 49	#define SQUARE_WALLS
					min_distance_to_players 17
					max_distance_to_players 17
				percent_chance 50	/* here we allow non-square walls, by allowing a variable radius */
					min_distance_to_players 15
					max_distance_to_players 25
					set_circular_placement
			end_random
		endif
		min_distance_group_placement 2
	}	
	if SQUARE_WALLS
		if MINI_OR_SMALLER
		else
			start_random
				percent_chance 9	#define	DOUBLE_WALLS
			end_random
		endif
	endif
	/* second wall ring */
	if DOUBLE_WALLS
		create_object SECOND_WALL_TYPE {
			set_place_for_every_player
			if INCREDIBLE_OR_LARGER
				min_distance_to_players 56
				max_distance_to_players 56		
			else	
				min_distance_to_players 27
				max_distance_to_players 27
			endif
			min_distance_group_placement 2
		}
	endif
endif

/* sometimes fill in corners - also places walls on water */
start_random
	percent_chance 49
		if USE_2_TCS
		elseif USE_3_TCS
		else
			if SQUARE_WALLS
				create_object TEMPORARY_OBJECT_GRID {
					number_of_objects 9320
					set_place_for_every_player
					avoid_forest_zone 0
					avoid_cliff_zone 1
					second_object WALL_TYPE
					if INCREDIBLE_OR_LARGER
						min_distance_to_players 36
						max_distance_to_players 36
					elseif 36x36
						min_distance_to_players 6
						max_distance_to_players 6
					elseif MINI_OR_SMALLER
						min_distance_to_players 9
						max_distance_to_players 9		
					else	
						min_distance_to_players 17
						max_distance_to_players 17
					endif
				}
			endif
		endif
end_random

create_object VILLAGER {
	set_place_for_every_player
	if USE_NOMAD_SETUP
		if PERSONAL_RESOURCES
			min_distance_group_placement 1
			min_distance_to_players 5
			temp_min_distance_group_placement 13
			find_closest
			set_circular_placement				
		else
			avoid_forest_zone 3
			avoid_cliff_zone 3
			min_distance_group_placement 2
			actor_area 888
			actor_area_radius 8
			avoid_actor_area 8
			if 36x36	min_distance_to_map_edge 4	temp_min_distance_group_placement 5
			elseif TINY_OR_SMALLER	min_distance_to_map_edge 10	temp_min_distance_group_placement 18 avoid_actor_area 999
			elseif HUGE_OR_LARGER	min_distance_to_map_edge 25 temp_min_distance_group_placement 40 avoid_actor_area 999
			else	min_distance_to_map_edge 15	temp_min_distance_group_placement 22 avoid_actor_area 999
			endif
		endif
	else
		min_distance_to_players 5
		max_distance_to_players 7
		set_circular_placement
		min_distance_group_placement 1
	endif
}

/*
scout pools
Default - only normal scout or horse scout; horses are also in 0
0 - nomad starts - units without an attack
1 - unwalled starts - melee up to 10 attack, only weak, slow ranged units
2 - palisade walled starts - no elite unique units, no heroes
3 - stone walled starts - all but the strongest siege and cheats
4 - heavy siege and cheat units
DM - only fast units, heroes ok, only elite units; includes units from 0-4
All - full list for reference - not actually used
*/

/* random scouts */
if FREE_FOR_ALL
	#define ALLOW_ALL_SCOUTS
endif

if PLACE_WALLS
	if STRONG_WALL
		#define ALLOW_ALL_SCOUTS
	elseif WEAK_WALL
		#define ALLOW_SOME_SCOUTS
	endif
endif

if ALLOW_RANDOM_SCOUT
	if USE_NOMAD_SETUP	#define SCOUT_POOL_0A
	elseif DM_SCOUT_POOL
		start_random
			percent_chance 49	#define SCOUT_POOL_DM1
			percent_chance 50	#define SCOUT_POOL_DM2
		end_random
	elseif EXTREME_SCOUTS
		start_random
			percent_chance 3	#define SCOUT_POOL_0A
			percent_chance 5	#define SCOUT_POOL_1A
			percent_chance 15	#define SCOUT_POOL_2A
			percent_chance 25	#define SCOUT_POOL_3A
			percent_chance 25	#define SCOUT_POOL_3B
			percent_chance 25	#define SCOUT_POOL_3D
			percent_chance 1	#define SCOUT_POOL_4A
		end_random		
	elseif ALLOW_ALL_SCOUTS
		start_random
			percent_chance 3	#define SCOUT_POOL_0A
			percent_chance 6	#define SCOUT_POOL_1A
			percent_chance 15	#define SCOUT_POOL_2A
			percent_chance 25	#define SCOUT_POOL_3A
			percent_chance 30	#define SCOUT_POOL_3B
			percent_chance 30	#define SCOUT_POOL_3D
		end_random	
	elseif ALLOW_SOME_SCOUTS
		start_random
			percent_chance 3	#define SCOUT_POOL_0A
			percent_chance 6	#define SCOUT_POOL_1A
			percent_chance 90	#define SCOUT_POOL_2A
		end_random	
	else /* unwalled scout pool */
		start_random
			percent_chance 39	#define SCOUT_POOL_0A
			percent_chance 60	#define SCOUT_POOL_1A
		end_random	
	endif
else	#define SCOUT_POOL_DEFAULT
endif


if SCOUT_POOL_DEFAULT	/* horse types have autoscout in DE */
	if USE_NOMAD_SETUP
		start_random
			percent_chance 9	#const SCOUT_TYPE 814	/* horse */
			percent_chance 20	#const SCOUT_TYPE 897	/* camel */
			percent_chance 20	#const SCOUT_TYPE 1237	/* bactrian camel */
			percent_chance 10	#const SCOUT_TYPE 1356	/* heavy horse */
			percent_chance 10	#const SCOUT_TYPE 1602	/* horse grey black */
			percent_chance 10	#const SCOUT_TYPE 1604	/* horse grey brown */
			percent_chance 10	#const SCOUT_TYPE 1606	/* horse white brown */
			percent_chance 10	#const SCOUT_TYPE 1869	/* hunnic horse */
		end_random
	else	#const SCOUT_TYPE 448	/* scout */
	endif
elseif SCOUT_POOL_0A	/* no attack 34 units */
	start_random
		percent_chance 2	#const SCOUT_TYPE 128	/* trade cart */	#define NO_AUTOSCOUT
		percent_chance 3	#const SCOUT_TYPE 159	/* beta relic cart */	#define FLAG_SCOUT
		percent_chance 3	#const SCOUT_TYPE 204	/* full trade cart */	#define NO_AUTOSCOUT
		percent_chance 3	#const SCOUT_TYPE 206	/* vmdl */	#define NO_AUTOSCOUT
		percent_chance 3	#const SCOUT_TYPE 230	/* king bela iv */	#define KINGSCOUT
		percent_chance 1	#const SCOUT_TYPE 444	/* packed town center */	#define NO_AUTOSCOUT
		percent_chance 3	#const SCOUT_TYPE 704	/* shah */	#define KINGSCOUT
		percent_chance 3	#const SCOUT_TYPE 733	/* emperor in a barrel (trade cart) */
		percent_chance 3	#const SCOUT_TYPE 814	/* horse */
		percent_chance 3	#const SCOUT_TYPE 838	/* king sancho */	#define KINGSCOUT
		percent_chance 3	#const SCOUT_TYPE 840	/* king alfonso */	#define KINGSCOUT
		percent_chance 3	#const SCOUT_TYPE 846	/* donkey trade cart */
		percent_chance 3	#const SCOUT_TYPE 897	/* camel */
		percent_chance 3	#const SCOUT_TYPE 1039	/* princess yodit */
		percent_chance 3	#const SCOUT_TYPE 1105	/* siege tower */	#define NO_AUTOSCOUT
		percent_chance 3	#const SCOUT_TYPE 1158	/* jayanegara */
		percent_chance 3	#const SCOUT_TYPE 1163	/* udayadityavarman */
		percent_chance 3	#const SCOUT_TYPE 1237	/* bactrian camel */
		percent_chance 3	#const SCOUT_TYPE 1271	/* ox cart */
		percent_chance 3	#const SCOUT_TYPE 1273	/* ox wagon */
		percent_chance 3	#const SCOUT_TYPE 1292	/* queen */
		percent_chance 3	#const SCOUT_TYPE 1293	/* sanyogita */
		percent_chance 3	#const SCOUT_TYPE 1295	/* chand bardai */
		percent_chance 3	#const SCOUT_TYPE 1304	/* new relic cart */
		percent_chance 3	#const SCOUT_TYPE 1338	/* cart */
		percent_chance 3	#const SCOUT_TYPE 1356	/* heavy horse */
		percent_chance 3	#const SCOUT_TYPE 1572	/* merchant */
		percent_chance 3	#const SCOUT_TYPE 1602	/* horse grey black */
		percent_chance 3	#const SCOUT_TYPE 1604	/* horse grey brown */
		percent_chance 3	#const SCOUT_TYPE 1606	/* horse white brown */
		percent_chance 3	#const SCOUT_TYPE 1692	/* jacqueline of hainaut */
		percent_chance 3	#const SCOUT_TYPE 1808	/* mule cart */	#define NO_AUTOSCOUT
		percent_chance 3	#const SCOUT_TYPE 1869	/* hunnic horse */
		percent_chance 100	#const SCOUT_TYPE 2381	/* goat unconvertible */
	end_random
elseif SCOUT_POOL_1A	/* low attack 51 units */
	start_random
		percent_chance 1	#const SCOUT_TYPE 4	/* archer */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 7	/* skirmisher */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 6	/* elite skirmisher */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 35	/* ram */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 37	/* camel rider beta */
		percent_chance 2	#const SCOUT_TYPE 74	/* militia */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 75	/* man at arms */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 76	/* heavy swordsman */
		percent_chance 2	#const SCOUT_TYPE 93	/* spearman */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 185	/* slinger */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 279	/* scorpion */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 299	/* bandit */
		percent_chance 2	#const SCOUT_TYPE 329	/* camel rider */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 361	/* norse warrior */
		percent_chance 2	#const SCOUT_TYPE 358	/* pikeman */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 359	/* halberdier */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 422	/* capped ram */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 430	/* joan the maid */
		percent_chance 2	#const SCOUT_TYPE 440	/* petard */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 546	/* light cavalry */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 548	/* siege ram */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 571	/* raider archer */
		percent_chance 1	#const SCOUT_TYPE 573	/* raider swordsman */
		percent_chance 1	#const SCOUT_TYPE 575	/* raider cavalry */
		percent_chance 1	#const SCOUT_TYPE 577	/* raider cavalry archer */
		percent_chance 2	#const SCOUT_TYPE 583	/* beta genitour */
		percent_chance 2	#const SCOUT_TYPE 700	/* hunting wolf */
		percent_chance 2	#const SCOUT_TYPE 706	/* sabateur */
		percent_chance 2	#const SCOUT_TYPE 751	/* eagle scout */
		percent_chance 2	#const SCOUT_TYPE 753	/* eagle warrior */
		percent_chance 2	#const SCOUT_TYPE 783	/* scythian wild woman */
		percent_chance 2	#const SCOUT_TYPE 825	/* amazon warrior */	
		percent_chance 2	#const SCOUT_TYPE 892	/* heavy pikeman */
		percent_chance 2	#const SCOUT_TYPE 894	/* eastern swordsman */
		percent_chance 2	#const SCOUT_TYPE 1010	/* genitour */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1123	/* karambit */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1125	/* elite karambit */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1145	/* ninja */
		percent_chance 2	#const SCOUT_TYPE 1155	/* imperial skirmisher */	#define NO_AUTOSCOUT		
		percent_chance 2	#const SCOUT_TYPE 1263	/* flaming camel */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1374	/* iroquois warrior */
		percent_chance 2	#const SCOUT_TYPE 1570	/* xolotl warrior */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1658	/* serjeant */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1732	/* young jadwiga */
		percent_chance 2	#const SCOUT_TYPE 1744	/* armored elephant */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1746	/* siege elephant */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 1755	/* camel scout */
		percent_chance 2	#const SCOUT_TYPE 1822	/* tamar */	
		percent_chance 2	#const SCOUT_TYPE 2162	/* polemarch age1 */	#define NO_AUTOSCOUT
		percent_chance 2	#const SCOUT_TYPE 2320	/* rhodian slinger */	
		percent_chance 100	#const SCOUT_TYPE 448	/* scout */
	end_random
elseif SCOUT_POOL_2A	/* med attack 94 units */
	start_random
		percent_chance 0	#const SCOUT_TYPE 1	/* imperial legionary */
		percent_chance 1	#const SCOUT_TYPE 8	/* longbowman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 24	/* crossbowman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 25	/* teutonic knight */	#define NO_AUTOSCOUT	
		percent_chance 1	#const SCOUT_TYPE 38	/* knight */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 40	/* cataphract */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 41	/* huskarl */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 73	/* chu ko nu */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 77	/* long swordsman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 125	/* monk */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 184	/* condottiero */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 188	/* flamethrower */
		percent_chance 1	#const SCOUT_TYPE 207	/* imperial camel rider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 232	/* woad raider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 275	/* imperial centurion */
		percent_chance 1	#const SCOUT_TYPE 281	/* throwing axeman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 286	/* monk with relic */	#define USE_DE_RELIC_BALANCE	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 291	/* samurai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 330	/* heavy camel rider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 441	/* hussar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 473	/* two handed swordsman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 492	/* arbalest */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 493	/* advanced heavy crossbowman */
		percent_chance 1	#const SCOUT_TYPE 639	/* penguin */
		percent_chance 1	#const SCOUT_TYPE 686	/* archer of the eyes */
		percent_chance 1	#const SCOUT_TYPE 692	/* berserk */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 725	/* jaguar warrior */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 755	/* tarkan */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 850	/* amazon archer */
		percent_chance 1	#const SCOUT_TYPE 866	/* genoese crossbowman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 869	/* magyar huszar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 873	/* elephant archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 876	/* boyar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 879	/* kamayuk */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 882	/* condottiero */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 886	/* tarkan */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1016	/* shotel warrior */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1023	/* priest */
		percent_chance 1	#const SCOUT_TYPE 1025	/* priest with relic */	#define USE_DE_RELIC_BALANCE
		percent_chance 1	#const SCOUT_TYPE 1129	/* rattan archer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1132	/* battle elephant */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1225	/* konnik */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1228	/* keshik */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1234	/* leitis */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1252	/* konnik dismounted */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1253	/* elite konnik dismounted */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1370	/* steppe lancer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1568	/* mounted samurai */
		percent_chance 1	#const SCOUT_TYPE 1663	/* flemish militia male */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1697	/* flemish militia female */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1701	/* obuch */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1707	/* winged hussar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1735	/* urumi swordsman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1738	/* ratha melee */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1741	/* chakram thrower */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1747	/* ghulam */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1751	/* shrivamsha rider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1759	/* ratha ranged */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1790	/* centurion */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1793	/* legionary */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1800	/* composite bowman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1803	/* monaspa */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1811	/* warrior priest */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1817	/* qizilbash warrior */
		percent_chance 1	#const SCOUT_TYPE 1822	/* tamar */
		percent_chance 1	#const SCOUT_TYPE 1831	/* warrior priest with relic */	#define USE_DE_RELIC_BALANCE	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2101	/* immortal */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2104	/* strategos */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2107	/* hippeus */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2110	/* hoplite */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2150	/* war chariot */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2164	/* polemarch age2 */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2165	/* polemarch age3 */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2166	/* polemarch age4 */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2167	/* polemarch age3 with ephorate */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2174	/* immortal ranged */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2187	/* hoplite with xyphos */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2227	/* strategos with taxiarchs */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2270	/* polemarch age4 with euphorate */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2271	/* polemarch age3 with morai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2272	/* polemarch age4 with morai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2321	/* mercenary hoplite */
		percent_chance 1	#const SCOUT_TYPE 2322	/* elite greek cavalry */
		percent_chance 1	#const SCOUT_TYPE 2323	/* elite persian cavalry */
		percent_chance 1	#const SCOUT_TYPE 2324	/* elite persian archer */
		percent_chance 1	#const SCOUT_TYPE 2325	/* ekdromos */
		percent_chance 1	#const SCOUT_TYPE 2326	/* cretan archer */
		percent_chance 1	#const SCOUT_TYPE 2327	/* camel raider */
		percent_chance 1	#const SCOUT_TYPE 2328	/* tarantine cavalry */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 2329	/* sparabara */
		percent_chance 1	#const SCOUT_TYPE 2330	/* takabara */
		percent_chance 1	#const SCOUT_TYPE 2331	/* sickle warrior */
		percent_chance 1	#const SCOUT_TYPE 2332	/* thracian peltast */
		percent_chance 100	#const SCOUT_TYPE 448	/* scout */
	end_random
elseif SCOUT_POOL_3A	/* high attack 100 units */
	start_random
		percent_chance 0	#const SCOUT_TYPE 5	/* hand cannoneer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 11	/* mangudai */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 39	/* cav archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 46	/* janissary */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 52	/* royal janissary */
		percent_chance 1	#const SCOUT_TYPE 138	/* spy - super high attack */
		percent_chance 1	#const SCOUT_TYPE 160	/* richard the lionheart */
		percent_chance 1	#const SCOUT_TYPE 161	/* the black prince */
		percent_chance 1	#const SCOUT_TYPE 163	/* friar tuck */
		percent_chance 1	#const SCOUT_TYPE 164	/* sheriff of nottingham */
		percent_chance 1	#const SCOUT_TYPE 165	/* charlemagne */
		percent_chance 1	#const SCOUT_TYPE 166	/* roland */
		percent_chance 1	#const SCOUT_TYPE 167	/* belisarius */
		percent_chance 1	#const SCOUT_TYPE 168	/* theodoric the goth */
		percent_chance 1	#const SCOUT_TYPE 169	/* aethelfirth */
		percent_chance 1	#const SCOUT_TYPE 170	/* siegfreid */
		percent_chance 1	#const SCOUT_TYPE 171	/* erik the red */
		percent_chance 1	#const SCOUT_TYPE 172	/* tamerlane */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 173	/* king arthur */
		percent_chance 1	#const SCOUT_TYPE 174	/* lancelot */
		percent_chance 1	#const SCOUT_TYPE 175	/* gawain */
		percent_chance 1	#const SCOUT_TYPE 176	/* mordred */
		percent_chance 1	#const SCOUT_TYPE 177	/* archbishop */
		percent_chance 1	#const SCOUT_TYPE 193	/* vlad dracula */
		percent_chance 1	#const SCOUT_TYPE 195	/* kitabatake */
		percent_chance 1	#const SCOUT_TYPE 196	/* minamoto */
		percent_chance 1	#const SCOUT_TYPE 197	/* alexander nevski */
		percent_chance 1	#const SCOUT_TYPE 198	/* el cid */
		percent_chance 1	#const SCOUT_TYPE 200	/* robin hood */
		percent_chance 1	#const SCOUT_TYPE 223	/* alaric the goth */
		percent_chance 1	#const SCOUT_TYPE 239	/* war elephant */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 282	/* mameluke */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 283	/* cavalier */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 418	/* henry the lion */
		percent_chance 1	#const SCOUT_TYPE 424	/* charles martel */
		percent_chance 1	#const SCOUT_TYPE 425	/* francisco de orellana */
		percent_chance 1	#const SCOUT_TYPE 426	/* harald hardraade */
		percent_chance 1	#const SCOUT_TYPE 427	/* gonzalo pizarro */
		percent_chance 1	#const SCOUT_TYPE 428	/* hrolf the ganger */
		percent_chance 1	#const SCOUT_TYPE 429	/* frederick barbarossa */
		percent_chance 1	#const SCOUT_TYPE 432	/* william wallace */
		percent_chance 1	#const SCOUT_TYPE 437	/* prithviraj */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 439	/* francesco sforza */
		percent_chance 1	#const SCOUT_TYPE 453	/* ataulf */
		percent_chance 1	#const SCOUT_TYPE 474	/* heavy cav archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 530	/* elite longbowman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 531	/* elite throwing axeman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 534	/* elite woad raider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 553	/* elite cataphract */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 554	/* elite teutonic knight */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 555	/* elite huskarl */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 556	/* elite mameluke */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 557	/* elite janissary */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 558	/* elite war elephant */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 559	/* elite chu ko nu */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 560	/* elite samurai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 561	/* elite mangudai */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 567	/* champion */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 569	/* paladin */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 596	/* beta elite genitour */
		percent_chance 1	#const SCOUT_TYPE 629	/* joan of arc */
		percent_chance 1	#const SCOUT_TYPE 632	/* frankish paladin */
		percent_chance 1	#const SCOUT_TYPE 634	/* sieur de metz */
		percent_chance 1	#const SCOUT_TYPE 636	/* sieur bertrand */
		percent_chance 1	#const SCOUT_TYPE 638	/* duke d'alencon */
		percent_chance 1	#const SCOUT_TYPE 640	/* la hire */
		percent_chance 1	#const SCOUT_TYPE 642	/* lord de graville */
		percent_chance 1	#const SCOUT_TYPE 646	/* constable richemont */
		percent_chance 1	#const SCOUT_TYPE 648	/* guy josselyne */
		percent_chance 1	#const SCOUT_TYPE 652	/* sir john fastolf */
		percent_chance 1	#const SCOUT_TYPE 678	/* reynald de chatillon */
		percent_chance 1	#const SCOUT_TYPE 680	/* master of the templar */
		percent_chance 1	#const SCOUT_TYPE 694	/* elite berserk */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 698	/* subotai */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 702	/* kushluk */
		percent_chance 1	#const SCOUT_TYPE 703	/* topa yupanqui */
		percent_chance 1	#const SCOUT_TYPE 707	/* ornlu the wolf */
		percent_chance 1	#const SCOUT_TYPE 726	/* elite jaguar warrior */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 731	/* genghis khan */		#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 749	/* cusi yupanqui */
		percent_chance 1	#const SCOUT_TYPE 752	/* elite eagle warrior */
		percent_chance 1	#const SCOUT_TYPE 757	/* elite tarkan */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 763	/* plumed archer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 765	/* elite plumed archer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 771	/* conquistador */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 773	/* elite conquistador */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 775	/* missionary */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 777	/* attila the hun */
		percent_chance 1	#const SCOUT_TYPE 779	/* bleda the hun */
		percent_chance 1	#const SCOUT_TYPE 781	/* pope leo 1 */
		percent_chance 1	#const SCOUT_TYPE 824	/* el cid campeador */
		percent_chance 1	#const SCOUT_TYPE 827	/* war wagon */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 829	/* elite war wagon */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 842	/* imam */
		percent_chance 1	#const SCOUT_TYPE 845	/* nobunaga */
		percent_chance 1	#const SCOUT_TYPE 847	/* henry v */
		percent_chance 1	#const SCOUT_TYPE 849	/* william the conqueror */
		percent_chance 1	#const SCOUT_TYPE 852	/* scythian scout */
		percent_chance 1	#const SCOUT_TYPE 868	/* elite genoese crossbowman */	#define NO_AUTOSCOUT
		percent_chance 100	#const SCOUT_TYPE 871	/* elite magyar huszar */	#define NO_AUTOSCOUT
	end_random
elseif SCOUT_POOL_3B	/* high attack 100 units */
	start_random
		percent_chance 0	#const SCOUT_TYPE 875	/* elite elephant archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 878	/* elite boyar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 881	/* elite kamayuk */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 885	/* siege tower with ranged attack */
		percent_chance 1	#const SCOUT_TYPE 887	/* elite tarkan */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1001	/* organ gun */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1003	/* elite organ gun */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1007	/* camel archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1009	/* elite camel archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1012	/* elite genitour */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1013	/* gbeto */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1015	/* elite gbeto */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1018	/* elite shotel warrior */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1034	/* musa ibn nusayr */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1035	/* sundjata */
		percent_chance 1	#const SCOUT_TYPE 1036	/* tariq ibn ziyad */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1037	/* richard de clare */
		percent_chance 1	#const SCOUT_TYPE 1038	/* tristan */
		percent_chance 1	#const SCOUT_TYPE 1040	/* henry ii */
		percent_chance 1	#const SCOUT_TYPE 1064	/* yekuno amlak */
		percent_chance 1	#const SCOUT_TYPE 1066	/* warrior yodit */
		percent_chance 1	#const SCOUT_TYPE 1067	/* itzcoatl */
		percent_chance 1	#const SCOUT_TYPE 1068	/* mustafa pasha */
		percent_chance 1	#const SCOUT_TYPE 1069	/* pacal ii */
		percent_chance 1	#const SCOUT_TYPE 1070	/* babur */
		percent_chance 1	#const SCOUT_TYPE 1071	/* abraha elephant */
		percent_chance 1	#const SCOUT_TYPE 1072	/* guglielmo embriaco */
		percent_chance 1	#const SCOUT_TYPE 1073	/* su dingfang */
		percent_chance 1	#const SCOUT_TYPE 1074	/* pachacuti */
		percent_chance 1	#const SCOUT_TYPE 1075	/* huayna capac */
		percent_chance 1	#const SCOUT_TYPE 1076	/* miklos toldi */
		percent_chance 1	#const SCOUT_TYPE 1077	/* little john */
		percent_chance 1	#const SCOUT_TYPE 1078	/* zawisza the black */
		percent_chance 1	#const SCOUT_TYPE 1080	/* sumanguru */
		percent_chance 1	#const SCOUT_TYPE 1106	/* dagnajan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1109	/* gidajan */
		percent_chance 1	#const SCOUT_TYPE 1120	/* ballista elephant */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1122	/* elite ballista elephant */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1126	/* arambai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1128	/* elite arambai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1131	/* elite rattan archer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1134	/* elite battle elephant */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1157	/* gajah mada */
		percent_chance 1	#const SCOUT_TYPE 1159	/* raden wijaya */
		percent_chance 1	#const SCOUT_TYPE 1160	/* sunda royal fighter */
		percent_chance 1	#const SCOUT_TYPE 1162	/* suryavarman */
		percent_chance 1	#const SCOUT_TYPE 1164	/* jayaviravarman */
		percent_chance 1	#const SCOUT_TYPE 1165	/* bayinnaung */
		percent_chance 1	#const SCOUT_TYPE 1166	/* tabinshwehti */		#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1178	/* le loi */
		percent_chance 1	#const SCOUT_TYPE 1179	/* le lai */
		percent_chance 1	#const SCOUT_TYPE 1180	/* le lai 2 */
		percent_chance 1	#const SCOUT_TYPE 1181	/* le trien */
		percent_chance 1	#const SCOUT_TYPE 1182	/* luu nhan chu */
		percent_chance 1	#const SCOUT_TYPE 1183	/* bui bi */
		percent_chance 1	#const SCOUT_TYPE 1184	/* dinh le */
		percent_chance 1	#const SCOUT_TYPE 1185	/* wang tong */
		percent_chance 1	#const SCOUT_TYPE 1186	/* envoy */
		percent_chance 1	#const SCOUT_TYPE 1227	/* elite konnik */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1230	/* elite keshik */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1231	/* kipchak */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1233	/* elite kipchak */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1236	/* elite leitis */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1260	/* elite kipchak */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1262	/* tokhtamysh khan */
		percent_chance 1	#const SCOUT_TYPE 1265	/* ivaylo */
		percent_chance 1	#const SCOUT_TYPE 1266	/* tsar konstantin */
		percent_chance 1	#const SCOUT_TYPE 1267	/* kotyan khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1268	/* cuman chief */
		percent_chance 1	#const SCOUT_TYPE 1269	/* girgen khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1275	/* khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1276	/* urus khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1281	/* vytautas the great */
		percent_chance 1	#const SCOUT_TYPE 1290	/* ivaylo dismounted */
		percent_chance 1	#const SCOUT_TYPE 1294	/* prithvi */
		percent_chance 1	#const SCOUT_TYPE 1296	/* saladin */
		percent_chance 1	#const SCOUT_TYPE 1297	/* khosrau */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1298	/* jarl */
		percent_chance 1	#const SCOUT_TYPE 1299	/* sogdian sataphract */
		percent_chance 1	#const SCOUT_TYPE 1303	/* osman */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1372	/* elite steppe lancer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1574	/* sosso guard */
		percent_chance 1	#const SCOUT_TYPE 1655	/* coustillier */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1657	/* elite coustillier */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1659	/* elite serjeant */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1669	/* edward longshanks */
		percent_chance 1	#const SCOUT_TYPE 1671	/* gilbert de clare */
		percent_chance 1	#const SCOUT_TYPE 1673	/* john the fearless */
		percent_chance 1	#const SCOUT_TYPE 1675	/* philip the good */
		percent_chance 1	#const SCOUT_TYPE 1677	/* robert guiscard */
		percent_chance 1	#const SCOUT_TYPE 1679	/* roger bosso */
		percent_chance 1	#const SCOUT_TYPE 1681	/* bohemond */
		percent_chance 1	#const SCOUT_TYPE 1683	/* llywelyn ap gruffydd */
		percent_chance 1	#const SCOUT_TYPE 1685	/* dafydd ap gruffydd */
		percent_chance 1	#const SCOUT_TYPE 1687	/* bernard d'armagnac */
		percent_chance 1	#const SCOUT_TYPE 1703	/* elite obuch */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1704	/* hussite wagon */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1706	/* elite hussite wagon */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1713	/* jan zizka */
		percent_chance 100	#const SCOUT_TYPE 1715	/* jadwiga */
	end_random
elseif SCOUT_POOL_3C	/* high attack 56 units */
	start_random
		percent_chance 0	#const SCOUT_TYPE 1718	/* jogaila */
		percent_chance 1	#const SCOUT_TYPE 1721	/* kestutis */
		percent_chance 1	#const SCOUT_TYPE 1723	/* crusader knight */
		percent_chance 1	#const SCOUT_TYPE 1725	/* algirdas */
		percent_chance 1	#const SCOUT_TYPE 1727	/* ulrich von jungingen */
		percent_chance 1	#const SCOUT_TYPE 1729	/* emperor sigismund */
		percent_chance 1	#const SCOUT_TYPE 1730	/* dimitry of moscow */
		percent_chance 1	#const SCOUT_TYPE 1731	/* mikhail of tver */
		percent_chance 1	#const SCOUT_TYPE 1737	/* elite urumi swordsman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1740	/* elite ratha melee */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1741	/* elite chakram thrower */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1749	/* elite ghulam */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1753	/* elite shrivamsha rider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1761	/* elite ratha ranged */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1762	/* mihira bhoja */
		percent_chance 1	#const SCOUT_TYPE 1763	/* amoghavarsha */
		percent_chance 1	#const SCOUT_TYPE 1764	/* rajendra chola */
		percent_chance 1	#const SCOUT_TYPE 1766	/* general araiyan */
		percent_chance 1	#const SCOUT_TYPE 1768	/* young babur */
		percent_chance 1	#const SCOUT_TYPE 1769	/* qutlugh */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1771	/* ibrahim lodi */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1772	/* shaybani khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1792	/* elite centurion */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1802	/* elite composite bowman */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1805	/* elite monaspa */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1813	/* savar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1815	/* shah ismail */
		percent_chance 1	#const SCOUT_TYPE 1819	/* ismail */
		percent_chance 1	#const SCOUT_TYPE 1820	/* selim the grim */
		percent_chance 1	#const SCOUT_TYPE 1821	/* thoros */
		percent_chance 1	#const SCOUT_TYPE 1824	/* yury */
		percent_chance 1	#const SCOUT_TYPE 1825	/* ivane */
		percent_chance 1	#const SCOUT_TYPE 1826	/* zakare */
		percent_chance 1	#const SCOUT_TYPE 1827	/* stephan */
		percent_chance 1	#const SCOUT_TYPE 1828	/* mleh */
		percent_chance 1	#const SCOUT_TYPE 1829	/* elite qizilbash warrior */
		percent_chance 1	#const SCOUT_TYPE 2102	/* elite immortal */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2105	/* elite strategos */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2108	/* elite hippeus */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2111	/* elite hoplite */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2151	/* elite war chariot */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2175	/* elite immortal ranged */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2188	/* elite hoplite with xyphos */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2228	/* elite strategos with taxiarchs */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2308	/* artaphernes */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 2309	/* datis */
		percent_chance 1	#const SCOUT_TYPE 2310	/* aristagoras */
		percent_chance 1	#const SCOUT_TYPE 2313	/* aristides */
		percent_chance 1	#const SCOUT_TYPE 2314	/* miltiades */
		percent_chance 1	#const SCOUT_TYPE 2315	/* themistocles */
		percent_chance 1	#const SCOUT_TYPE 2316	/* leonidas */
		percent_chance 1	#const SCOUT_TYPE 2317	/* brasidas */
		percent_chance 1	#const SCOUT_TYPE 2318	/* lysander */
		percent_chance 1	#const SCOUT_TYPE 2346	/* cleon */
		percent_chance 1	#const SCOUT_TYPE 2347	/* darius */
		percent_chance 100	#const SCOUT_TYPE 448	/* scout */
	end_random
elseif SCOUT_POOL_4A	/* super high attack 20 units */
	start_random
		percent_chance 4	#const SCOUT_TYPE 36	/* bombard cannon */	#define NO_AUTOSCOUT
		percent_chance 5	#const SCOUT_TYPE 42	/* trebuchet */	#define NO_AUTOSCOUT
		percent_chance 5	#const SCOUT_TYPE 331	/* packed trebuchet */	#define NO_AUTOSCOUT
		percent_chance 5	#const SCOUT_TYPE 542	/* heavy scorpion */	#define NO_AUTOSCOUT
		percent_chance 5	#const SCOUT_TYPE 550	/* onager */	#define NO_AUTOSCOUT
		percent_chance 5	#const SCOUT_TYPE 588	/* siege onager */	#define NO_AUTOSCOUT
		percent_chance 5	#const SCOUT_TYPE 644	/* jean de lorrain */
		percent_chance 5	#const SCOUT_TYPE 650	/* jean bureau */
		percent_chance 5	#const SCOUT_TYPE 682	/* bad neighbor */
		percent_chance 5	#const SCOUT_TYPE 683	/* gods own sling */
		percent_chance 5	#const SCOUT_TYPE 729	/* gods own sling packed */
		percent_chance 5	#const SCOUT_TYPE 730	/* bad neighbor packed */
		percent_chance 5	#const SCOUT_TYPE 748	/* cobra car */
		percent_chance 5	#const SCOUT_TYPE 860	/* furious the monkey boy */
		percent_chance 5	#const SCOUT_TYPE 1222	/* sharkatzor */
		percent_chance 5	#const SCOUT_TYPE 1300	/* alfred the alpaca */
		percent_chance 5	#const SCOUT_TYPE 1577	/* photonman */
		percent_chance 5	#const SCOUT_TYPE 1690	/* warwolf trebuchet */
		percent_chance 5	#const SCOUT_TYPE 1691	/* warwolf trebuchet packed */
		percent_chance 100	#const SCOUT_TYPE 1709	/* houfnice */	#define NO_AUTOSCOUT
	end_random
elseif SCOUT_POOL_DM1	/* 100 units */
	start_random
		percent_chance 0	#const SCOUT_TYPE 36	/* bombard cannon */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 37	/* camel rider beta */
		percent_chance 1	#const SCOUT_TYPE 38	/* knight */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 39	/* cav archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 138	/* spy - super high attack */
		percent_chance 1	#const SCOUT_TYPE 160	/* richard the lionheart */
		percent_chance 1	#const SCOUT_TYPE 161	/* the black prince */
		percent_chance 1	#const SCOUT_TYPE 166	/* roland */
		percent_chance 1	#const SCOUT_TYPE 167	/* belisarius */
		percent_chance 1	#const SCOUT_TYPE 172	/* tamerlane */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 174	/* lancelot */
		percent_chance 1	#const SCOUT_TYPE 175	/* gawain */
		percent_chance 1	#const SCOUT_TYPE 176	/* mordred */
		percent_chance 1	#const SCOUT_TYPE 193	/* vlad dracula */
		percent_chance 1	#const SCOUT_TYPE 197	/* alexander nevski */
		percent_chance 1	#const SCOUT_TYPE 206	/* vmdl */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 207	/* imperial camel rider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 223	/* alaric the goth */
		percent_chance 1	#const SCOUT_TYPE 230	/* king bela iv */	#define KINGSCOUT
		percent_chance 1	#const SCOUT_TYPE 275	/* imperial centurion */
		percent_chance 1	#const SCOUT_TYPE 282	/* mameluke */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 283	/* cavalier */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 329	/* camel rider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 330	/* heavy camel rider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 418	/* henry the lion */
		percent_chance 1	#const SCOUT_TYPE 425	/* francisco de orellana */
		percent_chance 1	#const SCOUT_TYPE 426	/* harald hardraade */
		percent_chance 1	#const SCOUT_TYPE 427	/* gonzalo pizarro */
		percent_chance 1	#const SCOUT_TYPE 430	/* joan the maid */
		percent_chance 1	#const SCOUT_TYPE 437	/* prithviraj */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 441	/* hussar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 474	/* heavy cav archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 534	/* elite woad raider */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 546	/* light cavalry */
		percent_chance 1	#const SCOUT_TYPE 553	/* elite cataphract */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 556	/* elite mameluke */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 561	/* elite mangudai */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 569	/* paladin */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 575	/* raider cavalry */
		percent_chance 1	#const SCOUT_TYPE 577	/* raider cavalry archer */
		percent_chance 1	#const SCOUT_TYPE 596	/* beta elite genitour */
		percent_chance 1	#const SCOUT_TYPE 629	/* joan of arc */
		percent_chance 1	#const SCOUT_TYPE 632	/* frankish paladin */
		percent_chance 1	#const SCOUT_TYPE 634	/* sieur de metz */
		percent_chance 1	#const SCOUT_TYPE 636	/* sieur bertrand */
		percent_chance 1	#const SCOUT_TYPE 638	/* duke d'alencon */
		percent_chance 1	#const SCOUT_TYPE 646	/* constable richemont */
		percent_chance 1	#const SCOUT_TYPE 648	/* guy josselyne */
		percent_chance 1	#const SCOUT_TYPE 652	/* sir john fastolf */
		percent_chance 1	#const SCOUT_TYPE 678	/* reynald de chatillon */
		percent_chance 1	#const SCOUT_TYPE 680	/* master of the templar */
		percent_chance 1	#const SCOUT_TYPE 682	/* bad neighbor */
		percent_chance 1	#const SCOUT_TYPE 683	/* gods own sling */
		percent_chance 1	#const SCOUT_TYPE 698	/* subotai */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 702	/* kushluk */
		percent_chance 1	#const SCOUT_TYPE 704	/* shah */	#define KINGSCOUT
		percent_chance 1	#const SCOUT_TYPE 706	/* sabateur */
		percent_chance 1	#const SCOUT_TYPE 729	/* gods own sling packed */
		percent_chance 1	#const SCOUT_TYPE 730	/* bad neighbor packed */
		percent_chance 1	#const SCOUT_TYPE 731	/* genghis khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 749	/* cusi yupanqui */
		percent_chance 1	#const SCOUT_TYPE 751	/* eagle warrior/scout */
		percent_chance 1	#const SCOUT_TYPE 752	/* elite eagle warrior */
		percent_chance 1	#const SCOUT_TYPE 757	/* elite tarkan */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 765	/* elite plumed archer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 773	/* elite conquistador */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 775	/* missionary */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 777	/* attila the hun */
		percent_chance 1	#const SCOUT_TYPE 779	/* bleda the hun */
		percent_chance 1	#const SCOUT_TYPE 814	/* horse */
		percent_chance 1	#const SCOUT_TYPE 824	/* el cid campeador */
		percent_chance 1	#const SCOUT_TYPE 829	/* elite war wagon */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 838	/* king sancho */	#define KINGSCOUT
		percent_chance 1	#const SCOUT_TYPE 840	/* king alfonso */	#define KINGSCOUT
		percent_chance 1	#const SCOUT_TYPE 847	/* henry v */
		percent_chance 1	#const SCOUT_TYPE 849	/* william the conqueror */
		percent_chance 1	#const SCOUT_TYPE 852	/* scythian scout */
		percent_chance 1	#const SCOUT_TYPE 871	/* elite magyar huszar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 878	/* elite boyar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 885	/* siege tower with ranged attack */
		percent_chance 1	#const SCOUT_TYPE 887	/* elite tarkan */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 897	/* camel */
		percent_chance 1	#const SCOUT_TYPE 1009	/* elite camel archer */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1012	/* elite genitour */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1015	/* elite gbeto */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1016	/* shotel warrior */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1018	/* elite shotel warrior */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1034	/* musa ibn nusayr */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1035	/* sundjata */
		percent_chance 1	#const SCOUT_TYPE 1036	/* tariq ibn ziyad */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1037	/* richard de clare */
		percent_chance 1	#const SCOUT_TYPE 1038	/* tristan */
		percent_chance 1	#const SCOUT_TYPE 1039	/* princess yodit */
		percent_chance 1	#const SCOUT_TYPE 1064	/* yekuno amlak */
		percent_chance 1	#const SCOUT_TYPE 1066	/* warrior yodit */
		percent_chance 1	#const SCOUT_TYPE 1069	/* pacal ii */
		percent_chance 1	#const SCOUT_TYPE 1070	/* babur */
		percent_chance 1	#const SCOUT_TYPE 1071	/* abraha elephant */
		percent_chance 1	#const SCOUT_TYPE 1076	/* miklos toldi */
		percent_chance 100	#const SCOUT_TYPE 1078	/* zawisza the black */
	end_random
elseif SCOUT_POOL_DM2	/* 94 units */
	start_random
		percent_chance 0	#const SCOUT_TYPE 1080	/* sumanguru */
		percent_chance 1	#const SCOUT_TYPE 1125	/* elite karambit */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1128	/* elite arambai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1145	/* ninja */
		percent_chance 1	#const SCOUT_TYPE 1158	/* jayanegara */
		percent_chance 1	#const SCOUT_TYPE 1159	/* raden wijaya */
		percent_chance 1	#const SCOUT_TYPE 1160	/* sunda royal fighter */
		percent_chance 1	#const SCOUT_TYPE 1163	/* udayadityavarman */
		percent_chance 1	#const SCOUT_TYPE 1164	/* jayaviravarman */
		percent_chance 1	#const SCOUT_TYPE 1180	/* le lai 2 */
		percent_chance 1	#const SCOUT_TYPE 1184	/* dinh le */
		percent_chance 1	#const SCOUT_TYPE 1185	/* wang tong */
		percent_chance 1	#const SCOUT_TYPE 1186	/* envoy */				
		percent_chance 1	#const SCOUT_TYPE 1227	/* elite konnik */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1230	/* elite keshik */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1233	/* elite kipchak */	#define ONLY_1_SCOUT	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1236	/* elite leitis */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1237	/* bactrian camel */
		percent_chance 1	#const SCOUT_TYPE 1262	/* tokhtamysh khan */
		percent_chance 1	#const SCOUT_TYPE 1263	/* flaming camel */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1265	/* ivaylo */
		percent_chance 1	#const SCOUT_TYPE 1266	/* tsar konstantin */
		percent_chance 1	#const SCOUT_TYPE 1267	/* kotyan khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1268	/* cuman chief */
		percent_chance 1	#const SCOUT_TYPE 1269	/* girgen khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1275	/* khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1276	/* urus khan */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1281	/* vytautas the great */
		percent_chance 1	#const SCOUT_TYPE 1292	/* queen */
		percent_chance 1	#const SCOUT_TYPE 1293	/* sanyogita */
		percent_chance 1	#const SCOUT_TYPE 1296	/* saladin */
		percent_chance 1	#const SCOUT_TYPE 1298	/* jarl */
		percent_chance 1	#const SCOUT_TYPE 1299	/* sogdian sataphract */
		percent_chance 1	#const SCOUT_TYPE 1303	/* osman */		#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 1356	/* heavy horse */
		percent_chance 1	#const SCOUT_TYPE 1370	/* steppe lancer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1372	/* elite steppe lancer */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1374	/* iroquois warrior */
		percent_chance 1	#const SCOUT_TYPE 1568	/* mounted samurai */
		percent_chance 1	#const SCOUT_TYPE 1570	/* xolotl warrior */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1602	/* horse grey black */
		percent_chance 1	#const SCOUT_TYPE 1604	/* horse grey brown */
		percent_chance 1	#const SCOUT_TYPE 1606	/* horse white brown */
		percent_chance 1	#const SCOUT_TYPE 1657	/* elite coustillier */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1669	/* edward longshanks */
		percent_chance 1	#const SCOUT_TYPE 1671	/* gilbert de clare */
		percent_chance 1	#const SCOUT_TYPE 1673	/* john the fearless */
		percent_chance 1	#const SCOUT_TYPE 1675	/* philip the good */
		percent_chance 1	#const SCOUT_TYPE 1677	/* robert guiscard */
		percent_chance 1	#const SCOUT_TYPE 1679	/* roger bosso */
		percent_chance 1	#const SCOUT_TYPE 1681	/* bohemond */
		percent_chance 1	#const SCOUT_TYPE 1687	/* bernard d'armagnac */
		percent_chance 1	#const SCOUT_TYPE 1690	/* warwolf trebuchet */
		percent_chance 1	#const SCOUT_TYPE 1691	/* warwolf trebuchet packed */
		percent_chance 1	#const SCOUT_TYPE 1707	/* winged hussar */
		percent_chance 1	#const SCOUT_TYPE 1709	/* houfnice */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1713	/* jan zizka */
		percent_chance 1	#const SCOUT_TYPE 1715	/* jadwiga */
		percent_chance 1	#const SCOUT_TYPE 1718	/* jogaila */
		percent_chance 1	#const SCOUT_TYPE 1721	/* kestutis */
		percent_chance 1	#const SCOUT_TYPE 1723	/* crusader knight */
		percent_chance 1	#const SCOUT_TYPE 1725	/* algirdas */
		percent_chance 1	#const SCOUT_TYPE 1727	/* ulrich von jungingen */
		percent_chance 1	#const SCOUT_TYPE 1729	/* emperor sigismund */
		percent_chance 1	#const SCOUT_TYPE 1730	/* dimitry of moscow */
		percent_chance 1	#const SCOUT_TYPE 1731	/* mikhail of tver */
		percent_chance 1	#const SCOUT_TYPE 1792	/* elite centurion */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1805	/* elite monaspa */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1813	/* savar */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 1815	/* shah ismail */
		percent_chance 1	#const SCOUT_TYPE 1819	/* ismail */
		percent_chance 1	#const SCOUT_TYPE 1820	/* selim the grim */
		percent_chance 1	#const SCOUT_TYPE 1821	/* thoros */
		percent_chance 1	#const SCOUT_TYPE 1822	/* tamar */
		percent_chance 1	#const SCOUT_TYPE 1825	/* ivane */
		percent_chance 1	#const SCOUT_TYPE 1829	/* elite qizilbash warrior */
		percent_chance 1	#const SCOUT_TYPE 1869	/* hunnic horse */	
		percent_chance 1	#const SCOUT_TYPE 2102	/* elite immortal */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2150	/* elite war chariot */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2175	/* elite immortal ranged */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2270	/* polemarch age4 with euphorate */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2272	/* polemarch age4 with morai */	#define NO_AUTOSCOUT
		percent_chance 1	#const SCOUT_TYPE 2308	/* artaphernes */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 2309	/* datis */
		percent_chance 1	#const SCOUT_TYPE 2310	/* aristagoras */
		percent_chance 1	#const SCOUT_TYPE 2314	/* miltiades */
		percent_chance 1	#const SCOUT_TYPE 2317	/* brasidas */
		percent_chance 1	#const SCOUT_TYPE 2322	/* elite greek cavalry */
		percent_chance 1	#const SCOUT_TYPE 2323	/* elite persian cavalry */
		percent_chance 1	#const SCOUT_TYPE 2327	/* camel raider */
		percent_chance 1	#const SCOUT_TYPE 2328	/* tarantine cavalry */	#define ONLY_1_SCOUT
		percent_chance 1	#const SCOUT_TYPE 2329	/* sparabara */
		percent_chance 1	#const SCOUT_TYPE 2347	/* darius */
		percent_chance 100	#const SCOUT_TYPE 448	/* scout */
	end_random
endif


/* store the full scout list */
if FALSE
	start_random
		percent_chance 1	#const SCOUT_TYPE 1	/* imperial legionary */
		percent_chance 1	#const SCOUT_TYPE 4	/* archer */
		percent_chance 1	#const SCOUT_TYPE 5	/* hand cannoneer */
		percent_chance 1	#const SCOUT_TYPE 7	/* skirmisher */
		percent_chance 1	#const SCOUT_TYPE 6	/* elite skirmisher */
		percent_chance 1	#const SCOUT_TYPE 8	/* longbowman */
		percent_chance 1	#const SCOUT_TYPE 11	/* mangudai */
		percent_chance 1	#const SCOUT_TYPE 24	/* crossbowman */
		percent_chance 1	#const SCOUT_TYPE 25	/* teutonic knight */
		percent_chance 1	#const SCOUT_TYPE 35	/* ram */
		percent_chance 1	#const SCOUT_TYPE 36	/* bombard cannon */
		percent_chance 1	#const SCOUT_TYPE 37	/* camel rider beta */
		percent_chance 1	#const SCOUT_TYPE 38	/* knight */
		percent_chance 1	#const SCOUT_TYPE 39	/* cav archer */
		percent_chance 1	#const SCOUT_TYPE 40	/* cataphract */
		percent_chance 1	#const SCOUT_TYPE 41	/* huskarl */
		percent_chance 1	#const SCOUT_TYPE 46	/* janissary */
		percent_chance 1	#const SCOUT_TYPE 52	/* royal janissary */
		percent_chance 1	#const SCOUT_TYPE 73	/* chu ko nu */
		percent_chance 1	#const SCOUT_TYPE 74	/* militia */
		percent_chance 1	#const SCOUT_TYPE 75	/* man at arms */
		percent_chance 1	#const SCOUT_TYPE 76	/* heavy swordsman */
		percent_chance 1	#const SCOUT_TYPE 77	/* long swordsman */
		percent_chance 1	#const SCOUT_TYPE 93	/* spearman */
		percent_chance 1	#const SCOUT_TYPE 125	/* monk */
		percent_chance 1	#const SCOUT_TYPE 128	/* trade cart */
		percent_chance 1	#const SCOUT_TYPE 138	/* spy - super high attack */
		percent_chance 1	#const SCOUT_TYPE 159	/* beta relic cart */	#define FLAG_SCOUT
		percent_chance 1	#const SCOUT_TYPE 160	/* richard the lionheart */
		percent_chance 1	#const SCOUT_TYPE 161	/* the black prince */
		percent_chance 1	#const SCOUT_TYPE 163	/* friar tuck */
		percent_chance 1	#const SCOUT_TYPE 164	/* sheriff of nottingham */
		percent_chance 1	#const SCOUT_TYPE 165	/* charlemagne */
		percent_chance 1	#const SCOUT_TYPE 166	/* roland */
		percent_chance 1	#const SCOUT_TYPE 167	/* belisarius */
		percent_chance 1	#const SCOUT_TYPE 168	/* theodoric the goth */
		percent_chance 1	#const SCOUT_TYPE 169	/* aethelfirth */
		percent_chance 1	#const SCOUT_TYPE 170	/* siegfreid */
		percent_chance 1	#const SCOUT_TYPE 171	/* erik the red */
		percent_chance 1	#const SCOUT_TYPE 172	/* tamerlane */
		percent_chance 1	#const SCOUT_TYPE 173	/* king arthur */
		percent_chance 1	#const SCOUT_TYPE 174	/* lancelot */
		percent_chance 1	#const SCOUT_TYPE 175	/* gawain */
		percent_chance 1	#const SCOUT_TYPE 176	/* mordred */
		percent_chance 1	#const SCOUT_TYPE 177	/* archbishop */
		percent_chance 1	#const SCOUT_TYPE 184	/* condottiero */
		percent_chance 1	#const SCOUT_TYPE 185	/* slinger */
		percent_chance 1	#const SCOUT_TYPE 188	/* flamethrower */
		percent_chance 1	#const SCOUT_TYPE 193	/* vlad dracula */
		percent_chance 1	#const SCOUT_TYPE 195	/* kitabatake */
		percent_chance 1	#const SCOUT_TYPE 196	/* minamoto */
		percent_chance 1	#const SCOUT_TYPE 197	/* alexander nevski */
		percent_chance 1	#const SCOUT_TYPE 198	/* el cid */
		percent_chance 1	#const SCOUT_TYPE 200	/* robin hood */
		percent_chance 1	#const SCOUT_TYPE 204	/* full trade cart */
		percent_chance 1	#const SCOUT_TYPE 206	/* vmdl */
		percent_chance 1	#const SCOUT_TYPE 207	/* imperial camel rider */
		percent_chance 1	#const SCOUT_TYPE 223	/* alaric the goth */
		percent_chance 1	#const SCOUT_TYPE 230	/* king bela iv */
		percent_chance 1	#const SCOUT_TYPE 232	/* woad raider */
		percent_chance 1	#const SCOUT_TYPE 239	/* war elephant */
		percent_chance 1	#const SCOUT_TYPE 275	/* imperial centurion */
		percent_chance 1	#const SCOUT_TYPE 279	/* scorpion */
		percent_chance 1	#const SCOUT_TYPE 280	/* mangonel */
		percent_chance 1	#const SCOUT_TYPE 281	/* throwing axeman */
		percent_chance 1	#const SCOUT_TYPE 282	/* mameluke */
		percent_chance 1	#const SCOUT_TYPE 283	/* cavalier */
		percent_chance 1	#const SCOUT_TYPE 286	/* monk with relic */
		percent_chance 1	#const SCOUT_TYPE 291	/* samurai */
		percent_chance 1	#const SCOUT_TYPE 299	/* bandit */
		percent_chance 1	#const SCOUT_TYPE 329	/* camel rider */
		percent_chance 1	#const SCOUT_TYPE 330	/* heavy camel rider */
		percent_chance 1	#const SCOUT_TYPE 331	/* packed trebuchet */
		percent_chance 1	#const SCOUT_TYPE 358	/* pikeman */
		percent_chance 1	#const SCOUT_TYPE 359	/* halberdier */
		percent_chance 1	#const SCOUT_TYPE 361	/* norse warrior */
		percent_chance 1	#const SCOUT_TYPE 418	/* henry the lion */
		percent_chance 1	#const SCOUT_TYPE 422	/* capped ram */
		percent_chance 1	#const SCOUT_TYPE 424	/* charles martel */
		percent_chance 1	#const SCOUT_TYPE 425	/* francisco de orellana */
		percent_chance 1	#const SCOUT_TYPE 426	/* harald hardraade */
		percent_chance 1	#const SCOUT_TYPE 427	/* gonzalo pizarro */
		percent_chance 1	#const SCOUT_TYPE 428	/* hrolf the ganger */
		percent_chance 1	#const SCOUT_TYPE 429	/* frederick barbarossa */
		percent_chance 1	#const SCOUT_TYPE 430	/* joan the maid */
		percent_chance 1	#const SCOUT_TYPE 432	/* william wallace */
		percent_chance 1	#const SCOUT_TYPE 437	/* prithviraj */
		percent_chance 1	#const SCOUT_TYPE 439	/* francesco sforza */
		percent_chance 1	#const SCOUT_TYPE 440	/* petard */
		percent_chance 1	#const SCOUT_TYPE 441	/* hussar */
		percent_chance 1	#const SCOUT_TYPE 444	/* packed town center */
		percent_chance 1	#const SCOUT_TYPE 453	/* ataulf */
		percent_chance 1	#const SCOUT_TYPE 473	/* two handed swordsman */
		percent_chance 1	#const SCOUT_TYPE 474	/* heavy cav archer */
		percent_chance 1	#const SCOUT_TYPE 492	/* arbalest */
		percent_chance 1	#const SCOUT_TYPE 493	/* advanced heavy crossbowman */
		percent_chance 1	#const SCOUT_TYPE 530	/* elite longbowman */
		percent_chance 1	#const SCOUT_TYPE 531	/* elite throwing axeman */
		percent_chance 1	#const SCOUT_TYPE 534	/* elite woad raider */
		percent_chance 1	#const SCOUT_TYPE 546	/* light cavalry */
		percent_chance 1	#const SCOUT_TYPE 548	/* siege ram */
		percent_chance 1	#const SCOUT_TYPE 553	/* elite cataphract */
		percent_chance 1	#const SCOUT_TYPE 554	/* elite teutonic knight */
		percent_chance 1	#const SCOUT_TYPE 555	/* elite huskarl */
		percent_chance 1	#const SCOUT_TYPE 556	/* elite mameluke */
		percent_chance 1	#const SCOUT_TYPE 557	/* elite janissary */
		percent_chance 1	#const SCOUT_TYPE 558	/* elite war elephant */
		percent_chance 1	#const SCOUT_TYPE 559	/* elite chu ko nu */
		percent_chance 1	#const SCOUT_TYPE 560	/* elite samurai */
		percent_chance 1	#const SCOUT_TYPE 561	/* elite mangudai */
		percent_chance 1	#const SCOUT_TYPE 567	/* champion */
		percent_chance 1	#const SCOUT_TYPE 569	/* paladin */
		percent_chance 1	#const SCOUT_TYPE 571	/* raider archer */
		percent_chance 1	#const SCOUT_TYPE 573	/* raider swordsman */
		percent_chance 1	#const SCOUT_TYPE 575	/* raider cavalry */
		percent_chance 1	#const SCOUT_TYPE 577	/* raider cavalry archer */
		percent_chance 1	#const SCOUT_TYPE 583	/* beta genitour */
		percent_chance 1	#const SCOUT_TYPE 596	/* beta elite genitour */
		percent_chance 1	#const SCOUT_TYPE 629	/* joan of arc */
		percent_chance 1	#const SCOUT_TYPE 632	/* frankish paladin */
		percent_chance 1	#const SCOUT_TYPE 634	/* sieur de metz */
		percent_chance 1	#const SCOUT_TYPE 636	/* sieur bertrand */
		percent_chance 1	#const SCOUT_TYPE 638	/* duke d'alencon */
		percent_chance 1	#const SCOUT_TYPE 639	/* penguin */
		percent_chance 1	#const SCOUT_TYPE 640	/* la hire */
		percent_chance 1	#const SCOUT_TYPE 642	/* lord de graville */
		percent_chance 1	#const SCOUT_TYPE 644	/* jean de lorrain */
		percent_chance 1	#const SCOUT_TYPE 646	/* constable richemont */
		percent_chance 1	#const SCOUT_TYPE 648	/* guy josselyne */
		percent_chance 1	#const SCOUT_TYPE 650	/* jean bureau */
		percent_chance 1	#const SCOUT_TYPE 652	/* sir john fastolf */
		percent_chance 1	#const SCOUT_TYPE 678	/* reynald de chatillon */
		percent_chance 1	#const SCOUT_TYPE 680	/* master of the templar */
		percent_chance 1	#const SCOUT_TYPE 682	/* bad neighbor */
		percent_chance 1	#const SCOUT_TYPE 683	/* gods own sling */
		percent_chance 1	#const SCOUT_TYPE 686	/* archer of the eyes */
		percent_chance 1	#const SCOUT_TYPE 692	/* berserk */
		percent_chance 1	#const SCOUT_TYPE 694	/* elite berserk */
		percent_chance 1	#const SCOUT_TYPE 698	/* subotai */
		percent_chance 1	#const SCOUT_TYPE 700	/* hunting wolf */
		percent_chance 1	#const SCOUT_TYPE 702	/* kushluk */
		percent_chance 1	#const SCOUT_TYPE 703	/* topa yupanqui */
		percent_chance 1	#const SCOUT_TYPE 704	/* shah */
		percent_chance 1	#const SCOUT_TYPE 706	/* sabateur */
		percent_chance 1	#const SCOUT_TYPE 707	/* ornlu the wolf */
		percent_chance 1	#const SCOUT_TYPE 725	/* jaguar warrior */
		percent_chance 1	#const SCOUT_TYPE 726	/* elite jaguar warrior */
		percent_chance 1	#const SCOUT_TYPE 729	/* gods own sling packed */
		percent_chance 1	#const SCOUT_TYPE 730	/* bad neighbor packed */
		percent_chance 1	#const SCOUT_TYPE 731	/* genghis khan */
		percent_chance 1	#const SCOUT_TYPE 733	/* emperor in a barrel (trade cart) */
		percent_chance 1	#const SCOUT_TYPE 748	/* cobra car */
		percent_chance 1	#const SCOUT_TYPE 749	/* cusi yupanqui */
		percent_chance 1	#const SCOUT_TYPE 751	/* eagle warrior/scout */
		percent_chance 1	#const SCOUT_TYPE 752	/* elite eagle warrior */
		percent_chance 1	#const SCOUT_TYPE 753	/* eagle warrior */
		percent_chance 1	#const SCOUT_TYPE 755	/* tarkan */
		percent_chance 1	#const SCOUT_TYPE 757	/* elite tarkan */
		percent_chance 1	#const SCOUT_TYPE 759	/* huskarl */
		percent_chance 1	#const SCOUT_TYPE 761	/* elite huskarl */
		percent_chance 1	#const SCOUT_TYPE 763	/* plumed archer */
		percent_chance 1	#const SCOUT_TYPE 765	/* elite plumed archer */
		percent_chance 1	#const SCOUT_TYPE 771	/* conquistador */
		percent_chance 1	#const SCOUT_TYPE 773	/* elite conquistador */
		percent_chance 1	#const SCOUT_TYPE 775	/* missionary */
		percent_chance 1	#const SCOUT_TYPE 777	/* attila the hun */
		percent_chance 1	#const SCOUT_TYPE 779	/* bleda the hun */
		percent_chance 1	#const SCOUT_TYPE 781	/* pope leo 1 */
		percent_chance 1	#const SCOUT_TYPE 783	/* scythian wild woman */
		percent_chance 1	#const SCOUT_TYPE 814	/* horse */
		percent_chance 1	#const SCOUT_TYPE 824	/* el cid campeador */
		percent_chance 1	#const SCOUT_TYPE 825	/* amazon warrior */
		percent_chance 1	#const SCOUT_TYPE 827	/* war wagon */
		percent_chance 1	#const SCOUT_TYPE 829	/* elite war wagon */
		percent_chance 1	#const SCOUT_TYPE 838	/* king sancho */
		percent_chance 1	#const SCOUT_TYPE 840	/* king alfonso */
		percent_chance 1	#const SCOUT_TYPE 842	/* imam */
		percent_chance 1	#const SCOUT_TYPE 845	/* nobunaga */
		percent_chance 1	#const SCOUT_TYPE 846	/* donkey trade cart */
		percent_chance 1	#const SCOUT_TYPE 847	/* henry v */
		percent_chance 1	#const SCOUT_TYPE 849	/* william the conqueror */
		percent_chance 1	#const SCOUT_TYPE 850	/* amazon archer */
		percent_chance 1	#const SCOUT_TYPE 852	/* scythian scout */
		percent_chance 1	#const SCOUT_TYPE 860	/* furious the monkey boy */
		percent_chance 1	#const SCOUT_TYPE 866	/* genoese crossbowman */
		percent_chance 1	#const SCOUT_TYPE 868	/* elite genoese crossbowman */
		percent_chance 1	#const SCOUT_TYPE 869	/* magyar huszar */
		percent_chance 1	#const SCOUT_TYPE 871	/* elite magyar huszar */
		percent_chance 1	#const SCOUT_TYPE 873	/* elephant archer */
		percent_chance 1	#const SCOUT_TYPE 875	/* elite elephant archer */
		percent_chance 1	#const SCOUT_TYPE 876	/* boyar */
		percent_chance 1	#const SCOUT_TYPE 878	/* elite boyar */
		percent_chance 1	#const SCOUT_TYPE 879	/* kamayuk */
		percent_chance 1	#const SCOUT_TYPE 881	/* elite kamayuk */
		percent_chance 1	#const SCOUT_TYPE 882	/* condottiero */
		percent_chance 1	#const SCOUT_TYPE 885	/* siege tower with ranged attack */
		percent_chance 1	#const SCOUT_TYPE 886	/* tarkan */
		percent_chance 1	#const SCOUT_TYPE 887	/* elite tarkan */
		percent_chance 1	#const SCOUT_TYPE 892	/* heavy pikeman */
		percent_chance 1	#const SCOUT_TYPE 894	/* eastern swordsman */
		percent_chance 1	#const SCOUT_TYPE 897	/* camel */
		percent_chance 1	#const SCOUT_TYPE 1001	/* organ gun */
		percent_chance 1	#const SCOUT_TYPE 1003	/* elite organ gun */
		percent_chance 1	#const SCOUT_TYPE 1007	/* camel archer */
		percent_chance 1	#const SCOUT_TYPE 1009	/* elite camel archer */
		percent_chance 1	#const SCOUT_TYPE 1010	/* genitour */
		percent_chance 1	#const SCOUT_TYPE 1012	/* elite genitour */
		percent_chance 1	#const SCOUT_TYPE 1013	/* gbeto */
		percent_chance 1	#const SCOUT_TYPE 1015	/* elite gbeto */
		percent_chance 1	#const SCOUT_TYPE 1016	/* shotel warrior */
		percent_chance 1	#const SCOUT_TYPE 1018	/* elite shotel warrior */
		percent_chance 1	#const SCOUT_TYPE 1023	/* priest */
		percent_chance 1	#const SCOUT_TYPE 1025	/* priest with relic */
		percent_chance 1	#const SCOUT_TYPE 1034	/* musa ibn nusayr */
		percent_chance 1	#const SCOUT_TYPE 1035	/* sundjata */
		percent_chance 1	#const SCOUT_TYPE 1036	/* tariq ibn ziyad */
		percent_chance 1	#const SCOUT_TYPE 1037	/* richard de clare */
		percent_chance 1	#const SCOUT_TYPE 1038	/* tristan */
		percent_chance 1	#const SCOUT_TYPE 1039	/* princess yodit */
		percent_chance 1	#const SCOUT_TYPE 1040	/* henry ii */
		percent_chance 1	#const SCOUT_TYPE 1064	/* yekuno amlak */
		percent_chance 1	#const SCOUT_TYPE 1066	/* warrior yodit */
		percent_chance 1	#const SCOUT_TYPE 1067	/* itzcoatl */
		percent_chance 1	#const SCOUT_TYPE 1068	/* mustafa pasha */
		percent_chance 1	#const SCOUT_TYPE 1069	/* pacal ii */
		percent_chance 1	#const SCOUT_TYPE 1070	/* babur */
		percent_chance 1	#const SCOUT_TYPE 1071	/* abraha elephant */
		percent_chance 1	#const SCOUT_TYPE 1072	/* guglielmo embriaco */
		percent_chance 1	#const SCOUT_TYPE 1073	/* su dingfang */
		percent_chance 1	#const SCOUT_TYPE 1074	/* pachacuti */
		percent_chance 1	#const SCOUT_TYPE 1075	/* huayna capac */
		percent_chance 1	#const SCOUT_TYPE 1076	/* miklos toldi */
		percent_chance 1	#const SCOUT_TYPE 1077	/* little john */
		percent_chance 1	#const SCOUT_TYPE 1078	/* zawisza the black */
		percent_chance 1	#const SCOUT_TYPE 1080	/* sumanguru */
		percent_chance 1	#const SCOUT_TYPE 1105	/* siege tower */
		percent_chance 1	#const SCOUT_TYPE 1106	/* dagnajan */
		percent_chance 1	#const SCOUT_TYPE 1109	/* gidajan */
		percent_chance 1	#const SCOUT_TYPE 1120	/* ballista elephant */
		percent_chance 1	#const SCOUT_TYPE 1122	/* elite ballista elephant */
		percent_chance 1	#const SCOUT_TYPE 1123	/* karambit */
		percent_chance 1	#const SCOUT_TYPE 1125	/* elite karambit */
		percent_chance 1	#const SCOUT_TYPE 1126	/* arambai */
		percent_chance 1	#const SCOUT_TYPE 1128	/* elite arambai */
		percent_chance 1	#const SCOUT_TYPE 1129	/* rattan archer */
		percent_chance 1	#const SCOUT_TYPE 1131	/* elite rattan archer */
		percent_chance 1	#const SCOUT_TYPE 1132	/* battle elephant */
		percent_chance 1	#const SCOUT_TYPE 1134	/* elite battle elephant */
		percent_chance 1	#const SCOUT_TYPE 1145	/* ninja */
		percent_chance 1	#const SCOUT_TYPE 1155	/* imperial skirmisher */
		percent_chance 1	#const SCOUT_TYPE 1157	/* gajah mada */
		percent_chance 1	#const SCOUT_TYPE 1158	/* jayanegara */
		percent_chance 1	#const SCOUT_TYPE 1159	/* raden wijaya */
		percent_chance 1	#const SCOUT_TYPE 1160	/* sunda royal fighter */
		percent_chance 1	#const SCOUT_TYPE 1162	/* suryavarman */
		percent_chance 1	#const SCOUT_TYPE 1163	/* udayadityavarman */
		percent_chance 1	#const SCOUT_TYPE 1164	/* jayaviravarman */
		percent_chance 1	#const SCOUT_TYPE 1165	/* bayinnaung */
		percent_chance 1	#const SCOUT_TYPE 1166	/* tabinshwehti */
		percent_chance 1	#const SCOUT_TYPE 1178	/* le loi */
		percent_chance 1	#const SCOUT_TYPE 1179	/* le lai */
		percent_chance 1	#const SCOUT_TYPE 1180	/* le lai 2 */
		percent_chance 1	#const SCOUT_TYPE 1181	/* le trien */
		percent_chance 1	#const SCOUT_TYPE 1182	/* luu nhan chu */
		percent_chance 1	#const SCOUT_TYPE 1183	/* bui bi */
		percent_chance 1	#const SCOUT_TYPE 1184	/* dinh le */
		percent_chance 1	#const SCOUT_TYPE 1185	/* wang tong */
		percent_chance 1	#const SCOUT_TYPE 1186	/* envoy */				
		percent_chance 1	#const SCOUT_TYPE 1222	/* sharkatzor */
		percent_chance 1	#const SCOUT_TYPE 1225	/* konnik */
		percent_chance 1	#const SCOUT_TYPE 1227	/* elite konnik */
		percent_chance 1	#const SCOUT_TYPE 1228	/* keshik */
		percent_chance 1	#const SCOUT_TYPE 1230	/* elite keshik */
		percent_chance 1	#const SCOUT_TYPE 1231	/* kipchak */
		percent_chance 1	#const SCOUT_TYPE 1233	/* elite kipchak */
		percent_chance 1	#const SCOUT_TYPE 1234	/* leitis */
		percent_chance 1	#const SCOUT_TYPE 1236	/* elite leitis */
		percent_chance 1	#const SCOUT_TYPE 1237	/* bactrian camel */
		percent_chance 1	#const SCOUT_TYPE 1252	/* konnik dismounted */
		percent_chance 1	#const SCOUT_TYPE 1253	/* elite konnik dismounted */
		percent_chance 1	#const SCOUT_TYPE 1254	/* konnik */
		percent_chance 1	#const SCOUT_TYPE 1255	/* elite konnik */
		percent_chance 1	#const SCOUT_TYPE 1258	/* battering ram */
		percent_chance 1	#const SCOUT_TYPE 1259	/* cuman placeholder kipchak */
		percent_chance 1	#const SCOUT_TYPE 1260	/* elite kipchak */
		percent_chance 1	#const SCOUT_TYPE 1261	/* cuman disabled kipchak */
		percent_chance 1	#const SCOUT_TYPE 1262	/* tokhtamysh khan */
		percent_chance 1	#const SCOUT_TYPE 1263	/* flaming camel */
		percent_chance 1	#const SCOUT_TYPE 1265	/* ivaylo */
		percent_chance 1	#const SCOUT_TYPE 1266	/* tsar konstantin */
		percent_chance 1	#const SCOUT_TYPE 1267	/* kotyan khan */
		percent_chance 1	#const SCOUT_TYPE 1268	/* cuman chief */
		percent_chance 1	#const SCOUT_TYPE 1269	/* girgen khan */
		percent_chance 1	#const SCOUT_TYPE 1271	/* ox cart */
		percent_chance 1	#const SCOUT_TYPE 1273	/* ox wagon */
		percent_chance 1	#const SCOUT_TYPE 1275	/* khan */
		percent_chance 1	#const SCOUT_TYPE 1276	/* urus khan */
		percent_chance 1	#const SCOUT_TYPE 1281	/* vytautas the great */
		percent_chance 1	#const SCOUT_TYPE 1290	/* ivaylo dismounted */
		percent_chance 1	#const SCOUT_TYPE 1292	/* queen */
		percent_chance 1	#const SCOUT_TYPE 1293	/* sanyogita */
		percent_chance 1	#const SCOUT_TYPE 1294	/* prithvi */
		percent_chance 1	#const SCOUT_TYPE 1295	/* chand bardai */
		percent_chance 1	#const SCOUT_TYPE 1296	/* saladin */
		percent_chance 1	#const SCOUT_TYPE 1297	/* khosrau */
		percent_chance 1	#const SCOUT_TYPE 1298	/* jarl */
		percent_chance 1	#const SCOUT_TYPE 1299	/* sogdian sataphract */
		percent_chance 1	#const SCOUT_TYPE 1300	/* alfred the alpaca */
		percent_chance 1	#const SCOUT_TYPE 1303	/* osman */
		percent_chance 1	#const SCOUT_TYPE 1304	/* new relic cart */
		percent_chance 1	#const SCOUT_TYPE 1338	/* cart */
		percent_chance 1	#const SCOUT_TYPE 1356	/* heavy horse */
		percent_chance 1	#const SCOUT_TYPE 1370	/* steppe lancer */
		percent_chance 1	#const SCOUT_TYPE 1372	/* elite steppe lancer */
		percent_chance 1	#const SCOUT_TYPE 1374	/* iroquois warrior */
		percent_chance 1	#const SCOUT_TYPE 1400	/* priest with relic */
		percent_chance 1	#const SCOUT_TYPE 1568	/* mounted samurai */
		percent_chance 1	#const SCOUT_TYPE 1570	/* xolotl warrior */
		percent_chance 1	#const SCOUT_TYPE 1572	/* merchant */
		percent_chance 1	#const SCOUT_TYPE 1574	/* sosso guard */
		percent_chance 1	#const SCOUT_TYPE 1577	/* photonman */
		percent_chance 1	#const SCOUT_TYPE 1602	/* horse grey black */
		percent_chance 1	#const SCOUT_TYPE 1604	/* horse grey brown */
		percent_chance 1	#const SCOUT_TYPE 1606	/* horse white brown */
		percent_chance 1	#const SCOUT_TYPE 1655	/* coustillier */
		percent_chance 1	#const SCOUT_TYPE 1657	/* elite coustillier */
		percent_chance 1	#const SCOUT_TYPE 1658	/* serjeant */
		percent_chance 1	#const SCOUT_TYPE 1659	/* elite serjeant */
		percent_chance 1	#const SCOUT_TYPE 1663	/* flemish militia male */
		percent_chance 1	#const SCOUT_TYPE 1669	/* edward longshanks */
		percent_chance 1	#const SCOUT_TYPE 1671	/* gilbert de clare */
		percent_chance 1	#const SCOUT_TYPE 1673	/* john the fearless */
		percent_chance 1	#const SCOUT_TYPE 1675	/* philip the good */
		percent_chance 1	#const SCOUT_TYPE 1677	/* robert guiscard */
		percent_chance 1	#const SCOUT_TYPE 1679	/* roger bosso */
		percent_chance 1	#const SCOUT_TYPE 1681	/* bohemond */
		percent_chance 1	#const SCOUT_TYPE 1683	/* llywelyn ap gruffydd */
		percent_chance 1	#const SCOUT_TYPE 1685	/* dafydd ap gruffydd */
		percent_chance 1	#const SCOUT_TYPE 1687	/* bernard d'armagnac */
		percent_chance 1	#const SCOUT_TYPE 1690	/* warwolf trebuchet */
		percent_chance 1	#const SCOUT_TYPE 1691	/* warwolf trebuchet packed */
		percent_chance 1	#const SCOUT_TYPE 1692	/* jacqueline of hainaut */
		percent_chance 1	#const SCOUT_TYPE 1697	/* flemish militia female */
		percent_chance 1	#const SCOUT_TYPE 1699	/* flemish militia tc */
		percent_chance 1	#const SCOUT_TYPE 1701	/* obuch */
		percent_chance 1	#const SCOUT_TYPE 1703	/* elite obuch */
		percent_chance 1	#const SCOUT_TYPE 1704	/* hussite wagon */
		percent_chance 1	#const SCOUT_TYPE 1706	/* elite hussite wagon */
		percent_chance 1	#const SCOUT_TYPE 1707	/* winged hussar */
		percent_chance 1	#const SCOUT_TYPE 1709	/* houfnice */
		percent_chance 1	#const SCOUT_TYPE 1713	/* jan zizka */
		percent_chance 1	#const SCOUT_TYPE 1715	/* jadwiga */
		percent_chance 1	#const SCOUT_TYPE 1718	/* jogaila */
		percent_chance 1	#const SCOUT_TYPE 1721	/* kestutis */
		percent_chance 1	#const SCOUT_TYPE 1723	/* crusader knight */
		percent_chance 1	#const SCOUT_TYPE 1725	/* algirdas */
		percent_chance 1	#const SCOUT_TYPE 1727	/* ulrich von jungingen */
		percent_chance 1	#const SCOUT_TYPE 1729	/* emperor sigismund */
		percent_chance 1	#const SCOUT_TYPE 1730	/* dimitry of moscow */
		percent_chance 1	#const SCOUT_TYPE 1731	/* mikhail of tver */
		percent_chance 1	#const SCOUT_TYPE 1732	/* young jadwiga */
		percent_chance 1	#const SCOUT_TYPE 1790	/* centurion */
		percent_chance 1	#const SCOUT_TYPE 1792	/* elite centurion */
		percent_chance 1	#const SCOUT_TYPE 1793	/* legionary */
		percent_chance 1	#const SCOUT_TYPE 1800	/* composite bowman */
		percent_chance 1	#const SCOUT_TYPE 1802	/* elite composite bowman */
		percent_chance 1	#const SCOUT_TYPE 1803	/* monaspa */
		percent_chance 1	#const SCOUT_TYPE 1805	/* elite monaspa */
		percent_chance 1	#const SCOUT_TYPE 1808	/* mule cart */
		percent_chance 1	#const SCOUT_TYPE 1810	/* villager male */
		percent_chance 1	#const SCOUT_TYPE 1811	/* warrior priest */
		percent_chance 1	#const SCOUT_TYPE 1813	/* savar */
		percent_chance 1	#const SCOUT_TYPE 1815	/* shah ismail */
		percent_chance 1	#const SCOUT_TYPE 1817	/* qizilbash warrior */
		percent_chance 1	#const SCOUT_TYPE 1819	/* ismail */
		percent_chance 1	#const SCOUT_TYPE 1820	/* selim the grim */
		percent_chance 1	#const SCOUT_TYPE 1821	/* thoros */
		percent_chance 1	#const SCOUT_TYPE 1822	/* tamar */
		percent_chance 1	#const SCOUT_TYPE 1824	/* yury */
		percent_chance 1	#const SCOUT_TYPE 1825	/* ivane */
		percent_chance 1	#const SCOUT_TYPE 1826	/* zakare */
		percent_chance 1	#const SCOUT_TYPE 1827	/* stephan */
		percent_chance 1	#const SCOUT_TYPE 1828	/* mleh */
		percent_chance 1	#const SCOUT_TYPE 1829	/* elite qizilbash warrior */
		percent_chance 1	#const SCOUT_TYPE 1831	/* warrior priest with relic */
		percent_chance 1	#const SCOUT_TYPE 1869	/* hunnic horse */
		percent_chance 1	#const SCOUT_TYPE 2101	/* immortal */
		percent_chance 1	#const SCOUT_TYPE 2102	/* elite immortal */
		percent_chance 1	#const SCOUT_TYPE 2104	/* strategos */
		percent_chance 1	#const SCOUT_TYPE 2105	/* elite strategos */
		percent_chance 1	#const SCOUT_TYPE 2107	/* hippeus */
		percent_chance 1	#const SCOUT_TYPE 2108	/* elite hippeus */
		percent_chance 1	#const SCOUT_TYPE 2110	/* hoplite */
		percent_chance 1	#const SCOUT_TYPE 2111	/* elite hoplite */
		percent_chance 1	#const SCOUT_TYPE 2150	/* war chariot */
		percent_chance 1	#const SCOUT_TYPE 2151	/* elite war chariot */
		percent_chance 1	#const SCOUT_TYPE 2162	/* polemarch age1 */
		percent_chance 1	#const SCOUT_TYPE 2164	/* polemarch age2 */
		percent_chance 1	#const SCOUT_TYPE 2165	/* polemarch age3 */
		percent_chance 1	#const SCOUT_TYPE 2166	/* polemarch age4 */
		percent_chance 1	#const SCOUT_TYPE 2167	/* polemarch age3 with ephorate */
		percent_chance 1	#const SCOUT_TYPE 2168	/* hippeus */
		percent_chance 1	#const SCOUT_TYPE 2169	/* elite hippeus */
		percent_chance 1	#const SCOUT_TYPE 2174	/* immortal ranged */
		percent_chance 1	#const SCOUT_TYPE 2175	/* elite immortal ranged */
		percent_chance 1	#const SCOUT_TYPE 2187	/* hoplite with xyphos */
		percent_chance 1	#const SCOUT_TYPE 2188	/* elite hoplite with xyphos */
		percent_chance 1	#const SCOUT_TYPE 2227	/* strategos with taxiarchs */
		percent_chance 1	#const SCOUT_TYPE 2228	/* elite strategos with taxiarchs */
		percent_chance 1	#const SCOUT_TYPE 2270	/* polemarch age4 with euphorate */
		percent_chance 1	#const SCOUT_TYPE 2271	/* polemarch age3 with morai */
		percent_chance 1	#const SCOUT_TYPE 2272	/* polemarch age4 with morai */
		percent_chance 1	#const SCOUT_TYPE 2273	/* spawn polemarch */
		percent_chance 1	#const SCOUT_TYPE 2308	/* artaphernes */
		percent_chance 1	#const SCOUT_TYPE 2309	/* datis */
		percent_chance 1	#const SCOUT_TYPE 2310	/* aristagoras */
		percent_chance 1	#const SCOUT_TYPE 2313	/* aristides */
		percent_chance 1	#const SCOUT_TYPE 2314	/* miltiades */
		percent_chance 1	#const SCOUT_TYPE 2315	/* themistocles */
		percent_chance 1	#const SCOUT_TYPE 2316	/* leonidas */
		percent_chance 1	#const SCOUT_TYPE 2317	/* brasidas */
		percent_chance 1	#const SCOUT_TYPE 2318	/* lysander */
		percent_chance 1	#const SCOUT_TYPE 2320	/* rhodian slinger */
		percent_chance 1	#const SCOUT_TYPE 2321	/* mercenary hoplite */
		percent_chance 1	#const SCOUT_TYPE 2322	/* elite greek cavalry */
		percent_chance 1	#const SCOUT_TYPE 2323	/* elite persian cavalry */
		percent_chance 1	#const SCOUT_TYPE 2324	/* elite persian archer */
		percent_chance 1	#const SCOUT_TYPE 2325	/* ekdromos */
		percent_chance 1	#const SCOUT_TYPE 2326	/* cretan archer */
		percent_chance 1	#const SCOUT_TYPE 2327	/* camel raider */
		percent_chance 1	#const SCOUT_TYPE 2328	/* tarantine cavalry */
		percent_chance 1	#const SCOUT_TYPE 2329	/* sparabara */
		percent_chance 1	#const SCOUT_TYPE 2330	/* takabara */
		percent_chance 1	#const SCOUT_TYPE 2331	/* sickle warrior */
		percent_chance 1	#const SCOUT_TYPE 2332	/* thracian peltast */
		percent_chance 1	#const SCOUT_TYPE 2346	/* cleon */
		percent_chance 1	#const SCOUT_TYPE 2347	/* darius */
		percent_chance 1	#const SCOUT_TYPE 2349	/* elite hoplite */
		percent_chance 1	#const SCOUT_TYPE 2381	/* goat unconvertible */

		percent_chance 100	#const SCOUT_TYPE 448	/* scout */
	end_random
endif

if REGICIDE
	create_object KING {
	set_place_for_every_player
	min_distance_group_placement 2
	if USE_NOMAD_SETUP
		if PERSONAL_RESOURCES
			min_distance_to_players 6
			set_circular_placement
			find_closest		
		else
			avoid_forest_zone 3
			avoid_cliff_zone 3
			avoid_actor_area 999
			min_distance_to_players 25
			set_circular_placement
			actor_area 888
			actor_area_radius 8
			avoid_actor_area 8
			if 36x36	min_distance_to_map_edge 4
			elseif TINY_OR_SMALLER	min_distance_to_map_edge 10
			elseif HUGE_OR_LARGER	min_distance_to_map_edge 25
			else	min_distance_to_map_edge 15
			endif

		endif
	else
		min_distance_to_players 6
		set_circular_placement
		find_closest
	endif
	}
endif

if GIVE_MARKET
	if WALLED_CENTER
	else
		start_random
			percent_chance 49 #define USE_TRADE_CART_SCOUT
		end_random
	endif
endif

if USE_TRADE_CART_SCOUT
	create_object TRADE_CART {
		set_place_for_every_player
		min_distance_group_placement 2
		if USE_NOMAD_SETUP
			if PERSONAL_RESOURCES
				min_distance_to_players 6
				max_distance_to_players 9
				set_circular_placement
			else
				avoid_forest_zone 3
				avoid_cliff_zone 3
				avoid_actor_area 999
				min_distance_to_players 25
				set_circular_placement
				actor_area 888
				actor_area_radius 8
				avoid_actor_area 8
				if 36x36	min_distance_to_map_edge 2
				elseif TINY_OR_SMALLER	min_distance_to_map_edge 10
				elseif HUGE_OR_LARGER	min_distance_to_map_edge 25
				else	min_distance_to_map_edge 15
				endif
			endif
		else
			min_distance_to_players 6
			max_distance_to_players 9
			set_circular_placement
		endif
	}
elseif USE_NOMAD_SETUP
	start_random
		percent_chance 24
			create_object SCOUT_TYPE {
				set_place_for_every_player
				avoid_forest_zone 3
				avoid_cliff_zone 3
				if PERSONAL_RESOURCES
					min_distance_to_players 6
					max_distance_to_players 9
					set_circular_placement
				else
					avoid_actor_area 999
					min_distance_to_players 25
					set_circular_placement
					actor_area 888
					actor_area_radius 8
					avoid_actor_area 8
					if 36x36	min_distance_to_map_edge 2
					elseif TINY_OR_SMALLER	min_distance_to_map_edge 10
					elseif HUGE_OR_LARGER	min_distance_to_map_edge 25
					else	min_distance_to_map_edge 15
					endif
				endif
				if FLAG_SCOUT second_object FLAG_D endif
			}
	end_random
else 
	create_object SCOUT_TYPE {
	if EXTREME_SCOUTS	number_of_objects rnd(1,3)
	elseif ONLY_1_SCOUT	number_of_objects 1
	else
	start_random
		percent_chance 93	number_of_objects 1
		percent_chance 5	number_of_objects 2
		percent_chance 1	number_of_objects 3	#define NEED_MORE_HOUSING if POP30 elseif POP25 #define POP30 elseif POP20 #define POP25 elseif POP15 #define POP20 elseif POP10 #define POP15 else #define POP10 endif
	end_random
	endif
	set_place_for_every_player
	min_distance_group_placement 2
	min_distance_to_players 6
	max_distance_to_players 8
	set_circular_placement
	if FLAG_SCOUT second_object FLAG_D endif
	}
endif

if REGICIDE
	if USE_NOMAD_SETUP
	elseif 36x36
	else
	create_object VILLAGER {
		number_of_objects 7
		set_place_for_every_player
		min_distance_to_players 5
		max_distance_to_players 8
		set_circular_placement
	}
	start_random
		percent_chance 30	create_object TOWER_TYPE #define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP30 elseif POP15 #define POP25 elseif POP10 #define POP20 else #define POP15 endif
		percent_chance 10	create_object MISC_BUILDING_TYPE	#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP30 elseif POP15 #define POP25 elseif POP10 #define POP20 else #define POP15 endif
		percent_chance 100	create_object CASTLE_TYPE
	end_random
	{
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 12
		start_random
			percent_chance 49 find_closest_to_map_edge
			percent_chance 50 find_closest_to_map_center
		end_random
		set_circular_placement
		min_distance_group_placement 2
	}
	endif
endif

/* chance double villager count */		
if EXTREME_CHANCES
	start_random		
		percent_chance 10	#define DOUBLE_VILLAGERS
	end_random	
else
	start_random		
		percent_chance 1	#define DOUBLE_VILLAGERS
	end_random
endif
if DOUBLE_VILLAGERS
	create_object VILLAGER {		
		set_place_for_every_player		
		if USE_NOMAD_SETUP	
			avoid_forest_zone 3
			avoid_cliff_zone 3
			avoid_actor_area 999
			min_distance_group_placement 2
			actor_area 888
			actor_area_radius 8
			avoid_actor_area 8
			if 36x36	min_distance_to_map_edge 4	temp_min_distance_group_placement 5
			elseif TINY_OR_SMALLER	min_distance_to_map_edge 10	temp_min_distance_group_placement 18
			elseif HUGE_OR_LARGER	min_distance_to_map_edge 25 temp_min_distance_group_placement 40
			else	min_distance_to_map_edge 15	temp_min_distance_group_placement 22
			endif
		else		
			min_distance_to_players 2		
			max_distance_to_players 9	
			set_circular_placement			
		endif	
		#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP25 elseif POP15 #define POP20 elseif POP10 #define POP15 else #define POP10 endif
	}
endif	

/* chance to add extra villagers */		
create_object VILLAGER {		
set_place_for_every_player		
if USE_NOMAD_SETUP	
	avoid_forest_zone 3
	avoid_cliff_zone 3
	avoid_actor_area 999
	actor_area 888
	actor_area_radius 8
	avoid_actor_area 8
	if 36x36	min_distance_to_map_edge 4	temp_min_distance_group_placement 5
	elseif TINY_OR_SMALLER	min_distance_to_map_edge 10	temp_min_distance_group_placement 18
	elseif HUGE_OR_LARGER	min_distance_to_map_edge 25 temp_min_distance_group_placement 40
	else	min_distance_to_map_edge 15	temp_min_distance_group_placement 22
	endif
	min_distance_group_placement 2 
else		
	min_distance_to_players 2		
	max_distance_to_players 9	
	set_circular_placement	
endif
if EXTREME_CHANCES
	number_of_objects rnd(0,5)
else
	start_random		
		percent_chance 89	number_of_objects 0		
		percent_chance 3	number_of_objects 1		
		percent_chance 3		
			number_of_objects 2		
			#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP25 elseif POP15 #define POP20 elseif POP10 #define POP15 else #define POP10 endif	
		percent_chance 2		
			number_of_objects 3		
			#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP25 elseif POP15 #define POP20 elseif POP10 #define POP15 else #define POP10 endif	
		percent_chance 2		
			number_of_objects 4		
			#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP25 elseif POP15 #define POP20 elseif POP10 #define POP15 else #define POP10 endif	
		percent_chance 1		
			number_of_objects 5			
			#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP25 elseif POP15 #define POP20 elseif POP10 #define POP15 else #define POP10 endif	
	end_random
endif	
}		


/* pick from a wide selection of possible buildings */
if USE_NOMAD_SETUP	/* no bonus buildings */
elseif ALLOW_RANDOM_BUILDINGS
	if EXTREME_BUILDINGS
	if ALLOW_DEFEND_THE_WONDER
		if SUDDEN_DEATH
		elseif REGICIDE
		elseif USE_NOMAD_SETUP
		else	
			start_random
				percent_chance 10	#define GIVE_MONUMENT	#define USE_DEFEND_THE_WONDER
			end_random
		endif
	endif
	
	start_random
			percent_chance 10	#define GIVE_FEITORIA	#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP30 elseif POP15 #define POP30 elseif POP10 #define POP30 else #define POP25 endif
			percent_chance 5	#define GIVE_TRADE_WORKSHOP
	end_random
		
	start_random
		percent_chance 10	#define GIVE_CASTLE
	end_random
	
	if EMPIRE_WARS
	else
		start_random
			percent_chance 10	#define GIVE_FARMS
		end_random
	endif

	if CAPTURE_THE_RELIC	/* don't want extra monastery */
	else
		start_random
			percent_chance 20	#define GIVE_BASIC_BUILDING
		end_random	
		start_random
			percent_chance 20	#define GIVE_STANDARD_BUILDING
		end_random
	endif

	start_random
		percent_chance 25	#define GIVE_HOUSE
	end_random	
	
	start_random
		percent_chance 25	#define GIVE_MISC_BUILDING
	end_random	
	
	start_random
		percent_chance 20	#define GIVE_RING_OF_BUILDINGS
	end_random	
	
	else	/* not extreme */
	
	if ALLOW_DEFEND_THE_WONDER
		if SUDDEN_DEATH
		elseif REGICIDE
		elseif USE_NOMAD_SETUP
		else	
			start_random
				percent_chance 1	#define GIVE_MONUMENT	#define USE_DEFEND_THE_WONDER
			end_random
		endif
	endif
	
	start_random
			percent_chance 2	#define GIVE_FEITORIA	#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP30 elseif POP15 #define POP30 elseif POP10 #define POP30 else #define POP25 endif
			percent_chance 1	#define GIVE_TRADE_WORKSHOP
	end_random
		
	start_random
		percent_chance 1	#define GIVE_CASTLE
	end_random
	
	if EMPIRE_WARS
	else
		start_random
			percent_chance 5	#define GIVE_FARMS
		end_random
	endif

	if CAPTURE_THE_RELIC	/* don't want extra monastery */
	else
		start_random
			percent_chance 10	#define GIVE_BASIC_BUILDING
		end_random	
		start_random
			percent_chance 10	#define GIVE_STANDARD_BUILDING
		end_random
	endif

	start_random
		percent_chance 15	#define GIVE_HOUSE
	end_random	
	
	start_random
		percent_chance 15	#define GIVE_MISC_BUILDING
	end_random	
	
	start_random
		percent_chance 10	#define GIVE_RING_OF_BUILDINGS
	end_random	
	endif
endif

if CAPTURE_THE_RELIC
	create_object MONASTERY {
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 15
		find_closest_to_map_edge
		set_circular_placement
		min_distance_group_placement 3
	}
endif

if GIVE_MONUMENT
	create_object MONUMENT_TYPE {
		set_place_for_every_player
		set_circular_placement
		find_closest_to_map_edge
		min_distance_to_players 6
		max_distance_to_players 13
		min_distance_group_placement 2
		actor_area 9999
		actor_area_radius 4
	}
	
	create_object TOWER_TYPE {
		set_place_for_every_player
		number_of_objects rnd(0,4)
		actor_area_to_place_in 9999
		temp_min_distance_group_placement 2
		min_distance_group_placement 1
	}
	create_object FLAG_C {
		set_place_for_every_player
		number_of_objects 80
		actor_area_to_place_in 9999
		temp_min_distance_group_placement 1
		min_distance_group_placement 1
	}
endif

if USE_NEUTRAL_MARKET
	start_random
		percent_chance 75	#define GIVE_MARKET
	end_random
endif

if GIVE_MARKET
	create_object MARKET {
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 13
		set_circular_placement
		start_random
			percent_chance 49 find_closest_to_map_edge
			percent_chance 50 find_closest_to_map_center
		end_random
		min_distance_group_placement 3
	}
endif

if ALWAYS_FEITORIA	#define GIVE_FEITORIA	#define NEED_MORE_HOUSING	if POP30 elseif POP25 #define POP30 elseif POP20 #define POP30 elseif POP15 #define POP30 elseif POP10 #define POP30 else #define POP25 endif endif
	
if GIVE_FEITORIA
	create_object DLC_FEITORIA {
		set_place_for_every_player
		set_circular_placement
		start_random
			percent_chance 49 find_closest_to_map_edge
			percent_chance 50 find_closest_to_map_center
		end_random
		min_distance_to_players 6
		max_distance_to_players 13
		min_distance_group_placement 4
	}
endif
if GIVE_TRADE_WORKSHOP
	create_object BR_TRADE_WORKSHOP {
		set_place_for_every_player
		set_circular_placement
		start_random
			percent_chance 49 find_closest_to_map_edge
			percent_chance 50 find_closest_to_map_center
		end_random
		min_distance_to_players 6
		max_distance_to_players 13
		min_distance_group_placement 3
	}
endif

if GIVE_CASTLE
	create_object CASTLE_TYPE {
		set_place_for_every_player
		set_circular_placement
		start_random
			percent_chance 49 find_closest_to_map_edge
			percent_chance 50 find_closest_to_map_center
		end_random
		min_distance_to_players 6
		max_distance_to_players 13
		min_distance_group_placement 4
	}
endif

if GIVE_FARMS
	create_object FARM {
		set_place_for_every_player
		number_of_objects rnd(1,4)
		find_closest
	}
endif

if GIVE_BASIC_BUILDING
		start_random
			percent_chance 14 create_object	MARKET
			percent_chance 15 create_object BARRACKS 
			percent_chance 15 create_object STABLE   /* so mesoamerican civs can train xolotl warriors */
			percent_chance 15 create_object ARCHERY_RANGE
			percent_chance 15 create_object MONASTERY
			percent_chance 100 create_object OUTPOST
		end_random
	{
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 13
		start_random
			percent_chance 49 find_closest_to_map_edge
			percent_chance 50 find_closest_to_map_center
		end_random
		set_circular_placement
		min_distance_group_placement 3
	}
endif

if GIVE_STANDARD_BUILDING
	create_object STANDARD_BUILDING_TYPE {
		set_place_for_every_player
		set_circular_placement
		start_random
			percent_chance 49 find_closest_to_map_edge
			percent_chance 50 find_closest_to_map_center
		end_random
		min_distance_to_players 6
		max_distance_to_players 13
		min_distance_group_placement 3
	}
endif

if GIVE_HOUSE
	create_object HOUSE_TYPE {
		set_place_for_every_player
		set_circular_placement
		min_distance_to_players 6
		max_distance_to_players 13
		min_distance_group_placement 1
	}
endif

if GIVE_MISC_BUILDING
	create_object MISC_BUILDING_TYPE {
		set_place_for_every_player
		set_circular_placement
		min_distance_to_players 6
		max_distance_to_players 13
		min_distance_group_placement 2
	}
endif

if GIVE_RING_OF_BUILDINGS
	if EXTREME_BUILDINGS
		start_random
			percent_chance 10	create_object FARM_TYPE
			percent_chance 10	create_object STANDARD_BUILDING_TYPE
			percent_chance 10	create_object CASTLE_TYPE
			percent_chance 10	create_object HOUSE_TYPE
			percent_chance 20	create_object TOWER_TYPE
			percent_chance 10	create_object TC_TOWER
			percent_chance 10	create_object MISC_BUILDING_TYPE
			percent_chance 10	create_object OP_BUILDINGS_TYPE
			percent_chance 100	create_object OUTPOST
		end_random
	else	/* not extreme */
		start_random
			percent_chance 3	create_object FARM_TYPE
			percent_chance 35	create_object HOUSE_TYPE
			percent_chance 24	create_object TOWER_TYPE
			percent_chance 5	create_object MISC_BUILDING_TYPE
			percent_chance 100	create_object OUTPOST
		end_random
	endif
	{
		set_place_for_every_player
		start_random
			percent_chance 33
				number_of_objects 4
				min_distance_to_players 12
				temp_min_distance_group_placement 11
			percent_chance 33
				number_of_objects 6
				min_distance_to_players 15
				temp_min_distance_group_placement 11
			percent_chance 33
				number_of_objects 8
				min_distance_to_players 16
				temp_min_distance_group_placement 9
		end_random
		set_circular_placement
		find_closest
		min_distance_group_placement 2
	}
endif


/* provide housing when you have more than one extra villager */	
if NEED_MORE_HOUSING
	if USE_NOMAD_SETUP
	else
	create_object HOUSE_TYPE {
		if POP30	number_of_objects 5
		elseif POP25	number_of_objects 4
		elseif POP20	number_of_objects 3
		elseif POP15	number_of_objects 2
		else	number_of_objects 1
		endif
		set_place_for_every_player
		min_distance_to_players 6	
		find_closest
		set_circular_placement
		min_distance_group_placement 2
	}
	endif
endif	


/* starting boat */
if WATER_IS_DRY
elseif FREEZE_ALL_WATER
elseif FREEZE_PRIMARY_AND_SECONDARY_WATER
elseif WATER_BASED_MAP		#define TRY_TO_PLACE_STARTING_BOAT
elseif CENTER_IS_WATER		#define TRY_TO_PLACE_STARTING_BOAT
elseif CENTER_IS_SHALLOWS	#define TRY_TO_PLACE_STARTING_BOAT
endif

if TRY_TO_PLACE_STARTING_BOAT
	if DEATH_MATCH
		start_random
			percent_chance 89 #define PLACE_STARTING_BOAT
		end_random
	elseif EXTREME_BOATS
		start_random
			percent_chance 95 #define PLACE_STARTING_BOAT
		end_random
	else
		start_random
			percent_chance 49 #define PLACE_STARTING_BOAT
		end_random
	endif
endif


if PLACE_STARTING_BOAT
	if USE_NOMAD_SETUP
		start_random
			percent_chance 49	#const BOAT_TYPE 545	/* transport ship */
			percent_chance 50	#const BOAT_TYPE 2148	/* antiquity transport ship */
		end_random
	elseif DM_SCOUT_POOL
		start_random
			percent_chance 2	#const BOAT_TYPE 15		/* junk; can trade with */
			percent_chance 4	#const BOAT_TYPE 106	/* Leif Erikson - longboat */
			percent_chance 4	#const BOAT_TYPE 114	/* Stoertebeker - monkboat */	#define BOARDING_BOAT
			percent_chance 4	#const BOAT_TYPE 203	/* Vasco da Gama - caravel */
			percent_chance 3	#const BOAT_TYPE 528	/* heavy demolition ship */
			percent_chance 3	#const BOAT_TYPE 532	/* fast fire ship */
			percent_chance 3	#const BOAT_TYPE 533	/* elite longboat */
			percent_chance 3	#const BOAT_TYPE 535	/* bdgal - boarding galley */	#define BOARDING_BOAT
			percent_chance 3	#const BOAT_TYPE 536	/* abgal - advanced boarding galley */	#define BOARDING_BOAT
			percent_chance 3	#const BOAT_TYPE 691	/* elite cannon galleon */
			percent_chance 3	#const BOAT_TYPE 778	/* canoe */
			percent_chance 3	#const BOAT_TYPE 832	/* elite turtle ship */
			percent_chance 4	#const BOAT_TYPE 844	/* Admiral Yi Sun-shin */
			percent_chance 3	#const BOAT_TYPE 1006	/* elite caravel */
			percent_chance 3	#const BOAT_TYPE 1022	/* monkboat */	#define BOARDING_BOAT
			percent_chance 4	#const BOAT_TYPE 1302	/* dragon ship */
			percent_chance 4	#const BOAT_TYPE 1631	/* the Middlebrook - longboat */
			percent_chance 3	#const BOAT_TYPE 1750	/* Thirisadai */
			percent_chance 3	#const BOAT_TYPE 1795	/* dromon */
			percent_chance 3	#const BOAT_TYPE 2126	/* elite lembos */
			percent_chance 3	#const BOAT_TYPE 2129	/* trireme */
			percent_chance 3	#const BOAT_TYPE 2132	/* elite galley */
			percent_chance 3	#const BOAT_TYPE 2135	/* heavy incendiary ship */
			percent_chance 3	#const BOAT_TYPE 2139	/* onager ship */
			percent_chance 3	#const BOAT_TYPE 2140	/* leviathan */
			percent_chance 4	#const BOAT_TYPE 2311	/* dionysus */
			percent_chance 4	#const BOAT_TYPE 2312	/* artemisia */
			percent_chance 4	#const BOAT_TYPE 2319	/* the aeginetan */
			percent_chance 4	#const BOAT_TYPE 2339	/* themistocles warship */
			percent_chance 100	#const BOAT_TYPE 443	/* galleon */
		end_random
		
	elseif EXTREME_BOATS
		start_random
			percent_chance 0	#const BOAT_TYPE 13		/* fishing ship */	#define GIVE_FISHTRAP
			percent_chance 2	#const BOAT_TYPE 15		/* junk; can trade with */
			percent_chance 1	#const BOAT_TYPE 17		/* trade cog */
			percent_chance 1	#const BOAT_TYPE 21		/* war galley */
			percent_chance 2	#const BOAT_TYPE 106	/* Leif Erikson - longboat */
			percent_chance 2	#const BOAT_TYPE 114	/* Stoertebeker - monkboat */	#define BOARDING_BOAT
			percent_chance 2	#const BOAT_TYPE 203	/* Vasco da Gama - caravel */
			percent_chance 2	#const BOAT_TYPE 250	/* longboat */
			percent_chance 2	#const BOAT_TYPE 420	/* cannon galleon */
			/* omtbo - off map trading boat ## no DE graphics ## */
			/* strbo - ## no DE graphics ## */
			percent_chance 1 	#const BOAT_TYPE 443	/* galleon */
			percent_chance 2	#const BOAT_TYPE 527	/* demolition ship */	
			percent_chance 2	#const BOAT_TYPE 528	/* heavy demolition ship */	
			percent_chance 1	#const BOAT_TYPE 529	/* fire ship */	
			percent_chance 1	#const BOAT_TYPE 532	/* fast fire ship */
			percent_chance 2	#const BOAT_TYPE 533	/* elite longboat */
			percent_chance 2	#const BOAT_TYPE 535	/* bdgal - boarding galley */	#define BOARDING_BOAT
			percent_chance 2	#const BOAT_TYPE 536	/* abgal - advanced boarding galley */	#define BOARDING_BOAT
			percent_chance 1	#const BOAT_TYPE 539	/* galley */	
			percent_chance 1	#const BOAT_TYPE 545	/* transport ship */
			percent_chance 2	#const BOAT_TYPE 691	/* elite cannon galleon */	
			percent_chance 2	#const BOAT_TYPE 778	/* canoe */
			percent_chance 2	#const BOAT_TYPE 831	/* turtle ship */		
			percent_chance 2	#const BOAT_TYPE 832	/* elite turtle ship */			
			percent_chance 2	#const BOAT_TYPE 844	/* Admiral Yi Sun-shin */	
			percent_chance 2	#const BOAT_TYPE 1103	/* fire galley */
			percent_chance 2	#const BOAT_TYPE 1004	/* caravel */
			percent_chance 2	#const BOAT_TYPE 1006	/* elite caravel */
			percent_chance 2	#const BOAT_TYPE 1022	/* monkboat */	#define BOARDING_BOAT
			percent_chance 2	#const BOAT_TYPE 1104	/* demolition raft */
			percent_chance 2	#const BOAT_TYPE 1302	/* dragon ship */
			percent_chance 2	#const BOAT_TYPE 1631	/* the Middlebrook - longboat */
			percent_chance 2	#const BOAT_TYPE 1750	/* Thirisadai */
			percent_chance 2	#const BOAT_TYPE 1795	/* dromon */
			percent_chance 2	#const BOAT_TYPE 2123	/* lembos */
			percent_chance 2	#const BOAT_TYPE 2124	/* war lembos */
			percent_chance 2	#const BOAT_TYPE 2125	/* heavy lembos */
			percent_chance 2	#const BOAT_TYPE 2126	/* elite lembos */
			percent_chance 2	#const BOAT_TYPE 2127	/* monoreme */
			percent_chance 2	#const BOAT_TYPE 2128	/* binoreme */
			percent_chance 2	#const BOAT_TYPE 2129	/* trireme */
			percent_chance 1	#const BOAT_TYPE 2130	/* antiquity galley */
			percent_chance 1	#const BOAT_TYPE 2131	/* antiquity war galley */
			percent_chance 1	#const BOAT_TYPE 2132	/* elite galley */
			percent_chance 1	#const BOAT_TYPE 2133	/* incendiary raft */
			percent_chance 1	#const BOAT_TYPE 2134	/* incendiary ship */
			percent_chance 2	#const BOAT_TYPE 2135	/* heavy incendiary raft */
			percent_chance 2	#const BOAT_TYPE 2138	/* catapult ship */
			percent_chance 2	#const BOAT_TYPE 2139	/* onager ship */
			percent_chance 2	#const BOAT_TYPE 2140	/* leviathan */
			percent_chance 1	#const BOAT_TYPE 2147	/* antiquity fishing ship */	#define GIVE_FISHTRAP
			percent_chance 1	#const BOAT_TYPE 2148	/* antiquity transport ship */
			percent_chance 2	#const BOAT_TYPE 2149	/* merchant ship */
			percent_chance 2	#const BOAT_TYPE 2171	/* oystering ship */	#define GIVE_FISHTRAP
			percent_chance 2	#const BOAT_TYPE 2311	/* dionysus */
			percent_chance 2	#const BOAT_TYPE 2312	/* artemisia */
			percent_chance 2	#const BOAT_TYPE 2319	/* the aeginetan */
			percent_chance 2	#const BOAT_TYPE 2339	/* themistocles warship */
			percent_chance 1	#const BOAT_TYPE 2356	/* antiquity mode fishing ship */	#define GIVE_FISHTRAP
			percent_chance 100	#const BOAT_TYPE 13		/* fishing ship */	#define GIVE_FISHTRAP
		end_random
		
	elseif ALLOW_RANDOM_BOAT
		start_random
			percent_chance 2	#const BOAT_TYPE 15		/* junk; can trade with */
			percent_chance 3	#const BOAT_TYPE 17		/* trade cog */
			percent_chance 3	#const BOAT_TYPE 21		/* war galley */
			percent_chance 3	#const BOAT_TYPE 114	/* Stoertebeker - monkboat */	#define BOARDING_BOAT
			percent_chance 3	#const BOAT_TYPE 527	/* demolition ship */	
			percent_chance 3	#const BOAT_TYPE 528	/* heavy demolition ship */	
			percent_chance 3	#const BOAT_TYPE 529	/* fire ship */	
			percent_chance 3	#const BOAT_TYPE 535	/* bdgal - boarding galley */	#define BOARDING_BOAT
			percent_chance 3	#const BOAT_TYPE 536	/* abgal - advanced boarding galley */	#define BOARDING_BOAT
			percent_chance 3	#const BOAT_TYPE 539	/* galley */	
			percent_chance 3	#const BOAT_TYPE 545	/* transport ship */
			percent_chance 3	#const BOAT_TYPE 778	/* canoe */	
			percent_chance 3	#const BOAT_TYPE 1103	/* fire galley */
			percent_chance 3	#const BOAT_TYPE 1004	/* caravel */
			percent_chance 3	#const BOAT_TYPE 1022	/* monkboat */	#define BOARDING_BOAT
			percent_chance 3	#const BOAT_TYPE 1104	/* demolition raft */
			percent_chance 3	#const BOAT_TYPE 1302	/* dragon ship */
			percent_chance 3	#const BOAT_TYPE 2123	/* lembos */
			percent_chance 3	#const BOAT_TYPE 2124	/* war lembos */
			percent_chance 3	#const BOAT_TYPE 2125	/* heavy lembos */
			percent_chance 3	#const BOAT_TYPE 2127	/* monoreme */
			percent_chance 3	#const BOAT_TYPE 2128	/* binoreme */
			percent_chance 3	#const BOAT_TYPE 2130	/* antiquity galley */
			percent_chance 3	#const BOAT_TYPE 2131	/* antiquity war galley */
			percent_chance 3	#const BOAT_TYPE 2133	/* incendiary raft */
			percent_chance 3	#const BOAT_TYPE 2134	/* incendiary ship */
			percent_chance 3	#const BOAT_TYPE 2135	/* heavy incendiary raft */
			percent_chance 3	#const BOAT_TYPE 2147	/* antiquity fishing ship */	#define GIVE_FISHTRAP
			percent_chance 3	#const BOAT_TYPE 2148	/* antiquity transport ship */
			percent_chance 3	#const BOAT_TYPE 2149	/* merchant ship */
			percent_chance 3	#const BOAT_TYPE 2171	/* oystering ship */	#define GIVE_FISHTRAP
			percent_chance 3	#const BOAT_TYPE 2356	/* antiquity mode fishing ship */	#define GIVE_FISHTRAP
			percent_chance 100	#const BOAT_TYPE 13		/* fishing ship */	#define GIVE_FISHTRAP
		end_random
		
	else /* only non-combat boats */
		start_random
			percent_chance 9	#const BOAT_TYPE 15		/* junk; can trade with */
			percent_chance 10	#const BOAT_TYPE 17		/* trade cog */
			percent_chance 20	#const BOAT_TYPE 545	/* transport ship */
			percent_chance 10	#const BOAT_TYPE 13		/* fishing ship */	#define GIVE_FISHTRAP
			percent_chance 10	#const BOAT_TYPE 2147	/* antiquity fishing ship */	#define GIVE_FISHTRAP
			percent_chance 10	#const BOAT_TYPE 2148	/* antiquity transport ship */
			percent_chance 10	#const BOAT_TYPE 2149	/* merchant ship */
			percent_chance 10	#const BOAT_TYPE 2171	/* oystering ship */	#define GIVE_FISHTRAP
			percent_chance 10	#const BOAT_TYPE 2356	/* antiquity mode fishing ship */	#define GIVE_FISHTRAP
		end_random	
	endif
endif



if PLACE_STARTING_BOAT
	create_object BOAT_TYPE {
		if EXTREME_BOATS	number_of_objects rnd(1,3)
		else	number_of_objects 1
		endif
		terrain_to_place_on WATER_A
		set_place_for_every_player
		avoid_actor_area 7655	/* tiny puddles and land */
		if WATER_BASED_MAP
			if NO_PLAYER_LAND_BORDERS
				if CORNER_LANDS
					if ONE_ZONE	find_closest
					else	find_closest_to_map_center
					endif
				elseif SIDE_LANDS
					if ONE_ZONE	find_closest
					else	find_closest_to_map_center
					endif
				else find_closest
				endif
			else find_closest
			endif
		else find_closest
		endif
		ignore_terrain_restrictions
		avoid_forest_zone 4
		max_distance_to_other_zones 4
		if GIVE_FISHTRAP
			start_random
				percent_chance 25 second_object FISH_TRAP
			end_random
		endif
	}
endif


/* add dock harbor port seaport */


endif

/* end starting units and buildings */
/* =================================================================================================== */
/* relics and koTH stuff */

if USE_GAIA_DOCKS
	create_object DOCK {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		make_indestructible 
		actor_area_to_place_in 1999
		ignore_terrain_restrictions
	}
	create_object MERCHANT {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		actor_area_to_place_in 1999
		ignore_terrain_restrictions
		min_distance_group_placement 6
		actor_area 5999
		actor_area_radius 6
	}
	create_object DOCK {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		make_indestructible 
		actor_area_to_place_in 2999
		ignore_terrain_restrictions
	}
	create_object MERCHANT {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		actor_area_to_place_in 2999
		ignore_terrain_restrictions
		min_distance_group_placement 6
		actor_area 5999
		actor_area_radius 6
	}
	create_object DOCK {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		make_indestructible 
		actor_area_to_place_in 3999
		ignore_terrain_restrictions
	}
	create_object MERCHANT {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		actor_area_to_place_in 3999
		ignore_terrain_restrictions
		min_distance_group_placement 6
		actor_area 5999
		actor_area_radius 6
	}
	create_object DOCK {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		make_indestructible 
		actor_area_to_place_in 4999
		ignore_terrain_restrictions
	}
	create_object MERCHANT {
		set_place_for_every_player
		set_gaia_object_only
		set_gaia_unconvertible
		actor_area_to_place_in 4999
		ignore_terrain_restrictions
		actor_area 5999
		actor_area_radius 6
	}
	
	/* reveal the corners since the dock is not visible when playing explored */
	create_object BLANKOBJECT {
		set_place_for_every_player
		number_of_objects 9320
		set_scaling_to_map_size
		avoid_actor_area 5999
		temp_min_distance_group_placement 1
		actor_area 59991
	}
	create_object TEMP_MAP_REVEALER {
		set_place_for_every_player
		number_of_objects 9320
		set_scaling_to_map_size
		avoid_actor_area 59991
		temp_min_distance_group_placement 1
	}
endif

if USE_RELIC_RUSH
	create_object RELIC {
		number_of_objects 200
		place_on_specific_land_id 22
		max_distance_to_players rnd(1,2)
		terrain_to_place_on LAND_Z
		start_random 
			percent_chance 0	second_object RELIC
		end_random
	}
endif

if USE_NEUTRAL_MARKET
	create_object TEMPORARY_OBJECT_GRID {
		number_of_objects 1
		set_gaia_object_only
		set_gaia_unconvertible
		place_on_specific_land_id 22
		max_distance_to_players 0
		second_object NEUTRAL_MARKET
	}
/*
	create_object MARKET {
		set_gaia_object_only
		set_gaia_unconvertible
		make_indestructible 
		place_on_specific_land_id 22
		max_distance_to_players 0
		ignore_terrain_restrictions
	}
*/
endif

if USE_MONUMENT
	create_object MONUMENT {
		number_of_objects 1
		set_gaia_object_only
		place_on_specific_land_id 22
		max_distance_to_players 0
		ignore_terrain_restrictions
	}
endif


/* place outlaws and map revealers around the monument in koth or the relic in ctr */
if SPECIAL_CENTER 
	if BATTLE_ROYALE
	elseif USE_NEUTRAL_MARKET
		create_object TEMP_MAP_REVEALER {
			set_place_for_every_player
			number_of_objects 800
			terrain_to_place_on LAND_Z
			min_distance_group_placement 1
		}
	else
		create_object MAP_REVEALER {
			set_place_for_every_player
			number_of_objects 800
			terrain_to_place_on LAND_Z
		}
	endif
	if BATTLE_ROYALE
		create_object GAIA_GUARDIAN_C {
			number_of_objects rnd(1,2)
			set_scaling_to_player_number
			place_on_specific_land_id 22
			min_distance_to_players 3
			temp_min_distance_group_placement 3	
			find_closest
			min_distance_group_placement 1
			set_gaia_object_only
			set_gaia_unconvertible
		}
		create_object GAIA_GUARDIAN_B {
			if MINI_OR_SMALLER	number_of_objects rnd(2,3)
			else	number_of_objects rnd(5,6)
			endif
			set_scaling_to_player_number
			place_on_specific_land_id 22
			min_distance_to_players 4
			temp_min_distance_group_placement 2
			find_closest
			min_distance_group_placement 1
			set_gaia_object_only
			set_gaia_unconvertible
		}
		create_object GAIA_GUARDIAN_A {
			if MINI_OR_SMALLER number_of_objects rnd(10,15)
			elseif TINY_OR_SMALLER number_of_objects rnd(20,30)
			elseif USE_RELIC_RUSH number_of_objects rnd(50,70)
			elseif USE_MONUMENT number_of_objects rnd(50,70)
			else	number_of_objects 125
			endif
			place_on_specific_land_id 22
			min_distance_to_players 5
			find_closest
			temp_min_distance_group_placement 1
			min_distance_group_placement 1
			set_gaia_object_only
			set_gaia_unconvertible
		}
	elseif USE_NOMAD_SETUP
	elseif USE_NEUTRAL_MARKET /* don't guard it */
	elseif NO_GAIA_ARMIES
	elseif 36x36
	else
		create_object GAIA_GUARDIAN_C {
			number_of_objects rnd(1,2)
			set_scaling_to_player_number
			place_on_specific_land_id 22
			if KING_OT_HILL
				min_distance_to_players 6
				temp_min_distance_group_placement 5
			elseif CAPTURE_THE_RELIC
				min_distance_to_players 6
				temp_min_distance_group_placement 5
			else
				min_distance_to_players 3
				temp_min_distance_group_placement 3
			endif	
			find_closest
			min_distance_group_placement 1
			set_gaia_object_only
			set_gaia_unconvertible
		}
		create_object GAIA_GUARDIAN_B {
			if MINI_OR_SMALLER	number_of_objects rnd(2,3)
			else	number_of_objects rnd(5,6)
			endif
			set_scaling_to_player_number
			place_on_specific_land_id 22
			if KING_OT_HILL
				min_distance_to_players 6
				temp_min_distance_group_placement 3
			elseif CAPTURE_THE_RELIC
				min_distance_to_players 6
				temp_min_distance_group_placement 3
			else
				min_distance_to_players 4
				temp_min_distance_group_placement 2
			endif	
			find_closest
			min_distance_group_placement 1
			set_gaia_object_only
			set_gaia_unconvertible
		}
		create_object GAIA_GUARDIAN_A {
			if MINI_OR_SMALLER number_of_objects rnd(10,15)
			elseif TINY_OR_SMALLER number_of_objects rnd(20,30)
			elseif USE_RELIC_RUSH number_of_objects rnd(50,70)
			elseif USE_MONUMENT number_of_objects rnd(50,70)
			else	number_of_objects 125
			endif
			place_on_specific_land_id 22
			min_distance_to_players 5
			find_closest
			temp_min_distance_group_placement 1
			min_distance_group_placement 1
			set_gaia_object_only
			set_gaia_unconvertible
		}
	endif
endif

/* place markets in corners If the corners have an otherwise useless terrain (very rare) */
if CORNERS_USE_LAND_Z
	create_object TEMPORARY_OBJECT_GRID {
		second_object NEUTRAL_MARKET
		place_on_specific_land_id 3
		max_distance_to_players 0
		actor_area 5999
		actor_area_radius 6
	}
	/* reveal the corners since the market is not visible when playing explored */
	create_object BLANKOBJECT {
		set_place_for_every_player
		number_of_objects 9320
		set_scaling_to_map_size
		avoid_actor_area 5999
		temp_min_distance_group_placement 1
		actor_area 59991
	}
	create_object TEMP_MAP_REVEALER {
		set_place_for_every_player
		number_of_objects 9320
		set_scaling_to_map_size
		avoid_actor_area 59991
		temp_min_distance_group_placement 1
	}	
	create_object BLANKOBJECT {
		place_on_specific_land_id 3
		max_distance_to_players 0
		min_distance_group_placement 20
	}
	
/*
		create_object MARKET {
		set_gaia_object_only
		set_gaia_unconvertible
		make_indestructible 
		start_random	
			percent_chance 94	number_of_objects 1
			percent_chance 5	number_of_objects 0
		end_random
		place_on_specific_land_id 3
		max_distance_to_players 0
		min_distance_group_placement 20
	}
*/
endif



if BATTLE_ROYALE	/* no relics */
else

if USE_RELIC_RUSH	 /* no further relics */
else
	if ALLOW_PERSONAL_RELIC
		start_random
			percent_chance 1	#define USE_PERSONAL_RELIC
		end_random
	endif
endif

/* free personal relic */
if USE_PERSONAL_RELIC
	create_object RELIC {
		set_place_for_every_player
		set_gaia_object_only
		min_distance_to_players 8
		max_distance_to_players 12
		set_circular_placement
		min_distance_group_placement 1
		avoid_forest_zone 2
		avoid_cliff_zone 3
		if USE_STANDARD_RESOURCES
		else /* occasionally double up the relics */
			start_random 
				percent_chance 0	second_object RELIC
			end_random
		endif
	}
endif	


if USE_RELIC_RUSH /* no further relics */

elseif PERSONAL_RESOURCES	/* chokepoint maps */
create_object RELIC {
	if 3-PLAYERS	number_of_objects 2
	else	number_of_objects 1
	endif
	set_place_for_every_player
	set_gaia_object_only
	if 36x36
		min_distance_to_players 13
		max_distance_to_players 18
		temp_min_distance_group_placement 4
	else
		min_distance_to_players 25
		max_distance_to_players 35
		temp_min_distance_group_placement 25
	endif
	set_circular_placement
	min_distance_group_placement 1
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if USE_STANDARD_RESOURCES
	else /* occasionally double up the relics */
		start_random 
			percent_chance 0	second_object RELIC
		end_random
	endif
}

if CENTER_LAND_EXISTS
	if CENTER_IS_LAND	#define RELIC_ON_CENTER
	elseif CENTER_IS_SHALLOWS	#define RELIC_ON_CENTER
	endif
endif

if RELIC_ON_CENTER
elseif BETWEEN_LANDS_EXIST
	if BETWEEN_IS_LAND	#define RELIC_ON_BETWEEN
	elseif BETWEEN_IS_SHALLOWS	#define RELIC_ON_BETWEEN
	endif
endif

if RELIC_ON_CENTER
elseif RELIC_ON_BETWEEN
elseif CORNER_LANDS
	if CORNERS_ARE_LAND	#define RELIC_ON_CORNERS
	elseif CORNERS_ARE_SHALLOWS	#define RELIC_ON_CORNERS
	endif
endif

if RELIC_ON_CENTER
elseif RELIC_ON_BETWEEN
elseif RELIC_ON_CORNERS
elseif SIDE_LANDS
	if SIDES_ARE_LAND	#define RELIC_ON_SIDES
	elseif SIDES_ARE_SHALLOWS	#define RELIC_ON_SIDES
	endif
endif

create_object RELIC {
	if RELIC_ON_CENTER	place_on_specific_land_id 2
	elseif RELIC_ON_BETWEEN	place_on_specific_land_id 1
	elseif RELIC_ON_CORNERS	place_on_specific_land_id 3
	elseif RELIC_ON_SIDES place_on_specific_land_id 4
	else place_on_specific_land_id 99	/* nonexistant */
	endif
	avoid_forest_zone 2
	avoid_cliff_zone 3
	min_distance_to_players 10
	set_circular_placement
	find_closest
	min_distance_group_placement 1
	avoid_actor_area 999
	avoid_actor_area 5999
	if USE_STANDARD_RESOURCES
	else /* occasionally double up the relics */
		start_random 
			percent_chance 0	second_object RELIC
		end_random
	endif
}

elseif USE_5_RELICS
	create_object RELIC {
		max_distance_to_other_zones 2
		avoid_forest_zone 2
		avoid_cliff_zone 3
		number_of_objects 5
		min_distance_to_players 25
		set_circular_placement
		min_distance_group_placement 1
		avoid_actor_area 999
		if 36x36	temp_min_distance_group_placement 5	min_distance_to_players 12
		elseif 60x60	temp_min_distance_group_placement 10
		elseif 80x80	temp_min_distance_group_placement 15
		elseif 100x100	temp_min_distance_group_placement 20
		elseif 120x120	temp_min_distance_group_placement 25
		elseif 144x144	temp_min_distance_group_placement 35
		elseif 168x168	temp_min_distance_group_placement 45
		elseif 200x200	temp_min_distance_group_placement 55
		elseif 220x220	temp_min_distance_group_placement 65
		elseif 240x240	temp_min_distance_group_placement 80
		elseif 252x252	temp_min_distance_group_placement 90
		elseif 276x276	temp_min_distance_group_placement 100
		elseif ENORMOUS_OR_LARGER	temp_min_distance_group_placement 110
		endif
	}
elseif USE_EVENLY_SPACED_RELICS
	create_object RELIC {
		max_distance_to_other_zones 2
		avoid_forest_zone 2
		avoid_cliff_zone 3
		number_of_objects 1000
		min_distance_to_players 25
		set_circular_placement
		min_distance_group_placement 1
		avoid_actor_area 999
		if 36x36	temp_min_distance_group_placement rnd(5,15)	min_distance_to_players 12
		elseif 60x60	temp_min_distance_group_placement rnd(10,30)
		elseif 80x80	temp_min_distance_group_placement rnd(15,35)
		elseif 100x100	temp_min_distance_group_placement rnd(20,40)
		elseif 120x120	temp_min_distance_group_placement rnd(25,45)
		elseif 144x144	temp_min_distance_group_placement rnd(30,45)
		elseif 168x168	temp_min_distance_group_placement rnd(35,55)
		elseif 200x200	temp_min_distance_group_placement rnd(40,65)
		elseif 220x220	temp_min_distance_group_placement rnd(45,75)
		elseif 240x240	temp_min_distance_group_placement rnd(50,90)
		elseif 252x252	temp_min_distance_group_placement rnd(52,95)
		elseif 276x276	temp_min_distance_group_placement rnd(55,95)
		elseif 300x300	temp_min_distance_group_placement rnd(58,100)
		elseif 320x320	temp_min_distance_group_placement rnd(60,105)
		elseif 360x360	temp_min_distance_group_placement rnd(62,110)
		elseif 400x400	temp_min_distance_group_placement rnd(65,115)
		elseif 480x480	temp_min_distance_group_placement rnd(70,120)
		endif
	if USE_STANDARD_RESOURCES
	else /* occasionally double up the relics */
		start_random 
			percent_chance 0	second_object RELIC
		end_random
	endif
	}
elseif USE_DE_RELIC_BALANCE
	create_object RELIC {
		max_distance_to_other_zones 2
		avoid_forest_zone 2
		avoid_cliff_zone 3
		min_distance_to_players 25
		set_circular_placement
		min_distance_group_placement 1
		avoid_actor_area 999
		if 36x36
			number_of_objects 5
			temp_min_distance_group_placement 7
		elseif 60x60
			number_of_objects 5
			temp_min_distance_group_placement 15
		elseif 80x80
			number_of_objects 5
			temp_min_distance_group_placement 20
		elseif 100x100
			number_of_objects 5
			temp_min_distance_group_placement 30
		elseif 120x120
			number_of_objects 5
			temp_min_distance_group_placement 35
		elseif 144x144
			number_of_objects 5
			temp_min_distance_group_placement 38
		elseif 168x168
			number_of_objects 5
			temp_min_distance_group_placement 38
		elseif 200x200
			number_of_objects 7
			temp_min_distance_group_placement 48
		elseif 220x220
			number_of_objects 8
			temp_min_distance_group_placement 52
		else
			number_of_objects 999
			temp_min_distance_group_placement 52 
		endif
	if USE_STANDARD_RESOURCES
	else /* occasionally double up the relics */
		start_random 
			percent_chance 0	second_object RELIC
		end_random
	endif
	}
elseif USE_RANDOM_RELIC_COUNT
	create_object RELIC {
		max_distance_to_other_zones 2
		avoid_forest_zone 2
		avoid_cliff_zone 3
		min_distance_to_players 25
		set_circular_placement
		min_distance_group_placement 1
		avoid_actor_area 999
		start_random
			percent_chance 4	number_of_objects 1	set_scaling_to_player_number if 2_PLAYER_GAME number_of_objects 3 endif
			percent_chance 5	number_of_objects 2	set_scaling_to_player_number
			percent_chance 5	number_of_objects 2	set_scaling_to_map_size	if TINY_OR_SMALLER number_of_objects 3 endif
			percent_chance 5	number_of_objects 3
			percent_chance 5	number_of_objects 3	set_scaling_to_player_number
			percent_chance 5	number_of_objects 3	set_scaling_to_map_size
			percent_chance 5	number_of_objects 4
			percent_chance 5	number_of_objects 4	set_scaling_to_player_number
			percent_chance 5	number_of_objects 4	set_scaling_to_map_size
			percent_chance 5	number_of_objects 5
			percent_chance 5	number_of_objects 5	set_scaling_to_player_number
			percent_chance 5	number_of_objects 5	set_scaling_to_map_size
			percent_chance 25	number_of_objects 5	/* default here */
			percent_chance 5	number_of_objects 6
			percent_chance 5	number_of_objects 6	set_scaling_to_player_number
			percent_chance 5	number_of_objects 6	set_scaling_to_map_size
		end_random
		if 36x36	temp_min_distance_group_placement rnd(5,10)	min_distance_to_players 12
		elseif 60x60	temp_min_distance_group_placement rnd(10,25)
		elseif 80x80	temp_min_distance_group_placement rnd(15,35)
		elseif 100x100	temp_min_distance_group_placement rnd(20,40)
		elseif 120x120	temp_min_distance_group_placement rnd(25,45)
		elseif 144x144	temp_min_distance_group_placement rnd(30,45)
		elseif 168x168	temp_min_distance_group_placement rnd(35,55)
		elseif 200x200	temp_min_distance_group_placement rnd(40,65)
		elseif 220x220	temp_min_distance_group_placement rnd(45,75)
		elseif 240x240	temp_min_distance_group_placement rnd(50,90)
		elseif 252x252	temp_min_distance_group_placement rnd(52,95)
		elseif 276x276	temp_min_distance_group_placement rnd(55,95)
		elseif 300x300	temp_min_distance_group_placement rnd(58,100)
		elseif 320x320	temp_min_distance_group_placement rnd(60,105)
		elseif 360x360	temp_min_distance_group_placement rnd(62,110)
		elseif 400x400	temp_min_distance_group_placement rnd(65,115)
		elseif 480x480	temp_min_distance_group_placement rnd(70,120)
		endif
		if USE_STANDARD_RESOURCES
		else /* occasionally double up the relics */
			start_random 
				percent_chance 0	second_object RELIC
			end_random
		endif
	}
endif

endif
/* relics done */
/* =================================================================================================== */
/* starting resources and map resources */

/* alternative gold and stone styles */
if ALLOW_RESOURCE_ROCKS
	start_random
		percent_chance 33
			#const GOLD_TYPE 841	/* gold rock */
			#const STONE_TYPE 102 /* standard */
		percent_chance 33
			#const GOLD_TYPE 66	/* standard */
			#const STONE_TYPE 839 /* stone rock */
		percent_chance 100
			#const GOLD_TYPE 66	/* standard */
			#const STONE_TYPE 102 /* standard */
	end_random
else
	#const GOLD_TYPE 66	/* standard */
	#const STONE_TYPE 102 /* standard */
endif


if INFINITE_RESOURCES	/* place no resources */
else  /* =================================================================================================== */

if USE_STANDARD_RESOURCES
else
	start_random
		percent_chance 4	#define GIVE_PREDATORS_FOOD
	end_random
endif

if USE_LAND_NOMAD_RESOURCES /* scattered res */
else

/* near forage */
if EMPIRE_WARS	/* primary forage and gold have already been placed */
elseif DEATH_MATCH
else
create_object BERRY_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 6
		group_placement_radius 2	
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-124,250)
		else resource_delta rnd(-100,200)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 10	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 20	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 10	number_of_objects 8
			percent_chance 5	number_of_objects 9
			percent_chance 2	number_of_objects 10
			percent_chance 2	number_of_objects 11
			percent_chance 1	number_of_objects 12
		end_random
		group_placement_radius 3
	endif
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	if MINI_OR_SMALLER
		min_distance_to_players 7
		max_distance_to_players 9
	else
		min_distance_to_players 9
		max_distance_to_players 13
	endif
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
}
endif
if EW_FEUDAL	/* primary forage and gold have already been placed */
else
/* near gold */
create_object GOLD_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 7	
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 5	number_of_objects 4
			percent_chance 10	number_of_objects 5
			percent_chance 15	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 15	number_of_objects 8
			percent_chance 10	number_of_objects 9
			percent_chance 5	number_of_objects 10
			percent_chance 5	number_of_objects 11
			percent_chance 2	number_of_objects 12
			percent_chance 2	number_of_objects 13
			percent_chance 1	number_of_objects 14
		end_random
	endif
	group_placement_radius 3
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	if MINI_OR_SMALLER
		min_distance_to_players 8
		max_distance_to_players 10
	else
		min_distance_to_players 12
		max_distance_to_players 16
	endif
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
}
endif

/* medium gold */
create_object GOLD_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 12	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 30	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 12	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
		group_placement_radius 3
	endif
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	if 36x36
		min_distance_to_players 10
		find_closest
	else
		start_random
			percent_chance 49
				min_distance_to_players 17
				max_distance_to_players 22
			percent_chance 50
				min_distance_to_players 20
				max_distance_to_players 25
		end_random
	endif
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if EMPIRE_WARS
		avoid_actor_area 8
		avoid_actor_area 9
		avoid_actor_area 10
		avoid_actor_area 12
		avoid_actor_area 14
		avoid_actor_area 40
		avoid_actor_area 71
		avoid_actor_area 72
		avoid_actor_area 73
		avoid_actor_area 80
		avoid_actor_area 94
		avoid_actor_area 51
		avoid_actor_area 171
	endif
}

/* far gold */
create_object GOLD_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 12	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 30	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 12	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
		group_placement_radius 3
	endif
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	if 36x36
		min_distance_to_players 12
		find_closest
	else
		start_random
			percent_chance 49
				min_distance_to_players 23
				max_distance_to_players 28
			percent_chance 50
				min_distance_to_players 27
				max_distance_to_players 32
		end_random
	endif
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if EMPIRE_WARS
		avoid_actor_area 8
		avoid_actor_area 9
		avoid_actor_area 10
		avoid_actor_area 12
		avoid_actor_area 14
		avoid_actor_area 40
		avoid_actor_area 71
		avoid_actor_area 72
		avoid_actor_area 73
		avoid_actor_area 80
		avoid_actor_area 94
		avoid_actor_area 51
		avoid_actor_area 171
	endif
}

/* near stone */
create_object STONE_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 5
		group_placement_radius 2
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 10	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
				percent_chance 7	number_of_objects 8
				percent_chance 2	number_of_objects 9
				percent_chance 1	number_of_objects 10
			end_random
		endif
		group_placement_radius 3
	endif
	set_tight_grouping 
	set_gaia_object_only
	set_place_for_every_player
	if 36x36
		min_distance_to_players 10
		find_closest
	else
		min_distance_to_players 13
		max_distance_to_players 18
	endif
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if EMPIRE_WARS
		avoid_actor_area 8
		avoid_actor_area 9
		avoid_actor_area 10
		avoid_actor_area 12
		avoid_actor_area 14
		avoid_actor_area 40
		avoid_actor_area 71
		avoid_actor_area 72
		avoid_actor_area 73
		avoid_actor_area 80
		avoid_actor_area 94
		avoid_actor_area 51
		avoid_actor_area 171
	endif
}

/* far stone */
create_object STONE_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
		group_placement_radius 2
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 15	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 30	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 12	number_of_objects 6
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 12	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 30	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 12	number_of_objects 6
				percent_chance 2	number_of_objects 7
				percent_chance 1	number_of_objects 8
			end_random
		endif
		group_placement_radius 3
	endif
	set_tight_grouping 
	set_gaia_object_only
	set_place_for_every_player
	if 36x36
		min_distance_to_players 12
		find_closest
	else
		start_random
			percent_chance 49
				min_distance_to_players 20
				max_distance_to_players 24
			percent_chance 50
				min_distance_to_players 23
				max_distance_to_players 27
		end_random
	endif
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if EMPIRE_WARS
		avoid_actor_area 8
		avoid_actor_area 9
		avoid_actor_area 10
		avoid_actor_area 12
		avoid_actor_area 14
		avoid_actor_area 40
		avoid_actor_area 71
		avoid_actor_area 72
		avoid_actor_area 73
		avoid_actor_area 80
		avoid_actor_area 94
		avoid_actor_area 51
		avoid_actor_area 171
	endif
}

if DEATH_MATCH 
else
create_object SHEEP_A {
	if USE_STANDARD_RESOURCES
		if SHEEP_A_IS_COW number_of_objects 3
		else number_of_objects 4
		endif
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-99,200)
		else resource_delta rnd(-75,75)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 12	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 30	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 12	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	set_loose_grouping
	set_place_for_every_player
	if USE_NOMAD_SETUP set_gaia_object_only endif
	if EW_FEUDAL min_distance_to_players 12
	elseif EW_DARK min_distance_to_players 12	number_of_objects 2
	else min_distance_to_players 6
	endif
	min_distance_to_players 6
	set_circular_placement
	find_closest
	avoid_forest_zone 2
	avoid_cliff_zone 3
}
endif

if DEATH_MATCH
elseif EW_FEUDAL
else
create_object SHEEP_B {
	if USE_STANDARD_RESOURCES
		number_of_objects 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-99,200)
		else resource_delta rnd(-75,75)
		endif
		start_random
			percent_chance 19	number_of_groups 0
			percent_chance 60	number_of_groups 1
			percent_chance 20	number_of_groups 2
		end_random
		start_random
			percent_chance 4	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 50	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 5	number_of_objects 4
		end_random
	endif
	set_loose_grouping
	set_gaia_object_only
	set_place_for_every_player
	if 36x36
		min_distance_to_players 12
		find_closest
	else
		start_random
			percent_chance 19
				min_distance_to_players 14
				max_distance_to_players 17
			percent_chance 20
				min_distance_to_players 18
				max_distance_to_players 21
			percent_chance 20
				min_distance_to_players 20
				max_distance_to_players 23
			percent_chance 20
				min_distance_to_players 24
				max_distance_to_players 27
			percent_chance 20
				min_distance_to_players 27
				max_distance_to_players 30
		end_random
	endif
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 2
}
if EW_DARK
else

create_object SHEEP_A {
	if USE_STANDARD_RESOURCES
		if SHEEP_A_IS_COW number_of_objects 1
		else number_of_objects 2
		endif
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-99,200)
		else resource_delta rnd(-75,75)
		endif
		start_random
			percent_chance 19	number_of_groups 0
			percent_chance 60	number_of_groups 1
			percent_chance 20	number_of_groups 2
		end_random
		start_random
			percent_chance 4	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 50	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 5	number_of_objects 4
		end_random
	endif
	set_loose_grouping
	set_gaia_object_only
	set_place_for_every_player
	if 36x36
		min_distance_to_players 12
		find_closest
	else
		start_random
			percent_chance 19
				min_distance_to_players 14
				max_distance_to_players 17
			percent_chance 20
				min_distance_to_players 18
				max_distance_to_players 21
			percent_chance 20
				min_distance_to_players 20
				max_distance_to_players 23
			percent_chance 20
				min_distance_to_players 24
				max_distance_to_players 27
			percent_chance 20
				min_distance_to_players 27
				max_distance_to_players 30
		end_random
	endif
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 2
}
endif
endif

if DEATH_MATCH
elseif EW_FEUDAL
else
create_object DEER_A {
	if USE_STANDARD_RESOURCES
		start_random
			percent_chance 49	number_of_objects 4
			percent_chance 50	number_of_objects 3
		end_random
		number_of_groups 1	
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-139,280)
		else resource_delta rnd(-100,100)
		endif
		start_random
			percent_chance 19	number_of_groups 0
			percent_chance 60	number_of_groups 1
			percent_chance 20	number_of_groups 2
		end_random
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 7	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 40	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 7	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	group_placement_radius 3
	set_loose_grouping
	set_gaia_object_only
	set_place_for_every_player
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 2
	if 36x36
		min_distance_to_players 12
		find_closest
	else
		start_random
			percent_chance 19
				min_distance_to_players 14
				max_distance_to_players 17
			percent_chance 20
				min_distance_to_players 18
				max_distance_to_players 21
			percent_chance 20
				min_distance_to_players 20
				max_distance_to_players 23
			percent_chance 20
				min_distance_to_players 24
				max_distance_to_players 27
			percent_chance 20
				min_distance_to_players 27
				max_distance_to_players 30
		end_random
	endif
	set_circular_placement
}

create_object BOAR_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-339,680)
		else resource_delta rnd(-240,240)
		endif
		start_random
			percent_chance 9	number_of_objects 0
			percent_chance 80	number_of_objects 1
			percent_chance 10	number_of_objects 2
		end_random
	endif
	set_gaia_object_only
	set_place_for_every_player
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 1
	if 36x36
		min_distance_to_players 10
		set_circular_placement
		find_closest
	elseif SQUARE_WALLS
		min_distance_to_players 15
		max_distance_to_players 16
	else	
		start_random
			percent_chance 49
				min_distance_to_players 16
				max_distance_to_players 19
			percent_chance 50
				min_distance_to_players 19
				max_distance_to_players 22
		end_random
		set_circular_placement
	endif
}
create_object BOAR_B {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-339,680)
		else resource_delta rnd(-240,240)
		endif
		start_random
			percent_chance 9	number_of_objects 0
			percent_chance 80	number_of_objects 1
			percent_chance 10	number_of_objects 2
		end_random
	endif
	set_gaia_object_only
	set_place_for_every_player
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 1
	if 36x36
		min_distance_to_players 10
		set_circular_placement
		find_closest
	elseif SQUARE_WALLS
		min_distance_to_players 15
		max_distance_to_players 16
	else	
		start_random
			percent_chance 49
				min_distance_to_players 16
				max_distance_to_players 19
			percent_chance 50
				min_distance_to_players 19
				max_distance_to_players 22
		end_random
		set_circular_placement
	endif
}
endif

if USE_NOMAD_SETUP
elseif DEATH_MATCH
else
create_object PREDATOR_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
	else
		if NO_RESOURCE_DELTA
		else if GIVE_PREDATORS_FOOD	resource_delta rnd(0,200) endif
		endif
		start_random
			percent_chance 9	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 40	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 10	number_of_objects 4
		end_random
	endif
	set_gaia_object_only
	set_place_for_every_player
	if 36x36
		min_distance_to_players 18
		find_closest
	else
		start_random
			percent_chance 33
				min_distance_to_players 30
				max_distance_to_players 33
			percent_chance 33
				min_distance_to_players 34
				max_distance_to_players 37
			percent_chance 33
				min_distance_to_players 37
				max_distance_to_players 40
		end_random
	endif
	set_circular_placement
	temp_min_distance_group_placement 15
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 1
}
endif

endif	/* end close player res */

/* =================================================================================================== */
/* scattered map resources */ 

if PERSONAL_RESOURCES   /* on islands/michi style; extra player gold and stone as compensation for no scattered map gold and stone */

create_object GOLD_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 12	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 30	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 12	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	group_placement_radius 3
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 30
	find_closest
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
}

create_object STONE_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 15	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 30	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 12	number_of_objects 6
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 12	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 30	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 12	number_of_objects 6
				percent_chance 2	number_of_objects 7
				percent_chance 1	number_of_objects 8
			end_random
		endif
	endif
	group_placement_radius 3  
	set_tight_grouping 
	set_gaia_object_only
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 30
	find_closest
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
}

if CENTER_LAND_EXISTS
elseif BETWEEN_LANDS_EXIST
elseif CORNER_LANDS
elseif SIDE_LANDS
else	/* if none of these exist, add one more set of far resources */
create_object GOLD {
	if USE_STANDARD_RESOURCES
		number_of_objects 3
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 12	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 30	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 12	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	number_of_objects 3
	group_placement_radius 2
	set_tight_grouping
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 35
	set_circular_placement
	find_closest
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
}

create_object STONE {
	if USE_STANDARD_RESOURCES
		number_of_objects 3
		group_placement_radius 2
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 15	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 30	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 12	number_of_objects 6
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 12	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 30	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 12	number_of_objects 6
				percent_chance 2	number_of_objects 7
				percent_chance 1	number_of_objects 8
			end_random
		endif
	endif
	number_of_objects 3
	group_placement_radius 2  
	set_tight_grouping 
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 35
	set_circular_placement
	find_closest
	min_distance_group_placement 4
	max_distance_to_other_zones 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
}
endif

else /* not personal res -> scatter resources evenly across the map */

create_object BERRY_TYPE {
	if USE_STANDARD_RESOURCES
		group_placement_radius 2
		if USE_LAND_NOMAD_RESOURCES
			number_of_objects 6
			if MINI_OR_SMALLER	temp_min_distance_group_placement 15
			else	temp_min_distance_group_placement 33
			endif
		else
			number_of_objects 4
			min_distance_to_players 40
			temp_min_distance_group_placement 112
		endif
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-124,250)
		else resource_delta rnd(-100,200)
		endif
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 15
			else	temp_min_distance_group_placement rnd(21,44)
			endif
		else
			temp_min_distance_group_placement rnd(56,112)
			min_distance_to_players 40
		endif
		group_variance 3
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 10	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 20	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 10	number_of_objects 8
			percent_chance 5	number_of_objects 9
			percent_chance 2	number_of_objects 10
			percent_chance 2	number_of_objects 11
			percent_chance 1	number_of_objects 12
		end_random
		group_placement_radius 3
	endif
	number_of_groups 9320
	set_circular_placement
    set_tight_grouping
    set_gaia_object_only
	min_distance_group_placement 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}
/* extra gold */
create_object GOLD_TYPE {
	if USE_STANDARD_RESOURCES
		if USE_LAND_NOMAD_RESOURCES
		elseif 36x36	min_distance_to_players 15
		elseif 60x60	min_distance_to_players 30
		else		min_distance_to_players 40
		endif
		if MINI_OR_SMALLER
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 7
				number_of_objects 5
				temp_min_distance_group_placement 10
			else
				number_of_objects 3
				number_of_groups 2
				temp_min_distance_group_placement 20
			endif
		elseif TINY_OR_SMALLER
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 9
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 3
				number_of_groups 2
				temp_min_distance_group_placement 30
			endif
		elseif 144x144
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 12
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 3
				number_of_groups 2
				temp_min_distance_group_placement 30
			endif
		elseif 168x168
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 16
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 3
				number_of_groups 3
				temp_min_distance_group_placement 30
			endif
		elseif 200x200
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 22
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 3
				number_of_groups 3
				temp_min_distance_group_placement 30
			endif
		elseif 220x220
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 30
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 4
				number_of_groups 4
				temp_min_distance_group_placement 30
			endif
		elseif 240x240
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 36
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 4
				number_of_groups 5
				temp_min_distance_group_placement 30
			endif
		elseif 252x252
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 40
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 4
				number_of_groups 6
				temp_min_distance_group_placement 30
			endif
		elseif 276x276
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 44
				number_of_objects 6
				temp_min_distance_group_placement 24
			else
				number_of_objects 4
				number_of_groups 7
				temp_min_distance_group_placement 30
			endif
		elseif ENORMOUS_OR_LARGER
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 90
				number_of_objects 6
				temp_min_distance_group_placement 26
			else
				number_of_objects 4
				number_of_groups 26
				temp_min_distance_group_placement 44
			endif
		endif
		group_placement_radius 2	
	else
		number_of_groups 9320
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 15
			else	temp_min_distance_group_placement rnd(24,40)
			endif
			start_random
				percent_chance 19	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 20	number_of_objects 7
				percent_chance 10	number_of_objects 8
				percent_chance 5	number_of_objects 9
				percent_chance 2	number_of_objects 10
				percent_chance 2	number_of_objects 11
				percent_chance 1	number_of_objects 12
			end_random
		else
			temp_min_distance_group_placement rnd(36,66)
			min_distance_to_players 40
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 2	number_of_objects 2
				percent_chance 5	number_of_objects 3
				percent_chance 10	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 20	number_of_objects 7
				percent_chance 10	number_of_objects 8
				percent_chance 5	number_of_objects 9
				percent_chance 2	number_of_objects 10
				percent_chance 2	number_of_objects 11
				percent_chance 1	number_of_objects 12
			end_random
		endif
		group_variance 2
		group_placement_radius 3
	endif
	set_circular_placement
    set_tight_grouping
    set_gaia_object_only
	min_distance_group_placement 4
	avoid_forest_zone 3
	avoid_cliff_zone 4
	max_distance_to_other_zones 2
}
/* extra stone */
create_object STONE_TYPE {
	if USE_STANDARD_RESOURCES
		if USE_LAND_NOMAD_RESOURCES
		elseif 36x36	min_distance_to_players 15
		elseif 60x60	min_distance_to_players 30
		else		min_distance_to_players 40
		endif
		if MINI_OR_SMALLER
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 5
				number_of_objects 5
				temp_min_distance_group_placement 13
			else
				number_of_objects 2
				number_of_groups 2
				temp_min_distance_group_placement 20
			endif
		elseif TINY_OR_SMALLER
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 9
				number_of_objects 6
				temp_min_distance_group_placement 27
			else
				number_of_objects 2
				number_of_groups 2
				temp_min_distance_group_placement 30
			endif
		elseif 144x144
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 12
				number_of_objects 6
				temp_min_distance_group_placement 27
			else
				number_of_objects 2
				number_of_groups 2
				temp_min_distance_group_placement 30
			endif
		elseif 168x168
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 16
				number_of_objects 6
				temp_min_distance_group_placement 27
			else
				number_of_objects 3
				number_of_groups 2
				temp_min_distance_group_placement 30
			endif
		elseif 200x200
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 20
				number_of_objects 6
				temp_min_distance_group_placement 27
			else
				number_of_objects 4
				number_of_groups 3
				temp_min_distance_group_placement 30
			endif
		elseif 220x220
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 36
				number_of_objects 6
				temp_min_distance_group_placement 27
			else
				number_of_objects 4
				number_of_groups 4
				temp_min_distance_group_placement 30
			endif
		elseif 240x240
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 38
				number_of_objects 6
				temp_min_distance_group_placement 27
			else
				number_of_objects 4
				number_of_groups 9320
				temp_min_distance_group_placement 30
			endif
		elseif 480x480
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 90
				number_of_objects 6
				temp_min_distance_group_placement 30
			else
				number_of_objects 4
				number_of_groups 9320
				temp_min_distance_group_placement 40
			endif
		elseif HUGE_OR_LARGER
			if USE_LAND_NOMAD_RESOURCES
				number_of_groups 40
				number_of_objects 6
				temp_min_distance_group_placement 30
			else
				number_of_objects 4
				number_of_groups 9320
				temp_min_distance_group_placement 30
			endif
		endif
		group_placement_radius 2
	else
		number_of_groups 9320
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 15
			else	temp_min_distance_group_placement rnd(26,44)
			endif
		else
			temp_min_distance_group_placement rnd(40,70)
			min_distance_to_players 40
		endif
		group_variance 2
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 2	number_of_objects 2
				percent_chance 5	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 20	number_of_objects 7
				percent_chance 10	number_of_objects 8
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 2	number_of_objects 2
				percent_chance 5	number_of_objects 3
				percent_chance 10	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 20	number_of_objects 7
				percent_chance 10	number_of_objects 8
				percent_chance 5	number_of_objects 9
				percent_chance 2	number_of_objects 10
				percent_chance 2	number_of_objects 11
				percent_chance 1	number_of_objects 12
			end_random
		endif
		group_placement_radius 3
	endif
	set_circular_placement
    set_tight_grouping
    set_gaia_object_only
	min_distance_group_placement 4
	avoid_forest_zone 3
	avoid_cliff_zone 4
	max_distance_to_other_zones 2
}
endif	/* endif scattered map res */

/* extra animals - always place these */
if DEATH_MATCH
else
create_object SHEEP_A {
	number_of_groups 9320
	set_gaia_object_only
	actor_area 594
	if USE_STANDARD_RESOURCES
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 12 actor_area_radius 8
			else	temp_min_distance_group_placement 22 actor_area_radius 18
			endif
		elseif TINY_OR_SMALLER
			number_of_groups 0
		else
			number_of_objects 2
			temp_min_distance_group_placement 70 actor_area_radius 30
			min_distance_to_players 40
		endif	
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-99,200)
		else resource_delta rnd(-75,75)
		endif
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 12 actor_area_radius 8
			else	temp_min_distance_group_placement rnd(20,33) actor_area_radius 18
			endif
		else
			temp_min_distance_group_placement rnd(40,80) actor_area_radius 30
			min_distance_to_players rnd(40,50)
		endif
		group_variance 1
		start_random
			percent_chance 4	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 50	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 5	number_of_objects 4
		end_random
	endif
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}
create_object SHEEP_B {
	number_of_groups 9320
	set_gaia_object_only
	avoid_actor_area 594
	if USE_STANDARD_RESOURCES
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 12
			else	temp_min_distance_group_placement 22
			endif
		elseif TINY_OR_SMALLER
			number_of_groups 0
		else
			number_of_objects 2
			temp_min_distance_group_placement 70
			min_distance_to_players 40
		endif	
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-99,200)
		else resource_delta rnd(-75,75)
		endif
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 12
			else	temp_min_distance_group_placement rnd(20,33)
			endif
		else
			temp_min_distance_group_placement rnd(40,80)
			min_distance_to_players rnd(40,50)
		endif
		group_variance 1
		start_random
			percent_chance 4	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 50	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 5	number_of_objects 4
		end_random
	endif
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}
create_object DEER_B {
	number_of_groups 9320
	set_gaia_object_only
	actor_area 65
	if USE_STANDARD_RESOURCES
		number_of_objects 3
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 14 actor_area_radius 10
			else	temp_min_distance_group_placement 24 actor_area_radius 20
			endif
		else
			temp_min_distance_group_placement 60 actor_area_radius 30
			min_distance_to_players 40
		endif
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-139,280)
		else resource_delta rnd(-100,100)
		endif
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 12 actor_area_radius 10
			else	temp_min_distance_group_placement rnd(22,38) actor_area_radius 20
			endif
		else
			temp_min_distance_group_placement rnd(40,80) actor_area_radius 30
			min_distance_to_players 40
			
		endif
		group_variance 2
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 4	number_of_objects 1
			percent_chance 15	number_of_objects 2
			percent_chance 60	number_of_objects 3
			percent_chance 15	number_of_objects 4
			percent_chance 4	number_of_objects 5
			percent_chance 1	number_of_objects 6
		end_random
	endif
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}

/* extra hunt animals far from players */
create_object DEER_C {
	if USE_STANDARD_RESOURCES
		if MONKEY_OVERRIDE	number_of_objects 6
		elseif PENGUIN_OVERRIDE	number_of_objects 5
		else	number_of_objects 3
		endif
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 12
			else	temp_min_distance_group_placement 24
			endif
		else
			temp_min_distance_group_placement 60
			min_distance_to_players 45
		endif
	else
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 4	number_of_objects 1
			percent_chance 15	number_of_objects 2
			percent_chance 60	number_of_objects 3
			percent_chance 15	number_of_objects 4
			percent_chance 4	number_of_objects 5
			percent_chance 1	number_of_objects 6
		end_random
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-98,200)
		else resource_delta rnd(-90,90)
		endif
		group_variance 2
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 12
			else	temp_min_distance_group_placement rnd(22,38)
			endif
		else
			temp_min_distance_group_placement rnd(40,80)
			min_distance_to_players 45
		endif
	endif
	number_of_groups 9320
	set_scaling_to_map_size
	set_gaia_object_only
	avoid_actor_area 65
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}

start_random
	percent_chance 49	create_object BOAR_A
	percent_chance 50	create_object BOAR_B
end_random
{
	if USE_STANDARD_RESOURCES
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 15
			else	temp_min_distance_group_placement 27
			endif
		elseif TINY_OR_SMALLER
			number_of_groups 0
		else
			number_of_objects 2
			temp_min_distance_group_placement 80
			min_distance_to_players 50
		endif
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-339,680)
		else resource_delta rnd(-240,240)
		endif
		if USE_LAND_NOMAD_RESOURCES
			if MINI_OR_SMALLER	temp_min_distance_group_placement 15
			else	temp_min_distance_group_placement rnd(24,40)
			endif	
		else
			temp_min_distance_group_placement rnd(40,80)
			min_distance_to_players 50
		endif
		group_variance 1
		start_random
			percent_chance 4	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 50	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 5	number_of_objects 4
		end_random
	endif
	number_of_groups 9320
	set_gaia_object_only
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
}
endif


/* =================================================================================================== */
/* place extra resources on between land(s) */

if BETWEEN_CLUSTER
create_object BERRY_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 6
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-124,250)
		else resource_delta rnd(-100,200)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 10	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 20	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 10	number_of_objects 8
			percent_chance 5	number_of_objects 9
			percent_chance 2	number_of_objects 10
			percent_chance 2	number_of_objects 11
			percent_chance 1	number_of_objects 12
		end_random
		group_placement_radius 3
	endif
	if BETWEEN_IS_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 1
	min_distance_to_players 3
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_BETWEEN
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
	else
		find_closest
	endif
}

create_object GOLD {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 5	number_of_objects 4
			percent_chance 10	number_of_objects 5
			percent_chance 15	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 15	number_of_objects 8
			percent_chance 10	number_of_objects 9
			percent_chance 5	number_of_objects 10
			percent_chance 5	number_of_objects 11
			percent_chance 2	number_of_objects 12
			percent_chance 2	number_of_objects 13
			percent_chance 1	number_of_objects 14
		end_random
		group_placement_radius 3
	endif
	if BETWEEN_IS_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 1
	min_distance_to_players 5
	find_closest
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_BETWEEN
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
		find_closest	
	else
		find_closest
	endif
}

create_object STONE {
	if USE_STANDARD_RESOURCES
		number_of_objects 3
		group_placement_radius 2
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 10	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
				percent_chance 7	number_of_objects 8
				percent_chance 2	number_of_objects 9
				percent_chance 1	number_of_objects 10
			end_random
		endif
		group_placement_radius 3  
	endif
	if BETWEEN_IS_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping 
	set_gaia_object_only
	place_on_specific_land_id 1
	min_distance_to_players 7
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_BETWEEN
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
		find_closest	
	else
		find_closest
	endif
}

if DEATH_MATCH
else
create_object DEER_A {
	if USE_STANDARD_RESOURCES
		start_random
			percent_chance 49	number_of_objects 4
			percent_chance 50	number_of_objects 3
		end_random
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-139,280)
		else resource_delta rnd(-100,100)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 7	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 40	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 7	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	if BETWEEN_IS_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_loose_grouping
	set_gaia_object_only
	place_on_specific_land_id 1
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 2
	min_distance_to_players 9
	if ISOLATED_BETWEEN
		number_of_groups 2
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
		find_closest	
	else
		number_of_groups 1
		find_closest
	endif
}
endif

if USE_NOMAD_SETUP
elseif DEATH_MATCH
else
create_object PREDATOR_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
	else
		if NO_RESOURCE_DELTA
		else if GIVE_PREDATORS_FOOD	resource_delta rnd(0,200) endif
		endif
		start_random
			percent_chance 9	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 40	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 10	number_of_objects 4
		end_random
	endif
	if BETWEEN_IS_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_gaia_object_only
	place_on_specific_land_id 1
	min_distance_to_players 12
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 1
	if ISOLATED_BETWEEN
		number_of_groups 2
		set_scaling_to_map_size
		temp_min_distance_group_placement 25	
	else
		find_closest
	endif
}
endif
endif

if BETWEEN_HUNT
	start_random
		percent_chance 20	create_object BOAR_A
		percent_chance 20	create_object BOAR_B
		percent_chance 20 	create_object DEER_A
		percent_chance 20 	create_object DEER_B
		percent_chance 20 	create_object DEER_C
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-90,200)
			endif
		endif
		number_of_objects rnd(2,6)
		place_on_specific_land_id 1
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
	}
elseif BETWEEN_FISH
	start_random
		percent_chance 33 	create_object FISH_A
		percent_chance 33 	create_object FISH_B
		percent_chance 33 	create_object DEEPFISH_D
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-199,400)
			else resource_delta rnd(-150,150)
			endif
		endif
		number_of_objects rnd(4,12)
		place_on_specific_land_id 1
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
	}
elseif BETWEEN_OYSTERS
	if ALLOW_OYSTERS
		create_object OYSTERS {	#define OYSTER_FIX
		if USE_STANDARD_RESOURCES
			number_of_objects 3
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-449,900)
			else resource_delta rnd(-400,400)
			endif
			number_of_objects rnd(3,7)
			group_variance 2
		endif
		number_of_groups rnd(3,9)
		place_on_specific_land_id 1
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 6
		max_distance_to_other_zones 4
		start_random
			percent_chance 49	set_loose_grouping
			percent_chance 50	set_tight_grouping
		end_random
		}
	endif
endif

if BETWEEN_RUSH
	if NO_STONE_RUSH
		start_random
			percent_chance 29	create_object GOLD_TYPE
			percent_chance 30	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	else
		start_random
			percent_chance 19	create_object GOLD_TYPE
			percent_chance 20	create_object STONE_TYPE
			percent_chance 20	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	endif
	{
		if USE_STANDARD_RESOURCES
			number_of_objects 4
		else
			number_of_objects rnd(3,5)
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-49,200)
			endif
		endif
		if BETWEEN_IS_LAND_X	terrain_to_place_on LAND_X	endif
		number_of_groups rnd(2,8)
		place_on_specific_land_id 1
		if ISOLATED_BETWEEN
		else max_distance_to_players 15 set_circular_placement
		endif
		set_scaling_to_map_size
		group_variance 2
		min_distance_group_placement 4
		temp_min_distance_group_placement 12
		avoid_forest_zone 2
		avoid_cliff_zone 3
		max_distance_to_other_zones 1
		set_loose_grouping
	}	
endif

/* =================================================================================================== */
/* place extra resources on center lands */

if CENTER_CLUSTER
create_object BERRY_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 6
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-124,250)
		else resource_delta rnd(-100,200)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 10	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 20	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 10	number_of_objects 8
			percent_chance 5	number_of_objects 9
			percent_chance 2	number_of_objects 10
			percent_chance 2	number_of_objects 11
			percent_chance 1	number_of_objects 12
		end_random
		group_placement_radius 3
	endif
	if CENTER_IS_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 2
	min_distance_to_players 3
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_CENTER
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25	
	else
		find_closest
	endif
}

create_object GOLD {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 5	number_of_objects 4
			percent_chance 10	number_of_objects 5
			percent_chance 15	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 15	number_of_objects 8
			percent_chance 10	number_of_objects 9
			percent_chance 5	number_of_objects 10
			percent_chance 5	number_of_objects 11
			percent_chance 2	number_of_objects 12
			percent_chance 2	number_of_objects 13
			percent_chance 1	number_of_objects 14
		end_random
		group_placement_radius 3
	endif
	if CENTER_IS_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 2
	min_distance_to_players 5
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_CENTER
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		if QUAD_CENTER
		else	set_scaling_to_map_size
		endif
		temp_min_distance_group_placement 25
		find_closest	
	else
		find_closest
	endif
}

create_object STONE {
	if USE_STANDARD_RESOURCES
		number_of_objects 3
		group_placement_radius 2
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 10	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
				percent_chance 7	number_of_objects 8
				percent_chance 2	number_of_objects 9
				percent_chance 1	number_of_objects 10
			end_random
		endif
		group_placement_radius 3
	endif
	if CENTER_IS_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping 
	set_gaia_object_only
	place_on_specific_land_id 2
	min_distance_to_players 7
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_CENTER
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		if QUAD_CENTER
		else	set_scaling_to_map_size
		endif
		temp_min_distance_group_placement 25
		find_closest	
	else
		find_closest
	endif
}

if DEATH_MATCH
else
create_object DEER_A {
	if USE_STANDARD_RESOURCES
		start_random
			percent_chance 49	number_of_objects 4
			percent_chance 50	number_of_objects 3
		end_random
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-139,280)
		else resource_delta rnd(-100,100)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 7	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 40	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 7	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	if CENTER_IS_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_loose_grouping
	set_gaia_object_only
	place_on_specific_land_id 2
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 2
	min_distance_to_players 9
	if ISOLATED_CENTER
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		if QUAD_CENTER
		else	set_scaling_to_map_size
		endif
		temp_min_distance_group_placement 25
		find_closest	
	else
		number_of_groups 1
		find_closest
	endif
}
endif

if USE_NOMAD_SETUP
elseif DEATH_MATCH
else
create_object PREDATOR_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
	else
		if NO_RESOURCE_DELTA
		else if GIVE_PREDATORS_FOOD	resource_delta rnd(0,200) endif
		endif
		start_random
			percent_chance 9	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 40	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 10	number_of_objects 4
		end_random
	endif
	if CENTER_IS_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_gaia_object_only
	place_on_specific_land_id 2
	min_distance_to_players 12
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 1
	if ISOLATED_CENTER
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 25	
	else
		find_closest
	endif
}
endif
endif	/* end cluster */

if CENTER_HUNT
	start_random
		percent_chance 20	create_object BOAR_A
		percent_chance 20	create_object BOAR_B
		percent_chance 20 	create_object DEER_A
		percent_chance 20 	create_object DEER_B
		percent_chance 20 	create_object DEER_C
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-90,200)
			endif
		endif
		if DOUBLE_CENTER number_of_groups rnd(2,6)
		elseif QUAD_CENTER	number_of_groups rnd(1,4)
		else	number_of_groups rnd(4,12)
		endif
		place_on_specific_land_id 2
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
	}
elseif CENTER_FISH
	start_random
		percent_chance 33 	create_object FISH_A
		percent_chance 33 	create_object FISH_B
		percent_chance 33 	create_object DEEPFISH_D
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-199,400)
			else resource_delta rnd(-150,150)
			endif
		endif
		if DOUBLE_CENTER number_of_groups rnd(3,8)
		elseif QUAD_CENTER	number_of_groups rnd(2,6)
		else	number_of_groups rnd(6,16)
		endif
		place_on_specific_land_id 2
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
	}
elseif CENTER_OYSTERS
	if ALLOW_OYSTERS
		create_object OYSTERS {	#define OYSTER_FIX
		if USE_STANDARD_RESOURCES
			number_of_objects 3
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-449,900)
			else resource_delta rnd(-400,400)
			endif
			number_of_objects rnd(3,7)
			group_variance 2
		endif
		if DOUBLE_CENTER number_of_groups rnd(2,6)
		elseif QUAD_CENTER	number_of_groups rnd(1,4)
		else	number_of_groups rnd(4,12)
		endif
		place_on_specific_land_id 2
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 6
		max_distance_to_other_zones 4
		start_random
			percent_chance 49	set_loose_grouping
			percent_chance 50	set_tight_grouping
		end_random
		}
	endif
endif

if CENTER_RUSH
	if NO_STONE_RUSH
		start_random
			percent_chance 29	create_object GOLD_TYPE
			percent_chance 30	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	else
		start_random
			percent_chance 19	create_object GOLD_TYPE
			percent_chance 20	create_object STONE_TYPE
			percent_chance 20	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	endif
	{
		if USE_STANDARD_RESOURCES
			number_of_objects 4
		else
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-49,200)
			endif
			number_of_objects rnd(4,8)
		endif
		if CENTER_IS_LAND_X	terrain_to_place_on LAND_X	endif
		if DOUBLE_CENTER number_of_groups rnd(2,6)
		elseif QUAD_CENTER	number_of_groups rnd(1,4)
		else	number_of_groups rnd(4,12)
		endif
		if ISOLATED_CENTER
		else max_distance_to_players 15 set_circular_placement
		endif
		group_variance 3
		place_on_specific_land_id 2
		set_scaling_to_map_size
		min_distance_group_placement 4
		temp_min_distance_group_placement 12
		avoid_forest_zone 2
		avoid_cliff_zone 3
		max_distance_to_other_zones 1
		set_loose_grouping
	}
	
	/* predators in center unless nomad */
	if USE_NOMAD_SETUP
	else
		create_object PREDATOR_A {
			if USE_STANDARD_RESOURCES
				number_of_objects 2
			else
				if NO_RESOURCE_DELTA
				else if GIVE_PREDATORS_FOOD	resource_delta rnd(0,200) endif
			endif
				number_of_objects rnd(1,6)
			endif			
			if CENTER_IS_LAND_X	terrain_to_place_on LAND_X	endif
			if DOUBLE_CENTER number_of_groups rnd(0,5)
			elseif QUAD_CENTER	number_of_groups rnd(0,3)
			else number_of_groups rnd(0,10)
			endif
			if ISOLATED_CENTER
			else max_distance_to_players 11	set_circular_placement
			endif
			group_variance 1
			place_on_specific_land_id 2
			set_scaling_to_map_size
			min_distance_group_placement 1
			temp_min_distance_group_placement 12
			avoid_forest_zone 2
			avoid_cliff_zone 3
			max_distance_to_other_zones 1
		}
	endif
endif

/* =================================================================================================== */
/* place extra resources on corner lands */

if CORNER_CLUSTER
create_object BERRY_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 6
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-124,250)
		else resource_delta rnd(-100,200)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 10	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 20	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 10	number_of_objects 8
			percent_chance 5	number_of_objects 9
			percent_chance 2	number_of_objects 10
			percent_chance 2	number_of_objects 11
			percent_chance 1	number_of_objects 12
		end_random
		group_placement_radius 3
	endif
	if CORNERS_USE_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 3
	min_distance_to_players 3
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_CORNERS
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15	
	else
		find_closest
	endif
}
create_object GOLD {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 5	number_of_objects 4
			percent_chance 10	number_of_objects 5
			percent_chance 15	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 15	number_of_objects 8
			percent_chance 10	number_of_objects 9
			percent_chance 5	number_of_objects 10
			percent_chance 5	number_of_objects 11
			percent_chance 2	number_of_objects 12
			percent_chance 2	number_of_objects 13
			percent_chance 1	number_of_objects 14
		end_random
		group_placement_radius 3
	endif
	if CORNERS_USE_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 3
	min_distance_to_players 5
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_CORNERS
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
		find_closest	
	else
		find_closest
	endif
}
create_object STONE {
	if USE_STANDARD_RESOURCES
		number_of_objects 3
		group_placement_radius 2
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 10	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
				percent_chance 7	number_of_objects 8
				percent_chance 2	number_of_objects 9
				percent_chance 1	number_of_objects 10
			end_random
		endif
		group_placement_radius 3  
	endif
	if CORNERS_USE_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping 
	set_gaia_object_only
	place_on_specific_land_id 3
	min_distance_to_players 7
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_CORNERS
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
		find_closest	
	else
		find_closest
	endif
}

if DEATH_MATCH
else
create_object DEER_A {
	if USE_STANDARD_RESOURCES
		start_random
			percent_chance 49	number_of_objects 4
			percent_chance 50	number_of_objects 3
		end_random
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-139,280)
		else resource_delta rnd(-100,100)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 7	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 40	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 7	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	if CORNERS_USE_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_loose_grouping
	set_gaia_object_only
	place_on_specific_land_id 3
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 2
	min_distance_to_players 9
	if ISOLATED_CORNERS
		number_of_groups 2
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
		find_closest	
	else
		number_of_groups 1
		find_closest
	endif
}
endif

if USE_NOMAD_SETUP
elseif DEATH_MATCH
else
create_object PREDATOR_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
	else
		if NO_RESOURCE_DELTA
		else if GIVE_PREDATORS_FOOD	resource_delta rnd(0,200) endif
		endif
		start_random
			percent_chance 9	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 40	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 10	number_of_objects 4
		end_random
	endif
	if CORNERS_USE_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_gaia_object_only
	place_on_specific_land_id 1
	min_distance_to_players 12
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 1
	if ISOLATED_CORNERS
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15	
	else
		find_closest
	endif
}
endif
endif

if CORNER_HUNT
	start_random
		percent_chance 20	create_object BOAR_A
		percent_chance 20	create_object BOAR_B
		percent_chance 20 	create_object DEER_A
		percent_chance 20 	create_object DEER_B
		percent_chance 20 	create_object DEER_C
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-90,200)
			endif
		endif
		number_of_objects rnd(2,6)
		place_on_specific_land_id 3
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
		avoid_actor_area 5999
	}
elseif CORNER_FISH
	start_random
		percent_chance 33 	create_object FISH_A
		percent_chance 33 	create_object FISH_B
		percent_chance 33 	create_object DEEPFISH_D
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-199,400)
			else resource_delta rnd(-150,150)
			endif
		endif
		number_of_objects rnd(4,12)
		place_on_specific_land_id 3
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
		avoid_actor_area 5999
	}
elseif CORNER_OYSTERS
	if ALLOW_OYSTERS
		create_object OYSTERS {	#define OYSTER_FIX
		if USE_STANDARD_RESOURCES
			number_of_objects 3
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-449,900)
			else resource_delta rnd(-400,400)
			endif
			number_of_objects rnd(3,6)
		endif
		number_of_groups rnd(3,9)
		place_on_specific_land_id 3
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 6
		max_distance_to_other_zones 4
		avoid_actor_area 5999
		start_random
			percent_chance 49	set_loose_grouping
			percent_chance 50	set_tight_grouping
		end_random
		}
	endif
endif

if CORNER_RUSH
	if NO_STONE_RUSH
		start_random
			percent_chance 29	create_object GOLD_TYPE
			percent_chance 30	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	else
		start_random
			percent_chance 19	create_object GOLD_TYPE
			percent_chance 20	create_object STONE_TYPE
			percent_chance 20	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	endif
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-49,200)
			endif
		endif
		if CORNERS_USE_LAND_X	terrain_to_place_on LAND_X	endif
		number_of_objects rnd(3,6)
		number_of_groups rnd(2,6)
		if ISOLATED_CORNERS
		else max_distance_to_players 15	set_circular_placement
		endif
		place_on_specific_land_id 3
		set_scaling_to_map_size
		temp_min_distance_group_placement 12
		avoid_forest_zone 2
		avoid_cliff_zone 3
		max_distance_to_other_zones 1
		set_loose_grouping
	}	
endif

/* =================================================================================================== */
/* place extra resources on side lands */

if SIDE_CLUSTER
create_object BERRY_TYPE {
	if USE_STANDARD_RESOURCES
		number_of_objects 6
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-124,250)
		else resource_delta rnd(-100,200)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 10	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 20	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 10	number_of_objects 8
			percent_chance 5	number_of_objects 9
			percent_chance 2	number_of_objects 10
			percent_chance 2	number_of_objects 11
			percent_chance 1	number_of_objects 12
		end_random
		group_placement_radius 3
	endif
	if SIDES_USE_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 4
	min_distance_to_players 3
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_SIDES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15	
	else
		find_closest
	endif
}

create_object GOLD {
	if USE_STANDARD_RESOURCES
		number_of_objects 4
		group_placement_radius 2
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-799,1600)
		else resource_delta rnd(-600,600)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 2	number_of_objects 2
			percent_chance 5	number_of_objects 3
			percent_chance 5	number_of_objects 4
			percent_chance 10	number_of_objects 5
			percent_chance 15	number_of_objects 6
			percent_chance 20	number_of_objects 7
			percent_chance 15	number_of_objects 8
			percent_chance 10	number_of_objects 9
			percent_chance 5	number_of_objects 10
			percent_chance 5	number_of_objects 11
			percent_chance 2	number_of_objects 12
			percent_chance 2	number_of_objects 13
			percent_chance 1	number_of_objects 14
		end_random
		group_placement_radius 3
	endif
	if SIDES_USE_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping
	set_gaia_object_only
	place_on_specific_land_id 4
	min_distance_to_players 5
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_SIDES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
		find_closest	
	else
		find_closest
	endif
}
create_object STONE {
	if USE_STANDARD_RESOURCES
		number_of_objects 3
		group_placement_radius 2
	else
		if LIMIT_STONE
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,350)
			else resource_delta rnd(-250,100)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 20	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
			end_random
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-349,700)
			else resource_delta rnd(-250,400)
			endif
			start_random
				percent_chance 0	number_of_objects 0
				percent_chance 2	number_of_objects 1
				percent_chance 7	number_of_objects 2
				percent_chance 10	number_of_objects 3
				percent_chance 20	number_of_objects 4
				percent_chance 20	number_of_objects 5
				percent_chance 20	number_of_objects 6
				percent_chance 10	number_of_objects 7
				percent_chance 7	number_of_objects 8
				percent_chance 2	number_of_objects 9
				percent_chance 1	number_of_objects 10
			end_random
		endif
		group_placement_radius 3  
	endif
	if SIDES_USE_LAND_X	terrain_to_place_on LAND_X	endif
	set_tight_grouping 
	set_gaia_object_only
	place_on_specific_land_id 4
	min_distance_to_players 7
	set_circular_placement
	min_distance_group_placement 4
	max_distance_to_other_zones 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	if ISOLATED_SIDES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
		find_closest	
	else
		find_closest
	endif
}

if DEATH_MATCH
else
create_object DEER_A {
	if USE_STANDARD_RESOURCES
		start_random
			percent_chance 49	number_of_objects 4
			percent_chance 50	number_of_objects 3
		end_random
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-139,280)
		else resource_delta rnd(-100,100)
		endif
		start_random
			percent_chance 0	number_of_objects 0
			percent_chance 2	number_of_objects 1
			percent_chance 7	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 40	number_of_objects 4
			percent_chance 20	number_of_objects 5
			percent_chance 7	number_of_objects 6
			percent_chance 2	number_of_objects 7
			percent_chance 1	number_of_objects 8
		end_random
	endif
	if SIDES_USE_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_loose_grouping
	set_gaia_object_only
	place_on_specific_land_id 4
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 2
	min_distance_group_placement 2
	min_distance_to_players 9
	if ISOLATED_SIDES
		number_of_groups 2
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
	elseif PERSONAL_RESOURCES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15
		find_closest	
	else
		number_of_groups 1
		find_closest
	endif
}
endif

if USE_NOMAD_SETUP
elseif DEATH_MATCH
else
create_object PREDATOR_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
	else
		if NO_RESOURCE_DELTA
		else if GIVE_PREDATORS_FOOD	resource_delta rnd(0,200) endif
		endif
		start_random
			percent_chance 9	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 40	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 10	number_of_objects 4
		end_random
	endif
	if SIDES_USE_LAND_X	terrain_to_place_on LAND_X	endif
	group_placement_radius 3
	set_gaia_object_only
	place_on_specific_land_id 1
	min_distance_to_players 12
	set_circular_placement
	avoid_forest_zone 2
	avoid_cliff_zone 3
	max_distance_to_other_zones 1
	if ISOLATED_SIDES
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 15	
	else
		find_closest
	endif
}
endif
endif	/* end cluster */

if SIDE_HUNT
	start_random
		percent_chance 20	create_object BOAR_A
		percent_chance 20	create_object BOAR_B
		percent_chance 20 	create_object DEER_A
		percent_chance 20 	create_object DEER_B
		percent_chance 20 	create_object DEER_C
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-90,200)
			endif
		endif
		number_of_objects rnd(2,6)
		place_on_specific_land_id 4
		max_distance_to_players 12
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
	}
elseif SIDE_FISH
	start_random
		percent_chance 33 	create_object FISH_A
		percent_chance 33 	create_object FISH_B
		percent_chance 33 	create_object DEEPFISH_D
	end_random
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-199,400)
			else resource_delta rnd(-150,150)
			endif
		endif
		number_of_objects rnd(4,12)
		place_on_specific_land_id 4
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 3
		max_distance_to_other_zones 4
	}
elseif SIDE_OYSTERS
	if ALLOW_OYSTERS
		create_object OYSTERS {	#define OYSTER_FIX
		if USE_STANDARD_RESOURCES
			number_of_objects 3
		else
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-449,900)
			else resource_delta rnd(-400,400)
			endif
			number_of_objects rnd(3,6)
		endif
		number_of_groups rnd(3,9)
		place_on_specific_land_id 4
		max_distance_to_players 15
		set_circular_placement
		set_scaling_to_map_size
		min_distance_group_placement 2
		temp_min_distance_group_placement 6
		max_distance_to_other_zones 4
		start_random
			percent_chance 49	set_loose_grouping
			percent_chance 50	set_tight_grouping
		end_random
	}
	endif
endif

if SIDE_RUSH
	if NO_STONE_RUSH
		start_random
			percent_chance 29	create_object GOLD_TYPE
			percent_chance 30	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	else
		start_random
			percent_chance 19	create_object GOLD_TYPE
			percent_chance 20	create_object STONE_TYPE
			percent_chance 20	create_object BERRY_TYPE
			percent_chance 5	create_object DEER_A
			percent_chance 5	create_object DEER_B
			percent_chance 5	create_object DEER_C
			percent_chance 5	create_object BOAR_A
			percent_chance 5	create_object BOAR_B
			percent_chance 5	create_object STRAGGLER_A
			percent_chance 5	create_object STRAGGLER_B
			percent_chance 5	create_object STRAGGLER_C
		end_random
	endif
	{
		if USE_STANDARD_RESOURCES
		else
			if NO_RESOURCE_DELTA
			else resource_delta rnd(-49,200)
			endif
		endif
		if SIDES_USE_LAND_X	terrain_to_place_on LAND_X	endif
		number_of_objects rnd(3,68)
		number_of_groups rnd(2,6)
		place_on_specific_land_id 4
		if ISOLATED_CORNERS
		else max_distance_to_players 12	set_circular_placement
		endif
		set_scaling_to_map_size
		min_distance_group_placement 4
		temp_min_distance_group_placement 12
		avoid_forest_zone 2
		avoid_cliff_zone 3
		max_distance_to_other_zones 1
		set_loose_grouping
	}	
endif

/* =================================================================================================== */
/* other map resources */

/* default straggler trees */
if DEATH_MATCH
elseif EMPIRE_WARS
else
create_object STRAGGLER_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 2
	else
		if NO_RESOURCE_DELTA	else resource_delta rnd(-49,200) endif
		number_of_objects rnd(1,3)
	endif
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 4
	max_distance_to_players 5
	set_circular_placement
	min_distance_group_placement 1
}
create_object STRAGGLER_B {
	if USE_STANDARD_RESOURCES
		number_of_objects 3
	else
		if NO_RESOURCE_DELTA	else resource_delta rnd(-49,200) endif
		number_of_objects rnd(2,4)
	endif
	set_gaia_object_only
	set_place_for_every_player
	min_distance_to_players 6
	max_distance_to_players 8
	set_circular_placement
	min_distance_group_placement 1
}
endif

/* birds */
create_object BIRD_A {
	number_of_objects 2
	set_scaling_to_map_size
}
create_object BIRD_B {
	number_of_objects 2
	set_scaling_to_map_size
}
create_object BIRD_C {
	number_of_objects 2
	set_scaling_to_map_size
}

/* scattered wolves */
if USE_NOMAD_SETUP
elseif DEATH_MATCH
else
create_object PREDATOR_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 1
		number_of_groups 1
		set_scaling_to_map_size
		temp_min_distance_group_placement 40
	else
		number_of_groups 9320
		if NO_RESOURCE_DELTA
		else if GIVE_PREDATORS_FOOD	resource_delta rnd(0,200) endif
		endif
		temp_min_distance_group_placement rnd(30,80)
		start_random
			percent_chance 4	number_of_objects 0
			percent_chance 20	number_of_objects 1
			percent_chance 50	number_of_objects 2
			percent_chance 20	number_of_objects 3
			percent_chance 5	number_of_objects 4
		end_random
		group_variance 1
	endif
	set_gaia_object_only
	min_distance_group_placement 1
	avoid_forest_zone 2
	avoid_cliff_zone 3
	min_distance_to_players 40
	set_circular_placement
	max_distance_to_other_zones 2
} 
endif

if DEATH_MATCH
else
/* scattered stragglers */
create_object STRAGGLER_A {
	if USE_STANDARD_RESOURCES
		number_of_objects 10
	else
		if NO_RESOURCE_DELTA	else resource_delta rnd(-49,50) endif
		number_of_groups rnd(5,15)
		number_of_objects 2
		group_variance 1
	endif
	set_gaia_object_only
	set_scaling_to_map_size
	if EW_FEUDAL min_distance_to_players 35
	elseif EW_DARK min_distance_to_players 15
	else min_distance_to_players 8
	endif
	set_circular_placement
	min_distance_group_placement 1
	temp_min_distance_group_placement 12
	avoid_forest_zone 1
	avoid_cliff_zone 2
	max_distance_to_other_zones 1
}
create_object STRAGGLER_B {
	if USE_STANDARD_RESOURCES
		number_of_objects 10
	else
		if NO_RESOURCE_DELTA	else resource_delta rnd(-49,50) endif
		number_of_groups rnd(5,15)
		number_of_objects 2
		group_variance 1
	endif
	set_gaia_object_only
	set_scaling_to_map_size
	if EW_FEUDAL min_distance_to_players 35
	elseif EW_DARK min_distance_to_players 15
	else min_distance_to_players 8
	endif
	set_circular_placement
	min_distance_group_placement 1
	temp_min_distance_group_placement 12
	avoid_forest_zone 1
	avoid_cliff_zone 2
	max_distance_to_other_zones 1
}
create_object STRAGGLER_C {
	if USE_STANDARD_RESOURCES
		number_of_objects 10
	else
		if NO_RESOURCE_DELTA	else resource_delta rnd(-49,50) endif
		number_of_groups rnd(5,15)
		number_of_objects 2
		group_variance 1
	endif
	set_gaia_object_only
	set_scaling_to_map_size
	if EW_FEUDAL min_distance_to_players 35
	elseif EW_DARK min_distance_to_players 15
	else min_distance_to_players 8
	endif
	set_circular_placement
	min_distance_group_placement 1
	temp_min_distance_group_placement 12
	avoid_forest_zone 1
	avoid_cliff_zone 2
	max_distance_to_other_zones 1
}
endif

if USE_STANDARD_RESOURCES
elseif WATER_IS_DRY
elseif FREEZE_ALL_WATER
elseif FREEZE_PRIMARY_AND_SECONDARY_WATER
else
	start_random 
		percent_chance 9 #define USE_LIGHTHOUSE
	end_random
endif

if USE_LIGHTHOUSE
create_object SEA_TOWER {
	number_of_objects 2
	set_scaling_to_player_number
	temp_min_distance_group_placement 40
	set_gaia_object_only
	set_building_capturable
	make_indestructible
	max_distance_to_other_zones 10
	min_distance_group_placement 2
	}
endif

if USE_STANDARD_RESOURCES
else
	start_random 
		percent_chance 0 #define USE_GAIA_TOWER
	end_random
endif

if USE_GAIA_TOWER
	create_object DLC_FORTIFIED_TOWER {
		number_of_objects 1
		set_scaling_to_player_number
		temp_min_distance_group_placement 40
		set_gaia_object_only
		set_building_capturable
		make_indestructible
		min_distance_to_players 40
		set_circular_placement
		min_distance_group_placement 2
		}
endif

if USE_STANDARD_RESOURCES
elseif DESERT_BIOME
	start_random 
		percent_chance 9 #define USE_PYARMID
	end_random
endif

if USE_PYARMID
	create_object PYRAMID {
		number_of_objects 1
		set_scaling_to_player_number
		temp_min_distance_group_placement 60
		set_gaia_object_only
		set_building_capturable
		make_indestructible
		min_distance_to_players 45
		set_circular_placement
		min_distance_group_placement 4
		}
endif

/* =================================================================================================== */
/* fish */

if ALLOW_OYSTERS
	if ANTIQUITY_MODE
		if USE_STANDARD_RESOURCES
			#define USE_OYSTERS
		else
			start_random
				percent_chance 95	#define USE_OYSTERS
			end_random
		endif
	elseif MANGROVE_SWAMP_BIOME
		start_random
			percent_chance 2	#define USE_OYSTERS
		end_random
	elseif SWAMP
		start_random
			percent_chance 2	#define USE_OYSTERS
		end_random	
	else
		start_random
			percent_chance 1	#define USE_OYSTERS
		end_random		
	endif
endif

if ALLOW_OYSTERS
	start_random
		percent_chance 1	#define SHORE_OYSTERS
	end_random
endif

if ONLY_WATER
elseif USE_STANDARD_RESOURCES
else
	start_random
		percent_chance 1	#define NO_FISH
	end_random
endif

if NO_FISH
else /* yes fish */

if 36x36
	if USE_OYSTERS
		create_object OYSTERS { #define OYSTER_FIX
			if USE_STANDARD_RESOURCES
				number_of_objects 2
			else
				if NO_RESOURCE_DELTA
				elseif EXTREME_RESOURCES rnd(-449,900)
				else resource_delta rnd(-400,400)
				endif
				number_of_objects rnd(1,3)
			endif
			set_tight_grouping
			number_of_groups 9320
			max_distance_to_other_zones 3
			min_distance_group_placement 1
			temp_min_distance_group_placement 6
			avoid_actor_area 5999

		}
	endif
	if SHORE_OYSTERS
		create_object OYSTERS { #define OYSTER_FIX
			if USE_STANDARD_RESOURCES
			else
				if NO_RESOURCE_DELTA
				elseif EXTREME_RESOURCES rnd(-449,900)
				else resource_delta rnd(-400,400)
				endif
			endif
			number_of_objects 1
			set_tight_grouping
			number_of_groups 9320
			min_distance_group_placement 1
			temp_min_distance_group_placement 6
			avoid_actor_area 5999
			terrain_to_place_on BEACH_A
		}
	endif
if DEATH_MATCH
else
create_object SHOREFISH_C {
	if USE_STANDARD_RESOURCES
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-150,150)
		endif	
	endif
	number_of_objects 9320
	min_distance_group_placement  1
	temp_min_distance_group_placement 4
}
endif
create_object DEEPFISH_D {
	if USE_STANDARD_RESOURCES
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-200,200)
		endif
	endif
	number_of_objects 9320
	min_distance_group_placement 2 
	temp_min_distance_group_placement 4
	terrain_to_place_on DEEP_WATER
	avoid_actor_area 5999
} 
create_object DEEPFISH_D {
	if USE_STANDARD_RESOURCES
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-200,200)
		endif
	endif
	number_of_objects 9320
	min_distance_group_placement 2 
	temp_min_distance_group_placement 4
	terrain_to_place_on DLC_WATER4
	avoid_actor_area 5999
} 
create_object FISH_A {
	if USE_STANDARD_RESOURCES
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-150,150)
		endif	
	endif
	number_of_objects 9320
	max_distance_to_other_zones 2
	min_distance_group_placement 2
	temp_min_distance_group_placement 6
	avoid_actor_area 5999
}
create_object FISH_B {
	if USE_STANDARD_RESOURCES
	else
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-150,150)
		endif	
	endif
	number_of_objects 9320
	max_distance_to_other_zones 2
	min_distance_group_placement 2
	temp_min_distance_group_placement 6
	avoid_actor_area 5999
}
elseif /* not 36x36 */
	if USE_OYSTERS
		create_object OYSTERS { #define OYSTER_FIX
			if USE_STANDARD_RESOURCES
				number_of_objects 2
			else
				if NO_RESOURCE_DELTA
				elseif EXTREME_RESOURCES rnd(-449,900)
				else resource_delta rnd(-400,400)
				endif
				number_of_objects rnd(1,3)
			endif
			set_tight_grouping
			number_of_groups 9320
			max_distance_to_other_zones 4
			min_distance_group_placement 2
			temp_min_distance_group_placement 16
			avoid_actor_area 5999
		}
	endif
	if SHORE_OYSTERS
		create_object OYSTERS { #define OYSTER_FIX
			if USE_STANDARD_RESOURCES
			else
				if NO_RESOURCE_DELTA
				elseif EXTREME_RESOURCES rnd(-449,900)
				else resource_delta rnd(-400,400)
				endif
			endif
			number_of_objects 1
			set_tight_grouping
			number_of_groups 9320
			min_distance_group_placement 2
			temp_min_distance_group_placement 14
			avoid_actor_area 5999
			terrain_to_place_on BEACH_A
		}
	endif
if DEATH_MATCH
else
	create_object SHOREFISH_C {
		if USE_STANDARD_RESOURCES
			min_distance_group_placement  3
			temp_min_distance_group_placement 7
		else
			min_distance_group_placement rnd(2,5)
			temp_min_distance_group_placement rnd(4,12)
			if NO_RESOURCE_DELTA
			elseif EXTREME_RESOURCES rnd(-199,400)
			else resource_delta rnd(-150,150)
			endif
		endif
		number_of_objects 9320
	}
endif
create_object DEEPFISH_D {
	if USE_STANDARD_RESOURCES
		min_distance_group_placement 4 
		temp_min_distance_group_placement 12
	else
		min_distance_group_placement rnd(3,6) 
		temp_min_distance_group_placement rnd(10,25)
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-200,200)
		endif
	endif
	number_of_objects 9320
	max_distance_to_other_zones 7
	avoid_forest_zone 1
	terrain_to_place_on DEEP_WATER
	avoid_actor_area 5999
} 
create_object DEEPFISH_D {
	if USE_STANDARD_RESOURCES
		min_distance_group_placement 4 
		temp_min_distance_group_placement 12
	else
		min_distance_group_placement rnd(3,6) 
		temp_min_distance_group_placement rnd(10,25)
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-200,200)
		endif
	endif
	number_of_objects 9320
	max_distance_to_other_zones 7
	avoid_forest_zone 1
	terrain_to_place_on DLC_WATER4
	avoid_actor_area 5999
} 
create_object FISH_A {
	if USE_STANDARD_RESOURCES
		min_distance_group_placement 4
		temp_min_distance_group_placement 12
	else
		min_distance_group_placement rnd(3,6)
		temp_min_distance_group_placement rnd(8,22)
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-150,150)
		endif
	endif
	number_of_objects 9320
	max_distance_to_other_zones 4
	avoid_actor_area 5999
}
create_object FISH_B {
	if USE_STANDARD_RESOURCES
		min_distance_group_placement 4
		temp_min_distance_group_placement 12
	else
		min_distance_group_placement rnd(3,6)
		temp_min_distance_group_placement rnd(8,22)
		if NO_RESOURCE_DELTA
		elseif EXTREME_RESOURCES rnd(-199,400)
		else resource_delta rnd(-150,150)
		endif
	endif
	number_of_objects 9320
	max_distance_to_other_zones 4
	avoid_actor_area 5999
}
endif
endif	/* end fish */

endif
/* end of resource generation */

/* small chance to get the flying dog */
start_random
	percent_chance 0	create_object STORMY_DOG { number_of_objects 1 }
end_random

/* small chance to get an iron boar lurking on the map */
if USE_STANDARD_RESOURCES
elseif AI_PLAYERS
elseif USE_NOMAD_SETUP
else
start_random
	percent_chance 0	create_object IRON_BOAR { number_of_objects 1 min_distance_to_players 80 set_circular_placement set_gaia_object_only set_gaia_unconvertible }
	percent_chance 1	create_object HERO_ANIMAL { number_of_objects 1 min_distance_to_players 80 set_circular_placement set_gaia_object_only set_gaia_unconvertible } #define RENAME_PENGUIN
end_random
endif


/* =================================================================================================== */	
<PLAYER_SETUP>
/* second section to affect items not defined initially */

if OYSTER_FIX
	#const ANTIQUITY_FISHING_SHIP 2356
	effect_amount UPGRADE_UNIT FISHING_SHIP ANTIQUITY_FISHING_SHIP 0
endif

if RENAME_PENGUIN
	if ARCTIC_ANIMALS
		effect_amount GAIA_SET_ATTRIBUTE DLC_PENGUIN ATTR_NAME_ID 22118
	endif
endif

/* respawn the merchant */
if USE_GAIA_DOCKS
	if AI_PLAYERS
	else
	effect_amount GAIA_SET_ATTRIBUTE MERCHANT ATTR_DEAD_ID 1572
	endif
endif

/* reset gaia civ to gaia when not using battle royale */
if BATTLE_ROYALE
else set_gaia_civilization 0
endif

/* give autoscout to the scout */
if NO_AUTOSCOUT
else
	effect_amount SET_ATTRIBUTE SCOUT_TYPE ATTR_TRAITS 16
endif

/* keep king scouts from silently attacking */
if KINGSCOUT
	effect_amount SET_ATTRIBUTE SCOUT_TYPE ATTR_MAX_RANGE 0
	effect_amount SET_ATTRIBUTE SCOUT_TYPE ATTR_SHOWN_ATTACK 1
	effect_amount SET_ATTRIBUTE SCOUT_TYPE ATTR_RELOAD_TIME 100
endif

/* set up defence of custom starting buildings */
if GIVE_MONUMENT
	effect_amount SET_ATTRIBUTE MONUMENT_TYPE ATTR_HERO_STATUS 34
	effect_amount SET_ATTRIBUTE MONUMENT_TYPE ATTR_NAME_ID 9763 /* defend the wonder */
	guard_state MONUMENT_TYPE AMOUNT_GOLD 0 1
endif

/* prevent docks from being converted until castle age */
if BOARDING_BOAT
	effect_amount SET_ATTRIBUTE DOCK ATTR_HERO_STATUS 2 /* cannot be converted */
	effect_amount SET_ATTRIBUTE DOCK_F ATTR_HERO_STATUS 2 /* cannot be converted */
endif


/* done */

/* =================================================================================================== */

/*
Changelog 

todo
-pirates
-castle/imperial empire wars
-aoe1 support
-maybe rework water mixing
-different cliff terrain replacement on hills
-add forest underlay
-continue implementing rnd
-gold rocks surrounded by gold
-even player count between lands (start either at 1 or 2)
-allow between lands to use terrain x
-custom faceted forests
-consider water buildings to start - docks ports harbors, sea towers
relic change terrain restrictions perhaps to ensure balance
balance hills and woodlines more
prevent super squished maps
add random regicide!

v6.3
-fishing ships will now be able to gather from oysters even without antiquity mode active
-improved the generation of neutral lands to avoid favoring 1 player
-reduced the occurance of close relic spawns
-island and forest chokepoint maps now spawn with more gold and stone
-neutral islands now have a wider variety of resources
-neutral areas will have more woodlines
-reduced the predator overload on gold rush style maps
-fixed an issue with missing resources for nomad on HR light
-fixed and issue where trapped gaia docks could generate on mangrove maps

v6.2
-forest trees now have random wood amounts between 50% and 150% of the standard amount
-straggler trees vary even more
-improved the spawn positions of starting boats
-fixed a rare chance where a terrain on neutral lands would default to grass
-fixed some strings for beta units
-fixed a hero monkboat being able to convert docks
-the beta relic cart will spawn a flag to help players notice it
-fixed an rare issue where the scout could spawn dead
-HR extreme will now generate gold or stone rocks some of the time

v6.1
-added the chance to start with 2 bases 
-added more variation to the center of the map with 4 way split centers
-fixed an issue where extra TCs could fail to spawn
-fixed an issue where gaia docks could spawn on land
-reduced the maximum resource delta on berries
-gaia docks or markets will now be explored at the start (to help with DM; where they are not visible even though you play explored)
-improved woodline generation on neutral islands
-added mouflons (deer)
-added oysters 
-added oyster-rush and fish-rush style generations
-added new marble cliffs
-removed loose grouping in some cases to prevent missing resources
-reworked how extra starting buildings spawn, to give the chance of starting with several different buildings
-added a separate version that always gives a starting feitoria
-added starting scouts, boats and buildings from the chronicles DLC
-heroes and scenario editor exclusive units will now get autoscout
-fixed an issue where starting boats could fail to spawn
-hero kings now have a very low reload rate, so that they can't get kills
-added a new hyperrandom extreme version, which has greater variety in starting units, buildings, resources, etc.
-added plants on shallows to help indicate where shallows are (only visible if you don't remove useless plants)
-fix the display of attack values for capturable gaia buildings with attack removed

v6
-wild horses/camels/monkeys/penguins can now be hunted like deer
-added the option for neutral lands to spawn between players for more map diversity
-monks are now slower when carrying the relic in CTR
-manually placed monasteries for CTR, instead of using DE's automatic placement
-light version no longer spawns packed TCs on nomad
-light version can now spawn gold-rush style maps
-the option to disable resource delta (modified resources per node) in the script is now available
-fixed a case where the gaia army could be missing from battle royale
-fixed an issue with the attack/armor display on modified units and buildings
-adjusted animal selection to improve diversity and more closely match their natural habitats
-added a very small chance for an aggressive hero animal to spawn far away from players
-the merchant on gaia docks will respawn if killed

v5.9
-disabled autoscout on non-standard scouts due to potential issues with the changes in the new patch

v5.8
-improved the resource generation on super small maps
-fixed an issue where the 3rd unit in the gaia armies was sometimes missing
-disabled the warrior priest on capture the relic
-prevented additional cav archer units from spawning in double or triple configurations
-fixed a case on KotH maps where players could have almost no woodlines
-reduced the chance of getting a map with 0 hills
-changed random blocks to account for the first 1% being overrepresented and the 100% percent being impossible
-fixed an issue with nested percent chances

v5.7
-entirely reworked the connection generation to reduce the number of chokepoint maps
-added support for the new commandline map sizes
-fixed an issue where water maps were generating more shallows than intended
-fixed an issue where gold/stone/food on center islands were not generating as often as intended
-DM cav-archer type scouts are now limited to 1 copy only (might have missed some of the heroes though)
-fixed an issue where too many resources would generate on nomad maps

v5.6
-added support for dm specific changes on all versions
-added hunnic horse as a scout
-added an open land map preset
-greatly reduced the chance of getting socotra-style maps
-added the option to get close starts without socotra-style maps
-made the generations more open on average (especially for 1v1)
-added spy and qizilbash warrior to the trainable units from the monument
-reduced the chance of mangrove swamp maps to 1% (from 2%)

v5.5
-added scouts, buildings and gaia armies from Armenians and Georgians
-added back the possibility of nomad starts without nomad resources (but with a mule cart now)
-biome appropriate cliff styles
-added a DM-specific boat pool as well

v5.4
-Deathmatch changes:
	-removed shore fish
	-removed random empire wars
	-removed nomad
	-DM specific scout pool
	-reduced maximum possible stone
	-reduced maximum possible hills
	-increased chance of open maps	
-removed night time color correction, since players generally did not like it
-increased the chance of players starting close together

v5.3
-allied vision will only activate after a TC is built on nomad starts (requires disabling it in the lobby settings)
-nomad starts on maps with particularly narrow chokepoints will spawn villagers closer together and near the resources
-fixed an issue where nomad could ocurr on island and michi maps
-fixed several issues where water maps would fail to generate any water
-fixed an issue where full water maps were always generating as hybrid maps instead
-increased the amount of water on the water version, and increased the chance to get full water maps

v5.2
-docks cannot be converted until castle age on generations where players spawn with a boarding boat / monk boat
-rebalanced the pool of potential starting boats to remove some of the very strong boats
-tweaked the starting scout pool based on feedback
-fixed some issues related to walled centers
-removed nomad starts and player berries when playing deathmatch

v5.1
-disabled mangrove swamp on land only
-water will not be frozen on water/hybrid only
-central islands are now no longer guaranteed when there is a lake
-fixed an issue where horse scouts would spawn for gaia when nomad was active

v5.0
-dropped support for pre-DE versions of the game (AoC, HD, UP, WK)
-randomized many numerical parameters that were previously set to specific values
-fixed an issue that could result in undockable water
-added content from the RoR DLC including gazelles
-reduced elevation on forest maps
-cleaned up the mangrove maps to have fewer small islands that make it hard to build
-chance for center to be surrounded by walls belonging to every player
-reduced the chance of night-time color correction
-horse scouts now sometimes spawn for nomad starts
-increased animal variety
-added additional presents for always walled/nomad/hybrid maps
-walls no longer sometimes spawn on forest trees
-increased the fairness of maps when playing on 2v2, 3v3, or 4v4 or 2v2v2v2
-increased the map size for water or forest heavy maps
-reduced the chance for a nomad start without enough wood for a TC

v4.1
-non-standard starting scouts will now have the ability to autoscout
-cathedrals/unique scenario editor buildings must now be defended if you start with them
(this is denoted by the respective building being renamed to "Defend the Wonder" and surrounded by flags)
-gaia armies and trainable units from the monument are now disabled in the light version
-warwolf trebuchets are now trained as the packed version so that they can use gather points
-starting house count now does a better job of adapting to starting villager+feitoria count
-added circular placement for all almost all resources and objects
-added a very low chance to get an iron boar (not on the lite version)
-reduced the gaia animal HP regen rate to 5/min (from 10)
-regicide starts now give a scout
-neutral market maps now give a trade cart and also a starting player market
-added Indian DLC content
-gaia armies are now more variable in size
-convertible lighthouses can now spawn on water maps
-convertible towers and pyramids can now spawn - these only give line of sight and no other bonuses
-fixed an issue with the light version where walls would only spawn for nomad starts
-neutral docks may now occasionally spawn on water maps for trading
-neutral markets may now occasionally spawn in the corners for trading
-alpacas can now spawn as the eye-candy animal
-castles for regicide will now always spawn forward (DE only)
-the close starting sheep are now under player control
-added a 14 villager dark age version of empire wars (castle and imperial empire wars might be added in the future)

v4.0
-gaia armies now generate at a much lower frequency
-rebalanced scouts again - 1v1 and TG reduced scout pool unless there are starting walls
-enabled all scouts again for FFA
-reduced the frequency of TC towers

v3.9
-reduced the probability of a feitoria start 
-horses should no longer be trapped in forests
-fixed stats on wild animals after the recent update
-added another failsafe to improve ship spawns
-added a 1% chance to double the relic rush relics

v3.8
-chokepoints made wider on average, especially in 1v1
-removed dire wolves again because they are too buggy
-on 1v1 chokepoint map styles, resources should now be balanced per player
-fixed an issue where less than 3 relics were spawning
-added new terrain masking for the mangrove swamp
-fixed an issue where players could start too close to the center and get immediately wolf-rushed by gaia
-added a 2% chance for water to have no fish at all 
-players are more likely to get a trade cart scout if there is a neutral market
-enabled hero scouts again, but only if players start with stone walls or even stronger walls
-rebalanced the scout probabilities
 
v3.7
-fixed some missing strings for beta units
-reduced the chance of starting with a monk
-increased the total relic count when players start with a 'monk with relic' unit 
-boarding boats and monk boats can now no longer be converted
-reduced maximum food in super fat berry bushes by 100
-feitoria starts will now also have a least 1 house to begin with
 
v.3.6
-activated a 1% chance to get a monument in RM
-added the option of super close starts in the center
-fixed an issue where fishing ships wouldn't spawn when the dock was on shallows. However, they may now sometimes spawn far away from the dock.
-fixed an issue where trees had negative wood
-villagers in nomad will now avoid spawning very close to the map edges
-greatly reduced the occurrences of brown water masking, because it looks to similar to land terrains
-fixed an issue in empire wars where a player's gold could spawn in the enemy town
-fixed an issue with one of the gaia armies
-resources and animals will no longer spawn on tiny bits of land in the middle of the ocean
 
v3.5
-re-balanced resource randomness to make very large amounts of resources less likely
-fixed a bug that prevented triple scout spawns
-fixed an issue that was causing central lands to spawn 100% of the time, where it should only be 50%
-fixed some cases where things set to a chance of 0% could still occur (ex. tiny player islands)
-minimum relic count increased from 1 to 2
-removed the gaia units guarding neutral markets in the corners
-kings in regicide now have hero glow and regeneration
-in KoTH, players will be able to train special units from the monument
-central islands and lakes will be a bit larger on tiny maps
-added more failsafes to make sure starting units and resources spawn properly
-slightly reduced the chance of island and michi layouts
-added a 1% chance to start with an empire wars style base in random map
-increased the chance of non-scout scouts
-a lot of minor bugfixes

v3.4
-increased the available space for folwarks to spawn in Empire Wars
-gaia animals now have (slow) hp regeneration
-player town centers will regenerate hp on sudden death 
-Empire Wars will now spawn villagers on stragglers instead of idle villagers
-these villagers will not spawn if fishing ships are placed on water maps
-reworked the terrains to make hills visually distinct on the minimap
-increased terrain diversity
-fixed a critical bug with missing animals
-added nomad treaty
-African forests can sometimes be less than fully dense now
-removed the gold and stone rocks for now
-replaced a long url that was causing crashes in the CD version
-improved Empire Wars dock placement
-center can now be divided into 2 islands or lakes
-wild horses, camels, penguins and monkeys now spawn
-wildly overpowered starting units (heroes, siege, ranged cavalry, elite unique units) are now disabled by default

v3.3
-fixed a bug with the French battle royale army
-reduced gaia army on relic rush maps
-updated rnd stuff for the July fixes
-increased the chance of a classic land nomad start without resources to build a TC
-added a x256 techs version
-resources will generate on the proper terrain when testing repeatedly in the scenario editor
-side and corner lands can now appear as only 2 instead of 4
-added dire and rabid wolves
-forests, ponds and other terrains will now stay further from starting towns
-randomized color corrections and added the new night time color correction
-added the new birch trees and forest
-added the new muddy shallows terrain
-fixed a new issue with walls on double/triple TC starts
-added objects and buildings from Dawn of the Dukes
-fixed and issue with duplicated walls on multi-TC starts

v3.2
-deepfish should no longer spawn on gravel or shallows or beaches
-normal fish now spawn on shallows
-reduced the overall average fish density
-updated clumping factor values based on new findings by the RMS community
-added the new accumulate_connections attribute
-added a 1% chance to have a nomad start without resources to build a town center
-split far sheep to spawn at separate distances
-central neutral market is now unguarded
-added the chance for neutral corner markets
-updated DE biomes and improved terrain blending (this may break certain generations on pre-DE - contact me if you notice issues)
-fixed an issue that could result in missing resources on mangrove swamp maps
-forest tree wood amount can now vary (1% chance)
-added an experimental option to have infinitely respawning resources (off by default)
-increased randomization of numerical parameters
-adjusted the scattering of nomad resources to be less regular
-updated to the RBW Empire Wars standards

v3.1
-fixed Bulgarian gaia army to not include dead units
-added Burgundian and Sicilian content
-added sea wall as a possible wall type
-fixed a bug with sheep and boar on tiny maps

v3.0
-added full battle royale support!
-removed the packed town center from battle royale, where it is currently buggy
-updated empire wars to reduce the farms, and potentially add fishing ships on water maps
-empire wars now works with regicide and sudden death
-battle royale now works with regicide
-all other combinations of game modes should work now too
-added the option to get overpowered starting boats including hero boats (at a very low chance)
-upgraded the guardians for KoTH from wimpy outlaws to a selection of powerful gaia armies
-tweaked land generation to reduce the chance of excessively small islands
-added the option of side lands to increase the amount of possible layouts

v2.9
-added a wide selection of possible starting buildings
-removed the super-close relic when not on water or michi style maps
-fixed an issue where personal relics were always spawning
-lowered the chance of personal relics 
-lowered the chance of central and corner resources
-adjusted resources and empire wars stuff to more closely match the current DE standards
-added in extra units not previously used such as the stormy dog and the relic cart

v2.8
-re-enabled dolphins, since they are fixed in DE now
-fixed monument resources being blocked by the TC
-fixed a 5% chance to be missing forests entirely on the savannah biome
-filled in corners for walled starts, but only some of the time - also creates walls on water
-reduced chance of walled start from 20% to 10%
-reduced chance of packed town center from 50% to 10% of nomad starts
-removed battle royale start from standard starting units
-reduced chance of island-style start from 24% to 16%
-added chance of UP buildable shallows
-add koth resource trickle for UP
-increased connection width variability
-added the option to get randomly modified starting resource stockpiles (10% chance)
-reduced the chance of super-squished islands
-increased corner land variability

v2.7
-fixed a few typos
-disabled dolphins, since they unfortunately are buggy (sorry about that, I honestly did not know that)
-removed duplicated resources on nomad starts


*/



